//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.03.12 at 09:27:57 AM CET 
//


package no.bibsys.alma.rest.items;

import java.io.Serializable;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals2;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy2;
import org.jvnet.jaxb2_commons.lang.HashCode2;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy2;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString2;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy2;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * A Physical item.
 * 
 * <p>Java class for item complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="item"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;all&gt;
 *         &lt;element name="bib_data" type="{}bib_data" minOccurs="0"/&gt;
 *         &lt;element name="holding_data" type="{}holding_data"/&gt;
 *         &lt;element name="item_data" type="{}item_data"/&gt;
 *         &lt;element name="additional_info" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *       &lt;/all&gt;
 *       &lt;attribute name="link" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "item", propOrder = {

})
@XmlRootElement(name = "item")
public class Item implements Serializable, Equals2, HashCode2, ToString2
{

    @XmlElement(name = "bib_data")
    protected BibData bibData;
    @XmlElement(name = "holding_data", required = true)
    protected HoldingData holdingData;
    @XmlElement(name = "item_data", required = true)
    protected ItemData itemData;
    @XmlElement(name = "additional_info")
    protected String additionalInfo;
    @XmlAttribute(name = "link")
    protected String link;

    /**
     * Gets the value of the bibData property.
     * 
     * @return
     *     possible object is
     *     {@link BibData }
     *     
     */
    public BibData getBibData() {
        return bibData;
    }

    /**
     * Sets the value of the bibData property.
     * 
     * @param value
     *     allowed object is
     *     {@link BibData }
     *     
     */
    public void setBibData(BibData value) {
        this.bibData = value;
    }

    /**
     * Gets the value of the holdingData property.
     * 
     * @return
     *     possible object is
     *     {@link HoldingData }
     *     
     */
    public HoldingData getHoldingData() {
        return holdingData;
    }

    /**
     * Sets the value of the holdingData property.
     * 
     * @param value
     *     allowed object is
     *     {@link HoldingData }
     *     
     */
    public void setHoldingData(HoldingData value) {
        this.holdingData = value;
    }

    /**
     * Gets the value of the itemData property.
     * 
     * @return
     *     possible object is
     *     {@link ItemData }
     *     
     */
    public ItemData getItemData() {
        return itemData;
    }

    /**
     * Sets the value of the itemData property.
     * 
     * @param value
     *     allowed object is
     *     {@link ItemData }
     *     
     */
    public void setItemData(ItemData value) {
        this.itemData = value;
    }

    /**
     * Gets the value of the additionalInfo property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAdditionalInfo() {
        return additionalInfo;
    }

    /**
     * Sets the value of the additionalInfo property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAdditionalInfo(String value) {
        this.additionalInfo = value;
    }

    /**
     * Gets the value of the link property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLink() {
        return link;
    }

    /**
     * Sets the value of the link property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLink(String value) {
        this.link = value;
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy2 strategy) {
        int currentHashCode = 1;
        {
            BibData theBibData;
            theBibData = this.getBibData();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "bibData", theBibData), currentHashCode, theBibData, (this.bibData!= null));
        }
        {
            HoldingData theHoldingData;
            theHoldingData = this.getHoldingData();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "holdingData", theHoldingData), currentHashCode, theHoldingData, (this.holdingData!= null));
        }
        {
            ItemData theItemData;
            theItemData = this.getItemData();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "itemData", theItemData), currentHashCode, theItemData, (this.itemData!= null));
        }
        {
            String theAdditionalInfo;
            theAdditionalInfo = this.getAdditionalInfo();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "additionalInfo", theAdditionalInfo), currentHashCode, theAdditionalInfo, (this.additionalInfo!= null));
        }
        {
            String theLink;
            theLink = this.getLink();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "link", theLink), currentHashCode, theLink, (this.link!= null));
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy2 strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy2 strategy) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final Item that = ((Item) object);
        {
            BibData lhsBibData;
            lhsBibData = this.getBibData();
            BibData rhsBibData;
            rhsBibData = that.getBibData();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "bibData", lhsBibData), LocatorUtils.property(thatLocator, "bibData", rhsBibData), lhsBibData, rhsBibData, (this.bibData!= null), (that.bibData!= null))) {
                return false;
            }
        }
        {
            HoldingData lhsHoldingData;
            lhsHoldingData = this.getHoldingData();
            HoldingData rhsHoldingData;
            rhsHoldingData = that.getHoldingData();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "holdingData", lhsHoldingData), LocatorUtils.property(thatLocator, "holdingData", rhsHoldingData), lhsHoldingData, rhsHoldingData, (this.holdingData!= null), (that.holdingData!= null))) {
                return false;
            }
        }
        {
            ItemData lhsItemData;
            lhsItemData = this.getItemData();
            ItemData rhsItemData;
            rhsItemData = that.getItemData();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "itemData", lhsItemData), LocatorUtils.property(thatLocator, "itemData", rhsItemData), lhsItemData, rhsItemData, (this.itemData!= null), (that.itemData!= null))) {
                return false;
            }
        }
        {
            String lhsAdditionalInfo;
            lhsAdditionalInfo = this.getAdditionalInfo();
            String rhsAdditionalInfo;
            rhsAdditionalInfo = that.getAdditionalInfo();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "additionalInfo", lhsAdditionalInfo), LocatorUtils.property(thatLocator, "additionalInfo", rhsAdditionalInfo), lhsAdditionalInfo, rhsAdditionalInfo, (this.additionalInfo!= null), (that.additionalInfo!= null))) {
                return false;
            }
        }
        {
            String lhsLink;
            lhsLink = this.getLink();
            String rhsLink;
            rhsLink = that.getLink();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "link", lhsLink), LocatorUtils.property(thatLocator, "link", rhsLink), lhsLink, rhsLink, (this.link!= null), (that.link!= null))) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy2 strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public String toString() {
        final ToStringStrategy2 strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        {
            BibData theBibData;
            theBibData = this.getBibData();
            strategy.appendField(locator, this, "bibData", buffer, theBibData, (this.bibData!= null));
        }
        {
            HoldingData theHoldingData;
            theHoldingData = this.getHoldingData();
            strategy.appendField(locator, this, "holdingData", buffer, theHoldingData, (this.holdingData!= null));
        }
        {
            ItemData theItemData;
            theItemData = this.getItemData();
            strategy.appendField(locator, this, "itemData", buffer, theItemData, (this.itemData!= null));
        }
        {
            String theAdditionalInfo;
            theAdditionalInfo = this.getAdditionalInfo();
            strategy.appendField(locator, this, "additionalInfo", buffer, theAdditionalInfo, (this.additionalInfo!= null));
        }
        {
            String theLink;
            theLink = this.getLink();
            strategy.appendField(locator, this, "link", buffer, theLink, (this.link!= null));
        }
        return buffer;
    }

}
