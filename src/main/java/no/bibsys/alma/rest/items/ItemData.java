//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.03.12 at 09:27:57 AM CET 
//


package no.bibsys.alma.rest.items;

import java.io.Serializable;
import java.util.Calendar;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlValue;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import org.jvnet.jaxb2_commons.lang.Equals2;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy2;
import org.jvnet.jaxb2_commons.lang.HashCode2;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy2;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString2;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy2;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;
import org.w3._2001.xmlschema.Adapter1;
import org.w3._2001.xmlschema.Adapter2;


/**
 * Physical Item data.
 * 
 * <p>Java class for item_data complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="item_data"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;all&gt;
 *         &lt;element name="pid" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="barcode" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="creation_date" type="{http://www.w3.org/2001/XMLSchema}date" minOccurs="0"/&gt;
 *         &lt;element name="modification_date" type="{http://www.w3.org/2001/XMLSchema}date" minOccurs="0"/&gt;
 *         &lt;element name="base_status" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;simpleContent&gt;
 *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
 *                 &lt;attribute name="desc" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *               &lt;/extension&gt;
 *             &lt;/simpleContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *         &lt;element name="awaiting_reshelving" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/&gt;
 *         &lt;element name="reshelving_time" type="{http://www.w3.org/2001/XMLSchema}dateTime" minOccurs="0"/&gt;
 *         &lt;element name="physical_material_type" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;simpleContent&gt;
 *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
 *                 &lt;attribute name="desc" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *               &lt;/extension&gt;
 *             &lt;/simpleContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *         &lt;element name="policy" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;simpleContent&gt;
 *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
 *                 &lt;attribute name="desc" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *               &lt;/extension&gt;
 *             &lt;/simpleContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *         &lt;element name="provenance" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;simpleContent&gt;
 *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
 *                 &lt;attribute name="desc" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *               &lt;/extension&gt;
 *             &lt;/simpleContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *         &lt;element name="po_line" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="is_magnetic" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/&gt;
 *         &lt;element name="arrival_date" type="{http://www.w3.org/2001/XMLSchema}date" minOccurs="0"/&gt;
 *         &lt;element name="expected_arrival_date" type="{http://www.w3.org/2001/XMLSchema}date" minOccurs="0"/&gt;
 *         &lt;element name="year_of_issue" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="enumeration_a" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="enumeration_b" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="enumeration_c" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="enumeration_d" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="enumeration_e" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="enumeration_f" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="enumeration_g" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="enumeration_h" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="chronology_i" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="chronology_j" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="chronology_k" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="chronology_l" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="chronology_m" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="description" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="replacement_cost" type="{http://www.w3.org/2001/XMLSchema}float" minOccurs="0"/&gt;
 *         &lt;element name="receiving_operator" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="process_type" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;simpleContent&gt;
 *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
 *                 &lt;attribute name="desc" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *               &lt;/extension&gt;
 *             &lt;/simpleContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *         &lt;element name="work_order_type" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;simpleContent&gt;
 *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
 *                 &lt;attribute name="desc" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *               &lt;/extension&gt;
 *             &lt;/simpleContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *         &lt;element name="work_order_at" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;simpleContent&gt;
 *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
 *                 &lt;attribute name="desc" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *               &lt;/extension&gt;
 *             &lt;/simpleContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *         &lt;element name="inventory_number" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="inventory_date" type="{http://www.w3.org/2001/XMLSchema}date" minOccurs="0"/&gt;
 *         &lt;element name="inventory_price" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="receive_number" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="weeding_number" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="weeding_date" type="{http://www.w3.org/2001/XMLSchema}date" minOccurs="0"/&gt;
 *         &lt;element name="library" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;simpleContent&gt;
 *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
 *                 &lt;attribute name="desc" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *               &lt;/extension&gt;
 *             &lt;/simpleContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *         &lt;element name="location" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;simpleContent&gt;
 *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
 *                 &lt;attribute name="desc" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *               &lt;/extension&gt;
 *             &lt;/simpleContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *         &lt;element name="alternative_call_number" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="alternative_call_number_type" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;simpleContent&gt;
 *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
 *                 &lt;attribute name="desc" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *               &lt;/extension&gt;
 *             &lt;/simpleContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *         &lt;element name="alt_number_source" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="storage_location_id" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="pages" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="pieces" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="public_note" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="fulfillment_note" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="due_date" type="{http://www.w3.org/2001/XMLSchema}dateTime" minOccurs="0"/&gt;
 *         &lt;element name="due_date_policy" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="internal_note_1" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="internal_note_2" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="internal_note_3" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="statistics_note_1" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="statistics_note_2" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="statistics_note_3" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="requested" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/&gt;
 *         &lt;element name="edition" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="imprint" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="language" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="library_details" type="{}library_details" minOccurs="0"/&gt;
 *         &lt;element name="parsed_alt_call_number" type="{}parsed_alt_call_number" minOccurs="0"/&gt;
 *         &lt;element name="parsed_call_number" type="{}parsed_call_number" minOccurs="0"/&gt;
 *         &lt;element name="parsed_issue_level_description" type="{}parsed_issue_level_description" minOccurs="0"/&gt;
 *         &lt;element name="title_abcnph" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="physical_condition" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;simpleContent&gt;
 *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
 *                 &lt;attribute name="desc" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *               &lt;/extension&gt;
 *             &lt;/simpleContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *       &lt;/all&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "item_data", propOrder = {

})
public class ItemData implements Serializable, Equals2, HashCode2, ToString2
{

    protected String pid;
    protected String barcode;
    @XmlElement(name = "creation_date", type = String.class)
    @XmlJavaTypeAdapter(Adapter2 .class)
    @XmlSchemaType(name = "date")
    protected Calendar creationDate;
    @XmlElement(name = "modification_date", type = String.class)
    @XmlJavaTypeAdapter(Adapter2 .class)
    @XmlSchemaType(name = "date")
    protected Calendar modificationDate;
    @XmlElement(name = "base_status")
    protected BaseStatus baseStatus;
    @XmlElement(name = "awaiting_reshelving")
    protected Boolean awaitingReshelving;
    @XmlElement(name = "reshelving_time", type = String.class)
    @XmlJavaTypeAdapter(Adapter1 .class)
    @XmlSchemaType(name = "dateTime")
    protected Calendar reshelvingTime;
    @XmlElement(name = "physical_material_type")
    protected PhysicalMaterialType physicalMaterialType;
    protected Policy policy;
    protected Provenance provenance;
    @XmlElement(name = "po_line")
    protected String poLine;
    @XmlElement(name = "is_magnetic")
    protected Boolean isMagnetic;
    @XmlElement(name = "arrival_date", type = String.class)
    @XmlJavaTypeAdapter(Adapter2 .class)
    @XmlSchemaType(name = "date")
    protected Calendar arrivalDate;
    @XmlElement(name = "expected_arrival_date", type = String.class)
    @XmlJavaTypeAdapter(Adapter2 .class)
    @XmlSchemaType(name = "date")
    protected Calendar expectedArrivalDate;
    @XmlElement(name = "year_of_issue")
    protected String yearOfIssue;
    @XmlElement(name = "enumeration_a")
    protected String enumerationA;
    @XmlElement(name = "enumeration_b")
    protected String enumerationB;
    @XmlElement(name = "enumeration_c")
    protected String enumerationC;
    @XmlElement(name = "enumeration_d")
    protected String enumerationD;
    @XmlElement(name = "enumeration_e")
    protected String enumerationE;
    @XmlElement(name = "enumeration_f")
    protected String enumerationF;
    @XmlElement(name = "enumeration_g")
    protected String enumerationG;
    @XmlElement(name = "enumeration_h")
    protected String enumerationH;
    @XmlElement(name = "chronology_i")
    protected String chronologyI;
    @XmlElement(name = "chronology_j")
    protected String chronologyJ;
    @XmlElement(name = "chronology_k")
    protected String chronologyK;
    @XmlElement(name = "chronology_l")
    protected String chronologyL;
    @XmlElement(name = "chronology_m")
    protected String chronologyM;
    protected String description;
    @XmlElement(name = "replacement_cost")
    protected Float replacementCost;
    @XmlElement(name = "receiving_operator")
    protected String receivingOperator;
    @XmlElement(name = "process_type")
    protected ProcessType processType;
    @XmlElement(name = "work_order_type")
    protected WorkOrderType workOrderType;
    @XmlElement(name = "work_order_at")
    protected WorkOrderAt workOrderAt;
    @XmlElement(name = "inventory_number")
    protected String inventoryNumber;
    @XmlElement(name = "inventory_date", type = String.class)
    @XmlJavaTypeAdapter(Adapter2 .class)
    @XmlSchemaType(name = "date")
    protected Calendar inventoryDate;
    @XmlElement(name = "inventory_price")
    protected String inventoryPrice;
    @XmlElement(name = "receive_number")
    protected String receiveNumber;
    @XmlElement(name = "weeding_number")
    protected String weedingNumber;
    @XmlElement(name = "weeding_date", type = String.class)
    @XmlJavaTypeAdapter(Adapter2 .class)
    @XmlSchemaType(name = "date")
    protected Calendar weedingDate;
    protected Library library;
    protected Location location;
    @XmlElement(name = "alternative_call_number")
    protected String alternativeCallNumber;
    @XmlElement(name = "alternative_call_number_type")
    protected AlternativeCallNumberType alternativeCallNumberType;
    @XmlElement(name = "alt_number_source")
    protected String altNumberSource;
    @XmlElement(name = "storage_location_id")
    protected String storageLocationId;
    protected String pages;
    protected String pieces;
    @XmlElement(name = "public_note")
    protected String publicNote;
    @XmlElement(name = "fulfillment_note")
    protected String fulfillmentNote;
    @XmlElement(name = "due_date", type = String.class)
    @XmlJavaTypeAdapter(Adapter1 .class)
    @XmlSchemaType(name = "dateTime")
    protected Calendar dueDate;
    @XmlElement(name = "due_date_policy")
    protected String dueDatePolicy;
    @XmlElement(name = "internal_note_1")
    protected String internalNote1;
    @XmlElement(name = "internal_note_2")
    protected String internalNote2;
    @XmlElement(name = "internal_note_3")
    protected String internalNote3;
    @XmlElement(name = "statistics_note_1")
    protected String statisticsNote1;
    @XmlElement(name = "statistics_note_2")
    protected String statisticsNote2;
    @XmlElement(name = "statistics_note_3")
    protected String statisticsNote3;
    protected Boolean requested;
    protected String edition;
    protected String imprint;
    protected String language;
    @XmlElement(name = "library_details")
    protected LibraryDetails libraryDetails;
    @XmlElement(name = "parsed_alt_call_number")
    protected ParsedAltCallNumber parsedAltCallNumber;
    @XmlElement(name = "parsed_call_number")
    protected ParsedCallNumber parsedCallNumber;
    @XmlElement(name = "parsed_issue_level_description")
    protected ParsedIssueLevelDescription parsedIssueLevelDescription;
    @XmlElement(name = "title_abcnph")
    protected String titleAbcnph;
    @XmlElement(name = "physical_condition")
    protected PhysicalCondition physicalCondition;

    /**
     * Gets the value of the pid property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPid() {
        return pid;
    }

    /**
     * Sets the value of the pid property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPid(String value) {
        this.pid = value;
    }

    /**
     * Gets the value of the barcode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getBarcode() {
        return barcode;
    }

    /**
     * Sets the value of the barcode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setBarcode(String value) {
        this.barcode = value;
    }

    /**
     * Gets the value of the creationDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public Calendar getCreationDate() {
        return creationDate;
    }

    /**
     * Sets the value of the creationDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCreationDate(Calendar value) {
        this.creationDate = value;
    }

    /**
     * Gets the value of the modificationDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public Calendar getModificationDate() {
        return modificationDate;
    }

    /**
     * Sets the value of the modificationDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setModificationDate(Calendar value) {
        this.modificationDate = value;
    }

    /**
     * Gets the value of the baseStatus property.
     * 
     * @return
     *     possible object is
     *     {@link BaseStatus }
     *     
     */
    public BaseStatus getBaseStatus() {
        return baseStatus;
    }

    /**
     * Sets the value of the baseStatus property.
     * 
     * @param value
     *     allowed object is
     *     {@link BaseStatus }
     *     
     */
    public void setBaseStatus(BaseStatus value) {
        this.baseStatus = value;
    }

    /**
     * Gets the value of the awaitingReshelving property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isAwaitingReshelving() {
        return awaitingReshelving;
    }

    /**
     * Sets the value of the awaitingReshelving property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setAwaitingReshelving(Boolean value) {
        this.awaitingReshelving = value;
    }

    /**
     * Gets the value of the reshelvingTime property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public Calendar getReshelvingTime() {
        return reshelvingTime;
    }

    /**
     * Sets the value of the reshelvingTime property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setReshelvingTime(Calendar value) {
        this.reshelvingTime = value;
    }

    /**
     * Gets the value of the physicalMaterialType property.
     * 
     * @return
     *     possible object is
     *     {@link PhysicalMaterialType }
     *     
     */
    public PhysicalMaterialType getPhysicalMaterialType() {
        return physicalMaterialType;
    }

    /**
     * Sets the value of the physicalMaterialType property.
     * 
     * @param value
     *     allowed object is
     *     {@link PhysicalMaterialType }
     *     
     */
    public void setPhysicalMaterialType(PhysicalMaterialType value) {
        this.physicalMaterialType = value;
    }

    /**
     * Gets the value of the policy property.
     * 
     * @return
     *     possible object is
     *     {@link Policy }
     *     
     */
    public Policy getPolicy() {
        return policy;
    }

    /**
     * Sets the value of the policy property.
     * 
     * @param value
     *     allowed object is
     *     {@link Policy }
     *     
     */
    public void setPolicy(Policy value) {
        this.policy = value;
    }

    /**
     * Gets the value of the provenance property.
     * 
     * @return
     *     possible object is
     *     {@link Provenance }
     *     
     */
    public Provenance getProvenance() {
        return provenance;
    }

    /**
     * Sets the value of the provenance property.
     * 
     * @param value
     *     allowed object is
     *     {@link Provenance }
     *     
     */
    public void setProvenance(Provenance value) {
        this.provenance = value;
    }

    /**
     * Gets the value of the poLine property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPoLine() {
        return poLine;
    }

    /**
     * Sets the value of the poLine property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPoLine(String value) {
        this.poLine = value;
    }

    /**
     * Gets the value of the isMagnetic property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isIsMagnetic() {
        return isMagnetic;
    }

    /**
     * Sets the value of the isMagnetic property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setIsMagnetic(Boolean value) {
        this.isMagnetic = value;
    }

    /**
     * Gets the value of the arrivalDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public Calendar getArrivalDate() {
        return arrivalDate;
    }

    /**
     * Sets the value of the arrivalDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setArrivalDate(Calendar value) {
        this.arrivalDate = value;
    }

    /**
     * Gets the value of the expectedArrivalDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public Calendar getExpectedArrivalDate() {
        return expectedArrivalDate;
    }

    /**
     * Sets the value of the expectedArrivalDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setExpectedArrivalDate(Calendar value) {
        this.expectedArrivalDate = value;
    }

    /**
     * Gets the value of the yearOfIssue property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getYearOfIssue() {
        return yearOfIssue;
    }

    /**
     * Sets the value of the yearOfIssue property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setYearOfIssue(String value) {
        this.yearOfIssue = value;
    }

    /**
     * Gets the value of the enumerationA property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEnumerationA() {
        return enumerationA;
    }

    /**
     * Sets the value of the enumerationA property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEnumerationA(String value) {
        this.enumerationA = value;
    }

    /**
     * Gets the value of the enumerationB property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEnumerationB() {
        return enumerationB;
    }

    /**
     * Sets the value of the enumerationB property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEnumerationB(String value) {
        this.enumerationB = value;
    }

    /**
     * Gets the value of the enumerationC property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEnumerationC() {
        return enumerationC;
    }

    /**
     * Sets the value of the enumerationC property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEnumerationC(String value) {
        this.enumerationC = value;
    }

    /**
     * Gets the value of the enumerationD property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEnumerationD() {
        return enumerationD;
    }

    /**
     * Sets the value of the enumerationD property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEnumerationD(String value) {
        this.enumerationD = value;
    }

    /**
     * Gets the value of the enumerationE property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEnumerationE() {
        return enumerationE;
    }

    /**
     * Sets the value of the enumerationE property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEnumerationE(String value) {
        this.enumerationE = value;
    }

    /**
     * Gets the value of the enumerationF property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEnumerationF() {
        return enumerationF;
    }

    /**
     * Sets the value of the enumerationF property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEnumerationF(String value) {
        this.enumerationF = value;
    }

    /**
     * Gets the value of the enumerationG property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEnumerationG() {
        return enumerationG;
    }

    /**
     * Sets the value of the enumerationG property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEnumerationG(String value) {
        this.enumerationG = value;
    }

    /**
     * Gets the value of the enumerationH property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEnumerationH() {
        return enumerationH;
    }

    /**
     * Sets the value of the enumerationH property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEnumerationH(String value) {
        this.enumerationH = value;
    }

    /**
     * Gets the value of the chronologyI property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getChronologyI() {
        return chronologyI;
    }

    /**
     * Sets the value of the chronologyI property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setChronologyI(String value) {
        this.chronologyI = value;
    }

    /**
     * Gets the value of the chronologyJ property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getChronologyJ() {
        return chronologyJ;
    }

    /**
     * Sets the value of the chronologyJ property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setChronologyJ(String value) {
        this.chronologyJ = value;
    }

    /**
     * Gets the value of the chronologyK property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getChronologyK() {
        return chronologyK;
    }

    /**
     * Sets the value of the chronologyK property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setChronologyK(String value) {
        this.chronologyK = value;
    }

    /**
     * Gets the value of the chronologyL property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getChronologyL() {
        return chronologyL;
    }

    /**
     * Sets the value of the chronologyL property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setChronologyL(String value) {
        this.chronologyL = value;
    }

    /**
     * Gets the value of the chronologyM property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getChronologyM() {
        return chronologyM;
    }

    /**
     * Sets the value of the chronologyM property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setChronologyM(String value) {
        this.chronologyM = value;
    }

    /**
     * Gets the value of the description property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDescription() {
        return description;
    }

    /**
     * Sets the value of the description property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDescription(String value) {
        this.description = value;
    }

    /**
     * Gets the value of the replacementCost property.
     * 
     * @return
     *     possible object is
     *     {@link Float }
     *     
     */
    public Float getReplacementCost() {
        return replacementCost;
    }

    /**
     * Sets the value of the replacementCost property.
     * 
     * @param value
     *     allowed object is
     *     {@link Float }
     *     
     */
    public void setReplacementCost(Float value) {
        this.replacementCost = value;
    }

    /**
     * Gets the value of the receivingOperator property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getReceivingOperator() {
        return receivingOperator;
    }

    /**
     * Sets the value of the receivingOperator property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setReceivingOperator(String value) {
        this.receivingOperator = value;
    }

    /**
     * Gets the value of the processType property.
     * 
     * @return
     *     possible object is
     *     {@link ProcessType }
     *     
     */
    public ProcessType getProcessType() {
        return processType;
    }

    /**
     * Sets the value of the processType property.
     * 
     * @param value
     *     allowed object is
     *     {@link ProcessType }
     *     
     */
    public void setProcessType(ProcessType value) {
        this.processType = value;
    }

    /**
     * Gets the value of the workOrderType property.
     * 
     * @return
     *     possible object is
     *     {@link WorkOrderType }
     *     
     */
    public WorkOrderType getWorkOrderType() {
        return workOrderType;
    }

    /**
     * Sets the value of the workOrderType property.
     * 
     * @param value
     *     allowed object is
     *     {@link WorkOrderType }
     *     
     */
    public void setWorkOrderType(WorkOrderType value) {
        this.workOrderType = value;
    }

    /**
     * Gets the value of the workOrderAt property.
     * 
     * @return
     *     possible object is
     *     {@link WorkOrderAt }
     *     
     */
    public WorkOrderAt getWorkOrderAt() {
        return workOrderAt;
    }

    /**
     * Sets the value of the workOrderAt property.
     * 
     * @param value
     *     allowed object is
     *     {@link WorkOrderAt }
     *     
     */
    public void setWorkOrderAt(WorkOrderAt value) {
        this.workOrderAt = value;
    }

    /**
     * Gets the value of the inventoryNumber property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getInventoryNumber() {
        return inventoryNumber;
    }

    /**
     * Sets the value of the inventoryNumber property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setInventoryNumber(String value) {
        this.inventoryNumber = value;
    }

    /**
     * Gets the value of the inventoryDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public Calendar getInventoryDate() {
        return inventoryDate;
    }

    /**
     * Sets the value of the inventoryDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setInventoryDate(Calendar value) {
        this.inventoryDate = value;
    }

    /**
     * Gets the value of the inventoryPrice property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getInventoryPrice() {
        return inventoryPrice;
    }

    /**
     * Sets the value of the inventoryPrice property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setInventoryPrice(String value) {
        this.inventoryPrice = value;
    }

    /**
     * Gets the value of the receiveNumber property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getReceiveNumber() {
        return receiveNumber;
    }

    /**
     * Sets the value of the receiveNumber property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setReceiveNumber(String value) {
        this.receiveNumber = value;
    }

    /**
     * Gets the value of the weedingNumber property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getWeedingNumber() {
        return weedingNumber;
    }

    /**
     * Sets the value of the weedingNumber property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setWeedingNumber(String value) {
        this.weedingNumber = value;
    }

    /**
     * Gets the value of the weedingDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public Calendar getWeedingDate() {
        return weedingDate;
    }

    /**
     * Sets the value of the weedingDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setWeedingDate(Calendar value) {
        this.weedingDate = value;
    }

    /**
     * Gets the value of the library property.
     * 
     * @return
     *     possible object is
     *     {@link Library }
     *     
     */
    public Library getLibrary() {
        return library;
    }

    /**
     * Sets the value of the library property.
     * 
     * @param value
     *     allowed object is
     *     {@link Library }
     *     
     */
    public void setLibrary(Library value) {
        this.library = value;
    }

    /**
     * Gets the value of the location property.
     * 
     * @return
     *     possible object is
     *     {@link Location }
     *     
     */
    public Location getLocation() {
        return location;
    }

    /**
     * Sets the value of the location property.
     * 
     * @param value
     *     allowed object is
     *     {@link Location }
     *     
     */
    public void setLocation(Location value) {
        this.location = value;
    }

    /**
     * Gets the value of the alternativeCallNumber property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAlternativeCallNumber() {
        return alternativeCallNumber;
    }

    /**
     * Sets the value of the alternativeCallNumber property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAlternativeCallNumber(String value) {
        this.alternativeCallNumber = value;
    }

    /**
     * Gets the value of the alternativeCallNumberType property.
     * 
     * @return
     *     possible object is
     *     {@link AlternativeCallNumberType }
     *     
     */
    public AlternativeCallNumberType getAlternativeCallNumberType() {
        return alternativeCallNumberType;
    }

    /**
     * Sets the value of the alternativeCallNumberType property.
     * 
     * @param value
     *     allowed object is
     *     {@link AlternativeCallNumberType }
     *     
     */
    public void setAlternativeCallNumberType(AlternativeCallNumberType value) {
        this.alternativeCallNumberType = value;
    }

    /**
     * Gets the value of the altNumberSource property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAltNumberSource() {
        return altNumberSource;
    }

    /**
     * Sets the value of the altNumberSource property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAltNumberSource(String value) {
        this.altNumberSource = value;
    }

    /**
     * Gets the value of the storageLocationId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getStorageLocationId() {
        return storageLocationId;
    }

    /**
     * Sets the value of the storageLocationId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setStorageLocationId(String value) {
        this.storageLocationId = value;
    }

    /**
     * Gets the value of the pages property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPages() {
        return pages;
    }

    /**
     * Sets the value of the pages property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPages(String value) {
        this.pages = value;
    }

    /**
     * Gets the value of the pieces property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPieces() {
        return pieces;
    }

    /**
     * Sets the value of the pieces property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPieces(String value) {
        this.pieces = value;
    }

    /**
     * Gets the value of the publicNote property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPublicNote() {
        return publicNote;
    }

    /**
     * Sets the value of the publicNote property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPublicNote(String value) {
        this.publicNote = value;
    }

    /**
     * Gets the value of the fulfillmentNote property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFulfillmentNote() {
        return fulfillmentNote;
    }

    /**
     * Sets the value of the fulfillmentNote property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFulfillmentNote(String value) {
        this.fulfillmentNote = value;
    }

    /**
     * Gets the value of the dueDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public Calendar getDueDate() {
        return dueDate;
    }

    /**
     * Sets the value of the dueDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDueDate(Calendar value) {
        this.dueDate = value;
    }

    /**
     * Gets the value of the dueDatePolicy property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDueDatePolicy() {
        return dueDatePolicy;
    }

    /**
     * Sets the value of the dueDatePolicy property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDueDatePolicy(String value) {
        this.dueDatePolicy = value;
    }

    /**
     * Gets the value of the internalNote1 property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getInternalNote1() {
        return internalNote1;
    }

    /**
     * Sets the value of the internalNote1 property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setInternalNote1(String value) {
        this.internalNote1 = value;
    }

    /**
     * Gets the value of the internalNote2 property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getInternalNote2() {
        return internalNote2;
    }

    /**
     * Sets the value of the internalNote2 property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setInternalNote2(String value) {
        this.internalNote2 = value;
    }

    /**
     * Gets the value of the internalNote3 property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getInternalNote3() {
        return internalNote3;
    }

    /**
     * Sets the value of the internalNote3 property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setInternalNote3(String value) {
        this.internalNote3 = value;
    }

    /**
     * Gets the value of the statisticsNote1 property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getStatisticsNote1() {
        return statisticsNote1;
    }

    /**
     * Sets the value of the statisticsNote1 property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setStatisticsNote1(String value) {
        this.statisticsNote1 = value;
    }

    /**
     * Gets the value of the statisticsNote2 property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getStatisticsNote2() {
        return statisticsNote2;
    }

    /**
     * Sets the value of the statisticsNote2 property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setStatisticsNote2(String value) {
        this.statisticsNote2 = value;
    }

    /**
     * Gets the value of the statisticsNote3 property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getStatisticsNote3() {
        return statisticsNote3;
    }

    /**
     * Sets the value of the statisticsNote3 property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setStatisticsNote3(String value) {
        this.statisticsNote3 = value;
    }

    /**
     * Gets the value of the requested property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isRequested() {
        return requested;
    }

    /**
     * Sets the value of the requested property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setRequested(Boolean value) {
        this.requested = value;
    }

    /**
     * Gets the value of the edition property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEdition() {
        return edition;
    }

    /**
     * Sets the value of the edition property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEdition(String value) {
        this.edition = value;
    }

    /**
     * Gets the value of the imprint property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getImprint() {
        return imprint;
    }

    /**
     * Sets the value of the imprint property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setImprint(String value) {
        this.imprint = value;
    }

    /**
     * Gets the value of the language property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLanguage() {
        return language;
    }

    /**
     * Sets the value of the language property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLanguage(String value) {
        this.language = value;
    }

    /**
     * Gets the value of the libraryDetails property.
     * 
     * @return
     *     possible object is
     *     {@link LibraryDetails }
     *     
     */
    public LibraryDetails getLibraryDetails() {
        return libraryDetails;
    }

    /**
     * Sets the value of the libraryDetails property.
     * 
     * @param value
     *     allowed object is
     *     {@link LibraryDetails }
     *     
     */
    public void setLibraryDetails(LibraryDetails value) {
        this.libraryDetails = value;
    }

    /**
     * Gets the value of the parsedAltCallNumber property.
     * 
     * @return
     *     possible object is
     *     {@link ParsedAltCallNumber }
     *     
     */
    public ParsedAltCallNumber getParsedAltCallNumber() {
        return parsedAltCallNumber;
    }

    /**
     * Sets the value of the parsedAltCallNumber property.
     * 
     * @param value
     *     allowed object is
     *     {@link ParsedAltCallNumber }
     *     
     */
    public void setParsedAltCallNumber(ParsedAltCallNumber value) {
        this.parsedAltCallNumber = value;
    }

    /**
     * Gets the value of the parsedCallNumber property.
     * 
     * @return
     *     possible object is
     *     {@link ParsedCallNumber }
     *     
     */
    public ParsedCallNumber getParsedCallNumber() {
        return parsedCallNumber;
    }

    /**
     * Sets the value of the parsedCallNumber property.
     * 
     * @param value
     *     allowed object is
     *     {@link ParsedCallNumber }
     *     
     */
    public void setParsedCallNumber(ParsedCallNumber value) {
        this.parsedCallNumber = value;
    }

    /**
     * Gets the value of the parsedIssueLevelDescription property.
     * 
     * @return
     *     possible object is
     *     {@link ParsedIssueLevelDescription }
     *     
     */
    public ParsedIssueLevelDescription getParsedIssueLevelDescription() {
        return parsedIssueLevelDescription;
    }

    /**
     * Sets the value of the parsedIssueLevelDescription property.
     * 
     * @param value
     *     allowed object is
     *     {@link ParsedIssueLevelDescription }
     *     
     */
    public void setParsedIssueLevelDescription(ParsedIssueLevelDescription value) {
        this.parsedIssueLevelDescription = value;
    }

    /**
     * Gets the value of the titleAbcnph property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTitleAbcnph() {
        return titleAbcnph;
    }

    /**
     * Sets the value of the titleAbcnph property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTitleAbcnph(String value) {
        this.titleAbcnph = value;
    }

    /**
     * Gets the value of the physicalCondition property.
     * 
     * @return
     *     possible object is
     *     {@link PhysicalCondition }
     *     
     */
    public PhysicalCondition getPhysicalCondition() {
        return physicalCondition;
    }

    /**
     * Sets the value of the physicalCondition property.
     * 
     * @param value
     *     allowed object is
     *     {@link PhysicalCondition }
     *     
     */
    public void setPhysicalCondition(PhysicalCondition value) {
        this.physicalCondition = value;
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy2 strategy) {
        int currentHashCode = 1;
        {
            String thePid;
            thePid = this.getPid();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "pid", thePid), currentHashCode, thePid, (this.pid!= null));
        }
        {
            String theBarcode;
            theBarcode = this.getBarcode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "barcode", theBarcode), currentHashCode, theBarcode, (this.barcode!= null));
        }
        {
            Calendar theCreationDate;
            theCreationDate = this.getCreationDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "creationDate", theCreationDate), currentHashCode, theCreationDate, (this.creationDate!= null));
        }
        {
            Calendar theModificationDate;
            theModificationDate = this.getModificationDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "modificationDate", theModificationDate), currentHashCode, theModificationDate, (this.modificationDate!= null));
        }
        {
            BaseStatus theBaseStatus;
            theBaseStatus = this.getBaseStatus();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "baseStatus", theBaseStatus), currentHashCode, theBaseStatus, (this.baseStatus!= null));
        }
        {
            Boolean theAwaitingReshelving;
            theAwaitingReshelving = this.isAwaitingReshelving();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "awaitingReshelving", theAwaitingReshelving), currentHashCode, theAwaitingReshelving, (this.awaitingReshelving!= null));
        }
        {
            Calendar theReshelvingTime;
            theReshelvingTime = this.getReshelvingTime();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "reshelvingTime", theReshelvingTime), currentHashCode, theReshelvingTime, (this.reshelvingTime!= null));
        }
        {
            PhysicalMaterialType thePhysicalMaterialType;
            thePhysicalMaterialType = this.getPhysicalMaterialType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "physicalMaterialType", thePhysicalMaterialType), currentHashCode, thePhysicalMaterialType, (this.physicalMaterialType!= null));
        }
        {
            Policy thePolicy;
            thePolicy = this.getPolicy();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "policy", thePolicy), currentHashCode, thePolicy, (this.policy!= null));
        }
        {
            Provenance theProvenance;
            theProvenance = this.getProvenance();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "provenance", theProvenance), currentHashCode, theProvenance, (this.provenance!= null));
        }
        {
            String thePoLine;
            thePoLine = this.getPoLine();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "poLine", thePoLine), currentHashCode, thePoLine, (this.poLine!= null));
        }
        {
            Boolean theIsMagnetic;
            theIsMagnetic = this.isIsMagnetic();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "isMagnetic", theIsMagnetic), currentHashCode, theIsMagnetic, (this.isMagnetic!= null));
        }
        {
            Calendar theArrivalDate;
            theArrivalDate = this.getArrivalDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "arrivalDate", theArrivalDate), currentHashCode, theArrivalDate, (this.arrivalDate!= null));
        }
        {
            Calendar theExpectedArrivalDate;
            theExpectedArrivalDate = this.getExpectedArrivalDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "expectedArrivalDate", theExpectedArrivalDate), currentHashCode, theExpectedArrivalDate, (this.expectedArrivalDate!= null));
        }
        {
            String theYearOfIssue;
            theYearOfIssue = this.getYearOfIssue();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "yearOfIssue", theYearOfIssue), currentHashCode, theYearOfIssue, (this.yearOfIssue!= null));
        }
        {
            String theEnumerationA;
            theEnumerationA = this.getEnumerationA();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "enumerationA", theEnumerationA), currentHashCode, theEnumerationA, (this.enumerationA!= null));
        }
        {
            String theEnumerationB;
            theEnumerationB = this.getEnumerationB();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "enumerationB", theEnumerationB), currentHashCode, theEnumerationB, (this.enumerationB!= null));
        }
        {
            String theEnumerationC;
            theEnumerationC = this.getEnumerationC();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "enumerationC", theEnumerationC), currentHashCode, theEnumerationC, (this.enumerationC!= null));
        }
        {
            String theEnumerationD;
            theEnumerationD = this.getEnumerationD();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "enumerationD", theEnumerationD), currentHashCode, theEnumerationD, (this.enumerationD!= null));
        }
        {
            String theEnumerationE;
            theEnumerationE = this.getEnumerationE();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "enumerationE", theEnumerationE), currentHashCode, theEnumerationE, (this.enumerationE!= null));
        }
        {
            String theEnumerationF;
            theEnumerationF = this.getEnumerationF();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "enumerationF", theEnumerationF), currentHashCode, theEnumerationF, (this.enumerationF!= null));
        }
        {
            String theEnumerationG;
            theEnumerationG = this.getEnumerationG();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "enumerationG", theEnumerationG), currentHashCode, theEnumerationG, (this.enumerationG!= null));
        }
        {
            String theEnumerationH;
            theEnumerationH = this.getEnumerationH();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "enumerationH", theEnumerationH), currentHashCode, theEnumerationH, (this.enumerationH!= null));
        }
        {
            String theChronologyI;
            theChronologyI = this.getChronologyI();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "chronologyI", theChronologyI), currentHashCode, theChronologyI, (this.chronologyI!= null));
        }
        {
            String theChronologyJ;
            theChronologyJ = this.getChronologyJ();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "chronologyJ", theChronologyJ), currentHashCode, theChronologyJ, (this.chronologyJ!= null));
        }
        {
            String theChronologyK;
            theChronologyK = this.getChronologyK();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "chronologyK", theChronologyK), currentHashCode, theChronologyK, (this.chronologyK!= null));
        }
        {
            String theChronologyL;
            theChronologyL = this.getChronologyL();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "chronologyL", theChronologyL), currentHashCode, theChronologyL, (this.chronologyL!= null));
        }
        {
            String theChronologyM;
            theChronologyM = this.getChronologyM();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "chronologyM", theChronologyM), currentHashCode, theChronologyM, (this.chronologyM!= null));
        }
        {
            String theDescription;
            theDescription = this.getDescription();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "description", theDescription), currentHashCode, theDescription, (this.description!= null));
        }
        {
            Float theReplacementCost;
            theReplacementCost = this.getReplacementCost();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "replacementCost", theReplacementCost), currentHashCode, theReplacementCost, (this.replacementCost!= null));
        }
        {
            String theReceivingOperator;
            theReceivingOperator = this.getReceivingOperator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "receivingOperator", theReceivingOperator), currentHashCode, theReceivingOperator, (this.receivingOperator!= null));
        }
        {
            ProcessType theProcessType;
            theProcessType = this.getProcessType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "processType", theProcessType), currentHashCode, theProcessType, (this.processType!= null));
        }
        {
            WorkOrderType theWorkOrderType;
            theWorkOrderType = this.getWorkOrderType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "workOrderType", theWorkOrderType), currentHashCode, theWorkOrderType, (this.workOrderType!= null));
        }
        {
            WorkOrderAt theWorkOrderAt;
            theWorkOrderAt = this.getWorkOrderAt();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "workOrderAt", theWorkOrderAt), currentHashCode, theWorkOrderAt, (this.workOrderAt!= null));
        }
        {
            String theInventoryNumber;
            theInventoryNumber = this.getInventoryNumber();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "inventoryNumber", theInventoryNumber), currentHashCode, theInventoryNumber, (this.inventoryNumber!= null));
        }
        {
            Calendar theInventoryDate;
            theInventoryDate = this.getInventoryDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "inventoryDate", theInventoryDate), currentHashCode, theInventoryDate, (this.inventoryDate!= null));
        }
        {
            String theInventoryPrice;
            theInventoryPrice = this.getInventoryPrice();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "inventoryPrice", theInventoryPrice), currentHashCode, theInventoryPrice, (this.inventoryPrice!= null));
        }
        {
            String theReceiveNumber;
            theReceiveNumber = this.getReceiveNumber();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "receiveNumber", theReceiveNumber), currentHashCode, theReceiveNumber, (this.receiveNumber!= null));
        }
        {
            String theWeedingNumber;
            theWeedingNumber = this.getWeedingNumber();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "weedingNumber", theWeedingNumber), currentHashCode, theWeedingNumber, (this.weedingNumber!= null));
        }
        {
            Calendar theWeedingDate;
            theWeedingDate = this.getWeedingDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "weedingDate", theWeedingDate), currentHashCode, theWeedingDate, (this.weedingDate!= null));
        }
        {
            Library theLibrary;
            theLibrary = this.getLibrary();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "library", theLibrary), currentHashCode, theLibrary, (this.library!= null));
        }
        {
            Location theLocation;
            theLocation = this.getLocation();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "location", theLocation), currentHashCode, theLocation, (this.location!= null));
        }
        {
            String theAlternativeCallNumber;
            theAlternativeCallNumber = this.getAlternativeCallNumber();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "alternativeCallNumber", theAlternativeCallNumber), currentHashCode, theAlternativeCallNumber, (this.alternativeCallNumber!= null));
        }
        {
            AlternativeCallNumberType theAlternativeCallNumberType;
            theAlternativeCallNumberType = this.getAlternativeCallNumberType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "alternativeCallNumberType", theAlternativeCallNumberType), currentHashCode, theAlternativeCallNumberType, (this.alternativeCallNumberType!= null));
        }
        {
            String theAltNumberSource;
            theAltNumberSource = this.getAltNumberSource();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "altNumberSource", theAltNumberSource), currentHashCode, theAltNumberSource, (this.altNumberSource!= null));
        }
        {
            String theStorageLocationId;
            theStorageLocationId = this.getStorageLocationId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "storageLocationId", theStorageLocationId), currentHashCode, theStorageLocationId, (this.storageLocationId!= null));
        }
        {
            String thePages;
            thePages = this.getPages();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "pages", thePages), currentHashCode, thePages, (this.pages!= null));
        }
        {
            String thePieces;
            thePieces = this.getPieces();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "pieces", thePieces), currentHashCode, thePieces, (this.pieces!= null));
        }
        {
            String thePublicNote;
            thePublicNote = this.getPublicNote();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "publicNote", thePublicNote), currentHashCode, thePublicNote, (this.publicNote!= null));
        }
        {
            String theFulfillmentNote;
            theFulfillmentNote = this.getFulfillmentNote();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "fulfillmentNote", theFulfillmentNote), currentHashCode, theFulfillmentNote, (this.fulfillmentNote!= null));
        }
        {
            Calendar theDueDate;
            theDueDate = this.getDueDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dueDate", theDueDate), currentHashCode, theDueDate, (this.dueDate!= null));
        }
        {
            String theDueDatePolicy;
            theDueDatePolicy = this.getDueDatePolicy();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dueDatePolicy", theDueDatePolicy), currentHashCode, theDueDatePolicy, (this.dueDatePolicy!= null));
        }
        {
            String theInternalNote1;
            theInternalNote1 = this.getInternalNote1();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "internalNote1", theInternalNote1), currentHashCode, theInternalNote1, (this.internalNote1 != null));
        }
        {
            String theInternalNote2;
            theInternalNote2 = this.getInternalNote2();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "internalNote2", theInternalNote2), currentHashCode, theInternalNote2, (this.internalNote2 != null));
        }
        {
            String theInternalNote3;
            theInternalNote3 = this.getInternalNote3();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "internalNote3", theInternalNote3), currentHashCode, theInternalNote3, (this.internalNote3 != null));
        }
        {
            String theStatisticsNote1;
            theStatisticsNote1 = this.getStatisticsNote1();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "statisticsNote1", theStatisticsNote1), currentHashCode, theStatisticsNote1, (this.statisticsNote1 != null));
        }
        {
            String theStatisticsNote2;
            theStatisticsNote2 = this.getStatisticsNote2();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "statisticsNote2", theStatisticsNote2), currentHashCode, theStatisticsNote2, (this.statisticsNote2 != null));
        }
        {
            String theStatisticsNote3;
            theStatisticsNote3 = this.getStatisticsNote3();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "statisticsNote3", theStatisticsNote3), currentHashCode, theStatisticsNote3, (this.statisticsNote3 != null));
        }
        {
            Boolean theRequested;
            theRequested = this.isRequested();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "requested", theRequested), currentHashCode, theRequested, (this.requested!= null));
        }
        {
            String theEdition;
            theEdition = this.getEdition();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "edition", theEdition), currentHashCode, theEdition, (this.edition!= null));
        }
        {
            String theImprint;
            theImprint = this.getImprint();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "imprint", theImprint), currentHashCode, theImprint, (this.imprint!= null));
        }
        {
            String theLanguage;
            theLanguage = this.getLanguage();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "language", theLanguage), currentHashCode, theLanguage, (this.language!= null));
        }
        {
            LibraryDetails theLibraryDetails;
            theLibraryDetails = this.getLibraryDetails();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "libraryDetails", theLibraryDetails), currentHashCode, theLibraryDetails, (this.libraryDetails!= null));
        }
        {
            ParsedAltCallNumber theParsedAltCallNumber;
            theParsedAltCallNumber = this.getParsedAltCallNumber();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "parsedAltCallNumber", theParsedAltCallNumber), currentHashCode, theParsedAltCallNumber, (this.parsedAltCallNumber!= null));
        }
        {
            ParsedCallNumber theParsedCallNumber;
            theParsedCallNumber = this.getParsedCallNumber();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "parsedCallNumber", theParsedCallNumber), currentHashCode, theParsedCallNumber, (this.parsedCallNumber!= null));
        }
        {
            ParsedIssueLevelDescription theParsedIssueLevelDescription;
            theParsedIssueLevelDescription = this.getParsedIssueLevelDescription();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "parsedIssueLevelDescription", theParsedIssueLevelDescription), currentHashCode, theParsedIssueLevelDescription, (this.parsedIssueLevelDescription!= null));
        }
        {
            String theTitleAbcnph;
            theTitleAbcnph = this.getTitleAbcnph();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "titleAbcnph", theTitleAbcnph), currentHashCode, theTitleAbcnph, (this.titleAbcnph!= null));
        }
        {
            PhysicalCondition thePhysicalCondition;
            thePhysicalCondition = this.getPhysicalCondition();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "physicalCondition", thePhysicalCondition), currentHashCode, thePhysicalCondition, (this.physicalCondition!= null));
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy2 strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy2 strategy) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final ItemData that = ((ItemData) object);
        {
            String lhsPid;
            lhsPid = this.getPid();
            String rhsPid;
            rhsPid = that.getPid();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "pid", lhsPid), LocatorUtils.property(thatLocator, "pid", rhsPid), lhsPid, rhsPid, (this.pid!= null), (that.pid!= null))) {
                return false;
            }
        }
        {
            String lhsBarcode;
            lhsBarcode = this.getBarcode();
            String rhsBarcode;
            rhsBarcode = that.getBarcode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "barcode", lhsBarcode), LocatorUtils.property(thatLocator, "barcode", rhsBarcode), lhsBarcode, rhsBarcode, (this.barcode!= null), (that.barcode!= null))) {
                return false;
            }
        }
        {
            Calendar lhsCreationDate;
            lhsCreationDate = this.getCreationDate();
            Calendar rhsCreationDate;
            rhsCreationDate = that.getCreationDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "creationDate", lhsCreationDate), LocatorUtils.property(thatLocator, "creationDate", rhsCreationDate), lhsCreationDate, rhsCreationDate, (this.creationDate!= null), (that.creationDate!= null))) {
                return false;
            }
        }
        {
            Calendar lhsModificationDate;
            lhsModificationDate = this.getModificationDate();
            Calendar rhsModificationDate;
            rhsModificationDate = that.getModificationDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "modificationDate", lhsModificationDate), LocatorUtils.property(thatLocator, "modificationDate", rhsModificationDate), lhsModificationDate, rhsModificationDate, (this.modificationDate!= null), (that.modificationDate!= null))) {
                return false;
            }
        }
        {
            BaseStatus lhsBaseStatus;
            lhsBaseStatus = this.getBaseStatus();
            BaseStatus rhsBaseStatus;
            rhsBaseStatus = that.getBaseStatus();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "baseStatus", lhsBaseStatus), LocatorUtils.property(thatLocator, "baseStatus", rhsBaseStatus), lhsBaseStatus, rhsBaseStatus, (this.baseStatus!= null), (that.baseStatus!= null))) {
                return false;
            }
        }
        {
            Boolean lhsAwaitingReshelving;
            lhsAwaitingReshelving = this.isAwaitingReshelving();
            Boolean rhsAwaitingReshelving;
            rhsAwaitingReshelving = that.isAwaitingReshelving();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "awaitingReshelving", lhsAwaitingReshelving), LocatorUtils.property(thatLocator, "awaitingReshelving", rhsAwaitingReshelving), lhsAwaitingReshelving, rhsAwaitingReshelving, (this.awaitingReshelving!= null), (that.awaitingReshelving!= null))) {
                return false;
            }
        }
        {
            Calendar lhsReshelvingTime;
            lhsReshelvingTime = this.getReshelvingTime();
            Calendar rhsReshelvingTime;
            rhsReshelvingTime = that.getReshelvingTime();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "reshelvingTime", lhsReshelvingTime), LocatorUtils.property(thatLocator, "reshelvingTime", rhsReshelvingTime), lhsReshelvingTime, rhsReshelvingTime, (this.reshelvingTime!= null), (that.reshelvingTime!= null))) {
                return false;
            }
        }
        {
            PhysicalMaterialType lhsPhysicalMaterialType;
            lhsPhysicalMaterialType = this.getPhysicalMaterialType();
            PhysicalMaterialType rhsPhysicalMaterialType;
            rhsPhysicalMaterialType = that.getPhysicalMaterialType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "physicalMaterialType", lhsPhysicalMaterialType), LocatorUtils.property(thatLocator, "physicalMaterialType", rhsPhysicalMaterialType), lhsPhysicalMaterialType, rhsPhysicalMaterialType, (this.physicalMaterialType!= null), (that.physicalMaterialType!= null))) {
                return false;
            }
        }
        {
            Policy lhsPolicy;
            lhsPolicy = this.getPolicy();
            Policy rhsPolicy;
            rhsPolicy = that.getPolicy();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "policy", lhsPolicy), LocatorUtils.property(thatLocator, "policy", rhsPolicy), lhsPolicy, rhsPolicy, (this.policy!= null), (that.policy!= null))) {
                return false;
            }
        }
        {
            Provenance lhsProvenance;
            lhsProvenance = this.getProvenance();
            Provenance rhsProvenance;
            rhsProvenance = that.getProvenance();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "provenance", lhsProvenance), LocatorUtils.property(thatLocator, "provenance", rhsProvenance), lhsProvenance, rhsProvenance, (this.provenance!= null), (that.provenance!= null))) {
                return false;
            }
        }
        {
            String lhsPoLine;
            lhsPoLine = this.getPoLine();
            String rhsPoLine;
            rhsPoLine = that.getPoLine();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "poLine", lhsPoLine), LocatorUtils.property(thatLocator, "poLine", rhsPoLine), lhsPoLine, rhsPoLine, (this.poLine!= null), (that.poLine!= null))) {
                return false;
            }
        }
        {
            Boolean lhsIsMagnetic;
            lhsIsMagnetic = this.isIsMagnetic();
            Boolean rhsIsMagnetic;
            rhsIsMagnetic = that.isIsMagnetic();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "isMagnetic", lhsIsMagnetic), LocatorUtils.property(thatLocator, "isMagnetic", rhsIsMagnetic), lhsIsMagnetic, rhsIsMagnetic, (this.isMagnetic!= null), (that.isMagnetic!= null))) {
                return false;
            }
        }
        {
            Calendar lhsArrivalDate;
            lhsArrivalDate = this.getArrivalDate();
            Calendar rhsArrivalDate;
            rhsArrivalDate = that.getArrivalDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "arrivalDate", lhsArrivalDate), LocatorUtils.property(thatLocator, "arrivalDate", rhsArrivalDate), lhsArrivalDate, rhsArrivalDate, (this.arrivalDate!= null), (that.arrivalDate!= null))) {
                return false;
            }
        }
        {
            Calendar lhsExpectedArrivalDate;
            lhsExpectedArrivalDate = this.getExpectedArrivalDate();
            Calendar rhsExpectedArrivalDate;
            rhsExpectedArrivalDate = that.getExpectedArrivalDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "expectedArrivalDate", lhsExpectedArrivalDate), LocatorUtils.property(thatLocator, "expectedArrivalDate", rhsExpectedArrivalDate), lhsExpectedArrivalDate, rhsExpectedArrivalDate, (this.expectedArrivalDate!= null), (that.expectedArrivalDate!= null))) {
                return false;
            }
        }
        {
            String lhsYearOfIssue;
            lhsYearOfIssue = this.getYearOfIssue();
            String rhsYearOfIssue;
            rhsYearOfIssue = that.getYearOfIssue();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "yearOfIssue", lhsYearOfIssue), LocatorUtils.property(thatLocator, "yearOfIssue", rhsYearOfIssue), lhsYearOfIssue, rhsYearOfIssue, (this.yearOfIssue!= null), (that.yearOfIssue!= null))) {
                return false;
            }
        }
        {
            String lhsEnumerationA;
            lhsEnumerationA = this.getEnumerationA();
            String rhsEnumerationA;
            rhsEnumerationA = that.getEnumerationA();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "enumerationA", lhsEnumerationA), LocatorUtils.property(thatLocator, "enumerationA", rhsEnumerationA), lhsEnumerationA, rhsEnumerationA, (this.enumerationA!= null), (that.enumerationA!= null))) {
                return false;
            }
        }
        {
            String lhsEnumerationB;
            lhsEnumerationB = this.getEnumerationB();
            String rhsEnumerationB;
            rhsEnumerationB = that.getEnumerationB();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "enumerationB", lhsEnumerationB), LocatorUtils.property(thatLocator, "enumerationB", rhsEnumerationB), lhsEnumerationB, rhsEnumerationB, (this.enumerationB!= null), (that.enumerationB!= null))) {
                return false;
            }
        }
        {
            String lhsEnumerationC;
            lhsEnumerationC = this.getEnumerationC();
            String rhsEnumerationC;
            rhsEnumerationC = that.getEnumerationC();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "enumerationC", lhsEnumerationC), LocatorUtils.property(thatLocator, "enumerationC", rhsEnumerationC), lhsEnumerationC, rhsEnumerationC, (this.enumerationC!= null), (that.enumerationC!= null))) {
                return false;
            }
        }
        {
            String lhsEnumerationD;
            lhsEnumerationD = this.getEnumerationD();
            String rhsEnumerationD;
            rhsEnumerationD = that.getEnumerationD();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "enumerationD", lhsEnumerationD), LocatorUtils.property(thatLocator, "enumerationD", rhsEnumerationD), lhsEnumerationD, rhsEnumerationD, (this.enumerationD!= null), (that.enumerationD!= null))) {
                return false;
            }
        }
        {
            String lhsEnumerationE;
            lhsEnumerationE = this.getEnumerationE();
            String rhsEnumerationE;
            rhsEnumerationE = that.getEnumerationE();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "enumerationE", lhsEnumerationE), LocatorUtils.property(thatLocator, "enumerationE", rhsEnumerationE), lhsEnumerationE, rhsEnumerationE, (this.enumerationE!= null), (that.enumerationE!= null))) {
                return false;
            }
        }
        {
            String lhsEnumerationF;
            lhsEnumerationF = this.getEnumerationF();
            String rhsEnumerationF;
            rhsEnumerationF = that.getEnumerationF();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "enumerationF", lhsEnumerationF), LocatorUtils.property(thatLocator, "enumerationF", rhsEnumerationF), lhsEnumerationF, rhsEnumerationF, (this.enumerationF!= null), (that.enumerationF!= null))) {
                return false;
            }
        }
        {
            String lhsEnumerationG;
            lhsEnumerationG = this.getEnumerationG();
            String rhsEnumerationG;
            rhsEnumerationG = that.getEnumerationG();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "enumerationG", lhsEnumerationG), LocatorUtils.property(thatLocator, "enumerationG", rhsEnumerationG), lhsEnumerationG, rhsEnumerationG, (this.enumerationG!= null), (that.enumerationG!= null))) {
                return false;
            }
        }
        {
            String lhsEnumerationH;
            lhsEnumerationH = this.getEnumerationH();
            String rhsEnumerationH;
            rhsEnumerationH = that.getEnumerationH();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "enumerationH", lhsEnumerationH), LocatorUtils.property(thatLocator, "enumerationH", rhsEnumerationH), lhsEnumerationH, rhsEnumerationH, (this.enumerationH!= null), (that.enumerationH!= null))) {
                return false;
            }
        }
        {
            String lhsChronologyI;
            lhsChronologyI = this.getChronologyI();
            String rhsChronologyI;
            rhsChronologyI = that.getChronologyI();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "chronologyI", lhsChronologyI), LocatorUtils.property(thatLocator, "chronologyI", rhsChronologyI), lhsChronologyI, rhsChronologyI, (this.chronologyI!= null), (that.chronologyI!= null))) {
                return false;
            }
        }
        {
            String lhsChronologyJ;
            lhsChronologyJ = this.getChronologyJ();
            String rhsChronologyJ;
            rhsChronologyJ = that.getChronologyJ();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "chronologyJ", lhsChronologyJ), LocatorUtils.property(thatLocator, "chronologyJ", rhsChronologyJ), lhsChronologyJ, rhsChronologyJ, (this.chronologyJ!= null), (that.chronologyJ!= null))) {
                return false;
            }
        }
        {
            String lhsChronologyK;
            lhsChronologyK = this.getChronologyK();
            String rhsChronologyK;
            rhsChronologyK = that.getChronologyK();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "chronologyK", lhsChronologyK), LocatorUtils.property(thatLocator, "chronologyK", rhsChronologyK), lhsChronologyK, rhsChronologyK, (this.chronologyK!= null), (that.chronologyK!= null))) {
                return false;
            }
        }
        {
            String lhsChronologyL;
            lhsChronologyL = this.getChronologyL();
            String rhsChronologyL;
            rhsChronologyL = that.getChronologyL();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "chronologyL", lhsChronologyL), LocatorUtils.property(thatLocator, "chronologyL", rhsChronologyL), lhsChronologyL, rhsChronologyL, (this.chronologyL!= null), (that.chronologyL!= null))) {
                return false;
            }
        }
        {
            String lhsChronologyM;
            lhsChronologyM = this.getChronologyM();
            String rhsChronologyM;
            rhsChronologyM = that.getChronologyM();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "chronologyM", lhsChronologyM), LocatorUtils.property(thatLocator, "chronologyM", rhsChronologyM), lhsChronologyM, rhsChronologyM, (this.chronologyM!= null), (that.chronologyM!= null))) {
                return false;
            }
        }
        {
            String lhsDescription;
            lhsDescription = this.getDescription();
            String rhsDescription;
            rhsDescription = that.getDescription();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "description", lhsDescription), LocatorUtils.property(thatLocator, "description", rhsDescription), lhsDescription, rhsDescription, (this.description!= null), (that.description!= null))) {
                return false;
            }
        }
        {
            Float lhsReplacementCost;
            lhsReplacementCost = this.getReplacementCost();
            Float rhsReplacementCost;
            rhsReplacementCost = that.getReplacementCost();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "replacementCost", lhsReplacementCost), LocatorUtils.property(thatLocator, "replacementCost", rhsReplacementCost), lhsReplacementCost, rhsReplacementCost, (this.replacementCost!= null), (that.replacementCost!= null))) {
                return false;
            }
        }
        {
            String lhsReceivingOperator;
            lhsReceivingOperator = this.getReceivingOperator();
            String rhsReceivingOperator;
            rhsReceivingOperator = that.getReceivingOperator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "receivingOperator", lhsReceivingOperator), LocatorUtils.property(thatLocator, "receivingOperator", rhsReceivingOperator), lhsReceivingOperator, rhsReceivingOperator, (this.receivingOperator!= null), (that.receivingOperator!= null))) {
                return false;
            }
        }
        {
            ProcessType lhsProcessType;
            lhsProcessType = this.getProcessType();
            ProcessType rhsProcessType;
            rhsProcessType = that.getProcessType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "processType", lhsProcessType), LocatorUtils.property(thatLocator, "processType", rhsProcessType), lhsProcessType, rhsProcessType, (this.processType!= null), (that.processType!= null))) {
                return false;
            }
        }
        {
            WorkOrderType lhsWorkOrderType;
            lhsWorkOrderType = this.getWorkOrderType();
            WorkOrderType rhsWorkOrderType;
            rhsWorkOrderType = that.getWorkOrderType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "workOrderType", lhsWorkOrderType), LocatorUtils.property(thatLocator, "workOrderType", rhsWorkOrderType), lhsWorkOrderType, rhsWorkOrderType, (this.workOrderType!= null), (that.workOrderType!= null))) {
                return false;
            }
        }
        {
            WorkOrderAt lhsWorkOrderAt;
            lhsWorkOrderAt = this.getWorkOrderAt();
            WorkOrderAt rhsWorkOrderAt;
            rhsWorkOrderAt = that.getWorkOrderAt();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "workOrderAt", lhsWorkOrderAt), LocatorUtils.property(thatLocator, "workOrderAt", rhsWorkOrderAt), lhsWorkOrderAt, rhsWorkOrderAt, (this.workOrderAt!= null), (that.workOrderAt!= null))) {
                return false;
            }
        }
        {
            String lhsInventoryNumber;
            lhsInventoryNumber = this.getInventoryNumber();
            String rhsInventoryNumber;
            rhsInventoryNumber = that.getInventoryNumber();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "inventoryNumber", lhsInventoryNumber), LocatorUtils.property(thatLocator, "inventoryNumber", rhsInventoryNumber), lhsInventoryNumber, rhsInventoryNumber, (this.inventoryNumber!= null), (that.inventoryNumber!= null))) {
                return false;
            }
        }
        {
            Calendar lhsInventoryDate;
            lhsInventoryDate = this.getInventoryDate();
            Calendar rhsInventoryDate;
            rhsInventoryDate = that.getInventoryDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "inventoryDate", lhsInventoryDate), LocatorUtils.property(thatLocator, "inventoryDate", rhsInventoryDate), lhsInventoryDate, rhsInventoryDate, (this.inventoryDate!= null), (that.inventoryDate!= null))) {
                return false;
            }
        }
        {
            String lhsInventoryPrice;
            lhsInventoryPrice = this.getInventoryPrice();
            String rhsInventoryPrice;
            rhsInventoryPrice = that.getInventoryPrice();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "inventoryPrice", lhsInventoryPrice), LocatorUtils.property(thatLocator, "inventoryPrice", rhsInventoryPrice), lhsInventoryPrice, rhsInventoryPrice, (this.inventoryPrice!= null), (that.inventoryPrice!= null))) {
                return false;
            }
        }
        {
            String lhsReceiveNumber;
            lhsReceiveNumber = this.getReceiveNumber();
            String rhsReceiveNumber;
            rhsReceiveNumber = that.getReceiveNumber();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "receiveNumber", lhsReceiveNumber), LocatorUtils.property(thatLocator, "receiveNumber", rhsReceiveNumber), lhsReceiveNumber, rhsReceiveNumber, (this.receiveNumber!= null), (that.receiveNumber!= null))) {
                return false;
            }
        }
        {
            String lhsWeedingNumber;
            lhsWeedingNumber = this.getWeedingNumber();
            String rhsWeedingNumber;
            rhsWeedingNumber = that.getWeedingNumber();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "weedingNumber", lhsWeedingNumber), LocatorUtils.property(thatLocator, "weedingNumber", rhsWeedingNumber), lhsWeedingNumber, rhsWeedingNumber, (this.weedingNumber!= null), (that.weedingNumber!= null))) {
                return false;
            }
        }
        {
            Calendar lhsWeedingDate;
            lhsWeedingDate = this.getWeedingDate();
            Calendar rhsWeedingDate;
            rhsWeedingDate = that.getWeedingDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "weedingDate", lhsWeedingDate), LocatorUtils.property(thatLocator, "weedingDate", rhsWeedingDate), lhsWeedingDate, rhsWeedingDate, (this.weedingDate!= null), (that.weedingDate!= null))) {
                return false;
            }
        }
        {
            Library lhsLibrary;
            lhsLibrary = this.getLibrary();
            Library rhsLibrary;
            rhsLibrary = that.getLibrary();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "library", lhsLibrary), LocatorUtils.property(thatLocator, "library", rhsLibrary), lhsLibrary, rhsLibrary, (this.library!= null), (that.library!= null))) {
                return false;
            }
        }
        {
            Location lhsLocation;
            lhsLocation = this.getLocation();
            Location rhsLocation;
            rhsLocation = that.getLocation();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "location", lhsLocation), LocatorUtils.property(thatLocator, "location", rhsLocation), lhsLocation, rhsLocation, (this.location!= null), (that.location!= null))) {
                return false;
            }
        }
        {
            String lhsAlternativeCallNumber;
            lhsAlternativeCallNumber = this.getAlternativeCallNumber();
            String rhsAlternativeCallNumber;
            rhsAlternativeCallNumber = that.getAlternativeCallNumber();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "alternativeCallNumber", lhsAlternativeCallNumber), LocatorUtils.property(thatLocator, "alternativeCallNumber", rhsAlternativeCallNumber), lhsAlternativeCallNumber, rhsAlternativeCallNumber, (this.alternativeCallNumber!= null), (that.alternativeCallNumber!= null))) {
                return false;
            }
        }
        {
            AlternativeCallNumberType lhsAlternativeCallNumberType;
            lhsAlternativeCallNumberType = this.getAlternativeCallNumberType();
            AlternativeCallNumberType rhsAlternativeCallNumberType;
            rhsAlternativeCallNumberType = that.getAlternativeCallNumberType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "alternativeCallNumberType", lhsAlternativeCallNumberType), LocatorUtils.property(thatLocator, "alternativeCallNumberType", rhsAlternativeCallNumberType), lhsAlternativeCallNumberType, rhsAlternativeCallNumberType, (this.alternativeCallNumberType!= null), (that.alternativeCallNumberType!= null))) {
                return false;
            }
        }
        {
            String lhsAltNumberSource;
            lhsAltNumberSource = this.getAltNumberSource();
            String rhsAltNumberSource;
            rhsAltNumberSource = that.getAltNumberSource();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "altNumberSource", lhsAltNumberSource), LocatorUtils.property(thatLocator, "altNumberSource", rhsAltNumberSource), lhsAltNumberSource, rhsAltNumberSource, (this.altNumberSource!= null), (that.altNumberSource!= null))) {
                return false;
            }
        }
        {
            String lhsStorageLocationId;
            lhsStorageLocationId = this.getStorageLocationId();
            String rhsStorageLocationId;
            rhsStorageLocationId = that.getStorageLocationId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "storageLocationId", lhsStorageLocationId), LocatorUtils.property(thatLocator, "storageLocationId", rhsStorageLocationId), lhsStorageLocationId, rhsStorageLocationId, (this.storageLocationId!= null), (that.storageLocationId!= null))) {
                return false;
            }
        }
        {
            String lhsPages;
            lhsPages = this.getPages();
            String rhsPages;
            rhsPages = that.getPages();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "pages", lhsPages), LocatorUtils.property(thatLocator, "pages", rhsPages), lhsPages, rhsPages, (this.pages!= null), (that.pages!= null))) {
                return false;
            }
        }
        {
            String lhsPieces;
            lhsPieces = this.getPieces();
            String rhsPieces;
            rhsPieces = that.getPieces();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "pieces", lhsPieces), LocatorUtils.property(thatLocator, "pieces", rhsPieces), lhsPieces, rhsPieces, (this.pieces!= null), (that.pieces!= null))) {
                return false;
            }
        }
        {
            String lhsPublicNote;
            lhsPublicNote = this.getPublicNote();
            String rhsPublicNote;
            rhsPublicNote = that.getPublicNote();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "publicNote", lhsPublicNote), LocatorUtils.property(thatLocator, "publicNote", rhsPublicNote), lhsPublicNote, rhsPublicNote, (this.publicNote!= null), (that.publicNote!= null))) {
                return false;
            }
        }
        {
            String lhsFulfillmentNote;
            lhsFulfillmentNote = this.getFulfillmentNote();
            String rhsFulfillmentNote;
            rhsFulfillmentNote = that.getFulfillmentNote();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "fulfillmentNote", lhsFulfillmentNote), LocatorUtils.property(thatLocator, "fulfillmentNote", rhsFulfillmentNote), lhsFulfillmentNote, rhsFulfillmentNote, (this.fulfillmentNote!= null), (that.fulfillmentNote!= null))) {
                return false;
            }
        }
        {
            Calendar lhsDueDate;
            lhsDueDate = this.getDueDate();
            Calendar rhsDueDate;
            rhsDueDate = that.getDueDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dueDate", lhsDueDate), LocatorUtils.property(thatLocator, "dueDate", rhsDueDate), lhsDueDate, rhsDueDate, (this.dueDate!= null), (that.dueDate!= null))) {
                return false;
            }
        }
        {
            String lhsDueDatePolicy;
            lhsDueDatePolicy = this.getDueDatePolicy();
            String rhsDueDatePolicy;
            rhsDueDatePolicy = that.getDueDatePolicy();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dueDatePolicy", lhsDueDatePolicy), LocatorUtils.property(thatLocator, "dueDatePolicy", rhsDueDatePolicy), lhsDueDatePolicy, rhsDueDatePolicy, (this.dueDatePolicy!= null), (that.dueDatePolicy!= null))) {
                return false;
            }
        }
        {
            String lhsInternalNote1;
            lhsInternalNote1 = this.getInternalNote1();
            String rhsInternalNote1;
            rhsInternalNote1 = that.getInternalNote1();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "internalNote1", lhsInternalNote1), LocatorUtils.property(thatLocator, "internalNote1", rhsInternalNote1), lhsInternalNote1, rhsInternalNote1, (this.internalNote1 != null), (that.internalNote1 != null))) {
                return false;
            }
        }
        {
            String lhsInternalNote2;
            lhsInternalNote2 = this.getInternalNote2();
            String rhsInternalNote2;
            rhsInternalNote2 = that.getInternalNote2();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "internalNote2", lhsInternalNote2), LocatorUtils.property(thatLocator, "internalNote2", rhsInternalNote2), lhsInternalNote2, rhsInternalNote2, (this.internalNote2 != null), (that.internalNote2 != null))) {
                return false;
            }
        }
        {
            String lhsInternalNote3;
            lhsInternalNote3 = this.getInternalNote3();
            String rhsInternalNote3;
            rhsInternalNote3 = that.getInternalNote3();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "internalNote3", lhsInternalNote3), LocatorUtils.property(thatLocator, "internalNote3", rhsInternalNote3), lhsInternalNote3, rhsInternalNote3, (this.internalNote3 != null), (that.internalNote3 != null))) {
                return false;
            }
        }
        {
            String lhsStatisticsNote1;
            lhsStatisticsNote1 = this.getStatisticsNote1();
            String rhsStatisticsNote1;
            rhsStatisticsNote1 = that.getStatisticsNote1();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "statisticsNote1", lhsStatisticsNote1), LocatorUtils.property(thatLocator, "statisticsNote1", rhsStatisticsNote1), lhsStatisticsNote1, rhsStatisticsNote1, (this.statisticsNote1 != null), (that.statisticsNote1 != null))) {
                return false;
            }
        }
        {
            String lhsStatisticsNote2;
            lhsStatisticsNote2 = this.getStatisticsNote2();
            String rhsStatisticsNote2;
            rhsStatisticsNote2 = that.getStatisticsNote2();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "statisticsNote2", lhsStatisticsNote2), LocatorUtils.property(thatLocator, "statisticsNote2", rhsStatisticsNote2), lhsStatisticsNote2, rhsStatisticsNote2, (this.statisticsNote2 != null), (that.statisticsNote2 != null))) {
                return false;
            }
        }
        {
            String lhsStatisticsNote3;
            lhsStatisticsNote3 = this.getStatisticsNote3();
            String rhsStatisticsNote3;
            rhsStatisticsNote3 = that.getStatisticsNote3();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "statisticsNote3", lhsStatisticsNote3), LocatorUtils.property(thatLocator, "statisticsNote3", rhsStatisticsNote3), lhsStatisticsNote3, rhsStatisticsNote3, (this.statisticsNote3 != null), (that.statisticsNote3 != null))) {
                return false;
            }
        }
        {
            Boolean lhsRequested;
            lhsRequested = this.isRequested();
            Boolean rhsRequested;
            rhsRequested = that.isRequested();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "requested", lhsRequested), LocatorUtils.property(thatLocator, "requested", rhsRequested), lhsRequested, rhsRequested, (this.requested!= null), (that.requested!= null))) {
                return false;
            }
        }
        {
            String lhsEdition;
            lhsEdition = this.getEdition();
            String rhsEdition;
            rhsEdition = that.getEdition();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "edition", lhsEdition), LocatorUtils.property(thatLocator, "edition", rhsEdition), lhsEdition, rhsEdition, (this.edition!= null), (that.edition!= null))) {
                return false;
            }
        }
        {
            String lhsImprint;
            lhsImprint = this.getImprint();
            String rhsImprint;
            rhsImprint = that.getImprint();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "imprint", lhsImprint), LocatorUtils.property(thatLocator, "imprint", rhsImprint), lhsImprint, rhsImprint, (this.imprint!= null), (that.imprint!= null))) {
                return false;
            }
        }
        {
            String lhsLanguage;
            lhsLanguage = this.getLanguage();
            String rhsLanguage;
            rhsLanguage = that.getLanguage();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "language", lhsLanguage), LocatorUtils.property(thatLocator, "language", rhsLanguage), lhsLanguage, rhsLanguage, (this.language!= null), (that.language!= null))) {
                return false;
            }
        }
        {
            LibraryDetails lhsLibraryDetails;
            lhsLibraryDetails = this.getLibraryDetails();
            LibraryDetails rhsLibraryDetails;
            rhsLibraryDetails = that.getLibraryDetails();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "libraryDetails", lhsLibraryDetails), LocatorUtils.property(thatLocator, "libraryDetails", rhsLibraryDetails), lhsLibraryDetails, rhsLibraryDetails, (this.libraryDetails!= null), (that.libraryDetails!= null))) {
                return false;
            }
        }
        {
            ParsedAltCallNumber lhsParsedAltCallNumber;
            lhsParsedAltCallNumber = this.getParsedAltCallNumber();
            ParsedAltCallNumber rhsParsedAltCallNumber;
            rhsParsedAltCallNumber = that.getParsedAltCallNumber();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "parsedAltCallNumber", lhsParsedAltCallNumber), LocatorUtils.property(thatLocator, "parsedAltCallNumber", rhsParsedAltCallNumber), lhsParsedAltCallNumber, rhsParsedAltCallNumber, (this.parsedAltCallNumber!= null), (that.parsedAltCallNumber!= null))) {
                return false;
            }
        }
        {
            ParsedCallNumber lhsParsedCallNumber;
            lhsParsedCallNumber = this.getParsedCallNumber();
            ParsedCallNumber rhsParsedCallNumber;
            rhsParsedCallNumber = that.getParsedCallNumber();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "parsedCallNumber", lhsParsedCallNumber), LocatorUtils.property(thatLocator, "parsedCallNumber", rhsParsedCallNumber), lhsParsedCallNumber, rhsParsedCallNumber, (this.parsedCallNumber!= null), (that.parsedCallNumber!= null))) {
                return false;
            }
        }
        {
            ParsedIssueLevelDescription lhsParsedIssueLevelDescription;
            lhsParsedIssueLevelDescription = this.getParsedIssueLevelDescription();
            ParsedIssueLevelDescription rhsParsedIssueLevelDescription;
            rhsParsedIssueLevelDescription = that.getParsedIssueLevelDescription();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "parsedIssueLevelDescription", lhsParsedIssueLevelDescription), LocatorUtils.property(thatLocator, "parsedIssueLevelDescription", rhsParsedIssueLevelDescription), lhsParsedIssueLevelDescription, rhsParsedIssueLevelDescription, (this.parsedIssueLevelDescription!= null), (that.parsedIssueLevelDescription!= null))) {
                return false;
            }
        }
        {
            String lhsTitleAbcnph;
            lhsTitleAbcnph = this.getTitleAbcnph();
            String rhsTitleAbcnph;
            rhsTitleAbcnph = that.getTitleAbcnph();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "titleAbcnph", lhsTitleAbcnph), LocatorUtils.property(thatLocator, "titleAbcnph", rhsTitleAbcnph), lhsTitleAbcnph, rhsTitleAbcnph, (this.titleAbcnph!= null), (that.titleAbcnph!= null))) {
                return false;
            }
        }
        {
            PhysicalCondition lhsPhysicalCondition;
            lhsPhysicalCondition = this.getPhysicalCondition();
            PhysicalCondition rhsPhysicalCondition;
            rhsPhysicalCondition = that.getPhysicalCondition();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "physicalCondition", lhsPhysicalCondition), LocatorUtils.property(thatLocator, "physicalCondition", rhsPhysicalCondition), lhsPhysicalCondition, rhsPhysicalCondition, (this.physicalCondition!= null), (that.physicalCondition!= null))) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy2 strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public String toString() {
        final ToStringStrategy2 strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        {
            String thePid;
            thePid = this.getPid();
            strategy.appendField(locator, this, "pid", buffer, thePid, (this.pid!= null));
        }
        {
            String theBarcode;
            theBarcode = this.getBarcode();
            strategy.appendField(locator, this, "barcode", buffer, theBarcode, (this.barcode!= null));
        }
        {
            Calendar theCreationDate;
            theCreationDate = this.getCreationDate();
            strategy.appendField(locator, this, "creationDate", buffer, theCreationDate, (this.creationDate!= null));
        }
        {
            Calendar theModificationDate;
            theModificationDate = this.getModificationDate();
            strategy.appendField(locator, this, "modificationDate", buffer, theModificationDate, (this.modificationDate!= null));
        }
        {
            BaseStatus theBaseStatus;
            theBaseStatus = this.getBaseStatus();
            strategy.appendField(locator, this, "baseStatus", buffer, theBaseStatus, (this.baseStatus!= null));
        }
        {
            Boolean theAwaitingReshelving;
            theAwaitingReshelving = this.isAwaitingReshelving();
            strategy.appendField(locator, this, "awaitingReshelving", buffer, theAwaitingReshelving, (this.awaitingReshelving!= null));
        }
        {
            Calendar theReshelvingTime;
            theReshelvingTime = this.getReshelvingTime();
            strategy.appendField(locator, this, "reshelvingTime", buffer, theReshelvingTime, (this.reshelvingTime!= null));
        }
        {
            PhysicalMaterialType thePhysicalMaterialType;
            thePhysicalMaterialType = this.getPhysicalMaterialType();
            strategy.appendField(locator, this, "physicalMaterialType", buffer, thePhysicalMaterialType, (this.physicalMaterialType!= null));
        }
        {
            Policy thePolicy;
            thePolicy = this.getPolicy();
            strategy.appendField(locator, this, "policy", buffer, thePolicy, (this.policy!= null));
        }
        {
            Provenance theProvenance;
            theProvenance = this.getProvenance();
            strategy.appendField(locator, this, "provenance", buffer, theProvenance, (this.provenance!= null));
        }
        {
            String thePoLine;
            thePoLine = this.getPoLine();
            strategy.appendField(locator, this, "poLine", buffer, thePoLine, (this.poLine!= null));
        }
        {
            Boolean theIsMagnetic;
            theIsMagnetic = this.isIsMagnetic();
            strategy.appendField(locator, this, "isMagnetic", buffer, theIsMagnetic, (this.isMagnetic!= null));
        }
        {
            Calendar theArrivalDate;
            theArrivalDate = this.getArrivalDate();
            strategy.appendField(locator, this, "arrivalDate", buffer, theArrivalDate, (this.arrivalDate!= null));
        }
        {
            Calendar theExpectedArrivalDate;
            theExpectedArrivalDate = this.getExpectedArrivalDate();
            strategy.appendField(locator, this, "expectedArrivalDate", buffer, theExpectedArrivalDate, (this.expectedArrivalDate!= null));
        }
        {
            String theYearOfIssue;
            theYearOfIssue = this.getYearOfIssue();
            strategy.appendField(locator, this, "yearOfIssue", buffer, theYearOfIssue, (this.yearOfIssue!= null));
        }
        {
            String theEnumerationA;
            theEnumerationA = this.getEnumerationA();
            strategy.appendField(locator, this, "enumerationA", buffer, theEnumerationA, (this.enumerationA!= null));
        }
        {
            String theEnumerationB;
            theEnumerationB = this.getEnumerationB();
            strategy.appendField(locator, this, "enumerationB", buffer, theEnumerationB, (this.enumerationB!= null));
        }
        {
            String theEnumerationC;
            theEnumerationC = this.getEnumerationC();
            strategy.appendField(locator, this, "enumerationC", buffer, theEnumerationC, (this.enumerationC!= null));
        }
        {
            String theEnumerationD;
            theEnumerationD = this.getEnumerationD();
            strategy.appendField(locator, this, "enumerationD", buffer, theEnumerationD, (this.enumerationD!= null));
        }
        {
            String theEnumerationE;
            theEnumerationE = this.getEnumerationE();
            strategy.appendField(locator, this, "enumerationE", buffer, theEnumerationE, (this.enumerationE!= null));
        }
        {
            String theEnumerationF;
            theEnumerationF = this.getEnumerationF();
            strategy.appendField(locator, this, "enumerationF", buffer, theEnumerationF, (this.enumerationF!= null));
        }
        {
            String theEnumerationG;
            theEnumerationG = this.getEnumerationG();
            strategy.appendField(locator, this, "enumerationG", buffer, theEnumerationG, (this.enumerationG!= null));
        }
        {
            String theEnumerationH;
            theEnumerationH = this.getEnumerationH();
            strategy.appendField(locator, this, "enumerationH", buffer, theEnumerationH, (this.enumerationH!= null));
        }
        {
            String theChronologyI;
            theChronologyI = this.getChronologyI();
            strategy.appendField(locator, this, "chronologyI", buffer, theChronologyI, (this.chronologyI!= null));
        }
        {
            String theChronologyJ;
            theChronologyJ = this.getChronologyJ();
            strategy.appendField(locator, this, "chronologyJ", buffer, theChronologyJ, (this.chronologyJ!= null));
        }
        {
            String theChronologyK;
            theChronologyK = this.getChronologyK();
            strategy.appendField(locator, this, "chronologyK", buffer, theChronologyK, (this.chronologyK!= null));
        }
        {
            String theChronologyL;
            theChronologyL = this.getChronologyL();
            strategy.appendField(locator, this, "chronologyL", buffer, theChronologyL, (this.chronologyL!= null));
        }
        {
            String theChronologyM;
            theChronologyM = this.getChronologyM();
            strategy.appendField(locator, this, "chronologyM", buffer, theChronologyM, (this.chronologyM!= null));
        }
        {
            String theDescription;
            theDescription = this.getDescription();
            strategy.appendField(locator, this, "description", buffer, theDescription, (this.description!= null));
        }
        {
            Float theReplacementCost;
            theReplacementCost = this.getReplacementCost();
            strategy.appendField(locator, this, "replacementCost", buffer, theReplacementCost, (this.replacementCost!= null));
        }
        {
            String theReceivingOperator;
            theReceivingOperator = this.getReceivingOperator();
            strategy.appendField(locator, this, "receivingOperator", buffer, theReceivingOperator, (this.receivingOperator!= null));
        }
        {
            ProcessType theProcessType;
            theProcessType = this.getProcessType();
            strategy.appendField(locator, this, "processType", buffer, theProcessType, (this.processType!= null));
        }
        {
            WorkOrderType theWorkOrderType;
            theWorkOrderType = this.getWorkOrderType();
            strategy.appendField(locator, this, "workOrderType", buffer, theWorkOrderType, (this.workOrderType!= null));
        }
        {
            WorkOrderAt theWorkOrderAt;
            theWorkOrderAt = this.getWorkOrderAt();
            strategy.appendField(locator, this, "workOrderAt", buffer, theWorkOrderAt, (this.workOrderAt!= null));
        }
        {
            String theInventoryNumber;
            theInventoryNumber = this.getInventoryNumber();
            strategy.appendField(locator, this, "inventoryNumber", buffer, theInventoryNumber, (this.inventoryNumber!= null));
        }
        {
            Calendar theInventoryDate;
            theInventoryDate = this.getInventoryDate();
            strategy.appendField(locator, this, "inventoryDate", buffer, theInventoryDate, (this.inventoryDate!= null));
        }
        {
            String theInventoryPrice;
            theInventoryPrice = this.getInventoryPrice();
            strategy.appendField(locator, this, "inventoryPrice", buffer, theInventoryPrice, (this.inventoryPrice!= null));
        }
        {
            String theReceiveNumber;
            theReceiveNumber = this.getReceiveNumber();
            strategy.appendField(locator, this, "receiveNumber", buffer, theReceiveNumber, (this.receiveNumber!= null));
        }
        {
            String theWeedingNumber;
            theWeedingNumber = this.getWeedingNumber();
            strategy.appendField(locator, this, "weedingNumber", buffer, theWeedingNumber, (this.weedingNumber!= null));
        }
        {
            Calendar theWeedingDate;
            theWeedingDate = this.getWeedingDate();
            strategy.appendField(locator, this, "weedingDate", buffer, theWeedingDate, (this.weedingDate!= null));
        }
        {
            Library theLibrary;
            theLibrary = this.getLibrary();
            strategy.appendField(locator, this, "library", buffer, theLibrary, (this.library!= null));
        }
        {
            Location theLocation;
            theLocation = this.getLocation();
            strategy.appendField(locator, this, "location", buffer, theLocation, (this.location!= null));
        }
        {
            String theAlternativeCallNumber;
            theAlternativeCallNumber = this.getAlternativeCallNumber();
            strategy.appendField(locator, this, "alternativeCallNumber", buffer, theAlternativeCallNumber, (this.alternativeCallNumber!= null));
        }
        {
            AlternativeCallNumberType theAlternativeCallNumberType;
            theAlternativeCallNumberType = this.getAlternativeCallNumberType();
            strategy.appendField(locator, this, "alternativeCallNumberType", buffer, theAlternativeCallNumberType, (this.alternativeCallNumberType!= null));
        }
        {
            String theAltNumberSource;
            theAltNumberSource = this.getAltNumberSource();
            strategy.appendField(locator, this, "altNumberSource", buffer, theAltNumberSource, (this.altNumberSource!= null));
        }
        {
            String theStorageLocationId;
            theStorageLocationId = this.getStorageLocationId();
            strategy.appendField(locator, this, "storageLocationId", buffer, theStorageLocationId, (this.storageLocationId!= null));
        }
        {
            String thePages;
            thePages = this.getPages();
            strategy.appendField(locator, this, "pages", buffer, thePages, (this.pages!= null));
        }
        {
            String thePieces;
            thePieces = this.getPieces();
            strategy.appendField(locator, this, "pieces", buffer, thePieces, (this.pieces!= null));
        }
        {
            String thePublicNote;
            thePublicNote = this.getPublicNote();
            strategy.appendField(locator, this, "publicNote", buffer, thePublicNote, (this.publicNote!= null));
        }
        {
            String theFulfillmentNote;
            theFulfillmentNote = this.getFulfillmentNote();
            strategy.appendField(locator, this, "fulfillmentNote", buffer, theFulfillmentNote, (this.fulfillmentNote!= null));
        }
        {
            Calendar theDueDate;
            theDueDate = this.getDueDate();
            strategy.appendField(locator, this, "dueDate", buffer, theDueDate, (this.dueDate!= null));
        }
        {
            String theDueDatePolicy;
            theDueDatePolicy = this.getDueDatePolicy();
            strategy.appendField(locator, this, "dueDatePolicy", buffer, theDueDatePolicy, (this.dueDatePolicy!= null));
        }
        {
            String theInternalNote1;
            theInternalNote1 = this.getInternalNote1();
            strategy.appendField(locator, this, "internalNote1", buffer, theInternalNote1, (this.internalNote1 != null));
        }
        {
            String theInternalNote2;
            theInternalNote2 = this.getInternalNote2();
            strategy.appendField(locator, this, "internalNote2", buffer, theInternalNote2, (this.internalNote2 != null));
        }
        {
            String theInternalNote3;
            theInternalNote3 = this.getInternalNote3();
            strategy.appendField(locator, this, "internalNote3", buffer, theInternalNote3, (this.internalNote3 != null));
        }
        {
            String theStatisticsNote1;
            theStatisticsNote1 = this.getStatisticsNote1();
            strategy.appendField(locator, this, "statisticsNote1", buffer, theStatisticsNote1, (this.statisticsNote1 != null));
        }
        {
            String theStatisticsNote2;
            theStatisticsNote2 = this.getStatisticsNote2();
            strategy.appendField(locator, this, "statisticsNote2", buffer, theStatisticsNote2, (this.statisticsNote2 != null));
        }
        {
            String theStatisticsNote3;
            theStatisticsNote3 = this.getStatisticsNote3();
            strategy.appendField(locator, this, "statisticsNote3", buffer, theStatisticsNote3, (this.statisticsNote3 != null));
        }
        {
            Boolean theRequested;
            theRequested = this.isRequested();
            strategy.appendField(locator, this, "requested", buffer, theRequested, (this.requested!= null));
        }
        {
            String theEdition;
            theEdition = this.getEdition();
            strategy.appendField(locator, this, "edition", buffer, theEdition, (this.edition!= null));
        }
        {
            String theImprint;
            theImprint = this.getImprint();
            strategy.appendField(locator, this, "imprint", buffer, theImprint, (this.imprint!= null));
        }
        {
            String theLanguage;
            theLanguage = this.getLanguage();
            strategy.appendField(locator, this, "language", buffer, theLanguage, (this.language!= null));
        }
        {
            LibraryDetails theLibraryDetails;
            theLibraryDetails = this.getLibraryDetails();
            strategy.appendField(locator, this, "libraryDetails", buffer, theLibraryDetails, (this.libraryDetails!= null));
        }
        {
            ParsedAltCallNumber theParsedAltCallNumber;
            theParsedAltCallNumber = this.getParsedAltCallNumber();
            strategy.appendField(locator, this, "parsedAltCallNumber", buffer, theParsedAltCallNumber, (this.parsedAltCallNumber!= null));
        }
        {
            ParsedCallNumber theParsedCallNumber;
            theParsedCallNumber = this.getParsedCallNumber();
            strategy.appendField(locator, this, "parsedCallNumber", buffer, theParsedCallNumber, (this.parsedCallNumber!= null));
        }
        {
            ParsedIssueLevelDescription theParsedIssueLevelDescription;
            theParsedIssueLevelDescription = this.getParsedIssueLevelDescription();
            strategy.appendField(locator, this, "parsedIssueLevelDescription", buffer, theParsedIssueLevelDescription, (this.parsedIssueLevelDescription!= null));
        }
        {
            String theTitleAbcnph;
            theTitleAbcnph = this.getTitleAbcnph();
            strategy.appendField(locator, this, "titleAbcnph", buffer, theTitleAbcnph, (this.titleAbcnph!= null));
        }
        {
            PhysicalCondition thePhysicalCondition;
            thePhysicalCondition = this.getPhysicalCondition();
            strategy.appendField(locator, this, "physicalCondition", buffer, thePhysicalCondition, (this.physicalCondition!= null));
        }
        return buffer;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;simpleContent&gt;
     *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
     *       &lt;attribute name="desc" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
     *     &lt;/extension&gt;
     *   &lt;/simpleContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "value"
    })
    public static class AlternativeCallNumberType implements Serializable, Equals2, HashCode2, ToString2
    {

        @XmlValue
        protected String value;
        @XmlAttribute(name = "desc")
        protected String desc;

        /**
         * Gets the value of the value property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getValue() {
            return value;
        }

        /**
         * Sets the value of the value property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setValue(String value) {
            this.value = value;
        }

        /**
         * Gets the value of the desc property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getDesc() {
            return desc;
        }

        /**
         * Sets the value of the desc property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setDesc(String value) {
            this.desc = value;
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy2 strategy) {
            int currentHashCode = 1;
            {
                String theValue;
                theValue = this.getValue();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "value", theValue), currentHashCode, theValue, (this.value!= null));
            }
            {
                String theDesc;
                theDesc = this.getDesc();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "desc", theDesc), currentHashCode, theDesc, (this.desc!= null));
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy2 strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy2 strategy) {
            if ((object == null)||(this.getClass()!= object.getClass())) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final AlternativeCallNumberType that = ((AlternativeCallNumberType) object);
            {
                String lhsValue;
                lhsValue = this.getValue();
                String rhsValue;
                rhsValue = that.getValue();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "value", lhsValue), LocatorUtils.property(thatLocator, "value", rhsValue), lhsValue, rhsValue, (this.value!= null), (that.value!= null))) {
                    return false;
                }
            }
            {
                String lhsDesc;
                lhsDesc = this.getDesc();
                String rhsDesc;
                rhsDesc = that.getDesc();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "desc", lhsDesc), LocatorUtils.property(thatLocator, "desc", rhsDesc), lhsDesc, rhsDesc, (this.desc!= null), (that.desc!= null))) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy2 strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public String toString() {
            final ToStringStrategy2 strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            {
                String theValue;
                theValue = this.getValue();
                strategy.appendField(locator, this, "value", buffer, theValue, (this.value!= null));
            }
            {
                String theDesc;
                theDesc = this.getDesc();
                strategy.appendField(locator, this, "desc", buffer, theDesc, (this.desc!= null));
            }
            return buffer;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;simpleContent&gt;
     *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
     *       &lt;attribute name="desc" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
     *     &lt;/extension&gt;
     *   &lt;/simpleContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "value"
    })
    public static class BaseStatus implements Serializable, Equals2, HashCode2, ToString2
    {

        @XmlValue
        protected String value;
        @XmlAttribute(name = "desc")
        protected String desc;

        /**
         * Gets the value of the value property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getValue() {
            return value;
        }

        /**
         * Sets the value of the value property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setValue(String value) {
            this.value = value;
        }

        /**
         * Gets the value of the desc property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getDesc() {
            return desc;
        }

        /**
         * Sets the value of the desc property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setDesc(String value) {
            this.desc = value;
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy2 strategy) {
            int currentHashCode = 1;
            {
                String theValue;
                theValue = this.getValue();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "value", theValue), currentHashCode, theValue, (this.value!= null));
            }
            {
                String theDesc;
                theDesc = this.getDesc();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "desc", theDesc), currentHashCode, theDesc, (this.desc!= null));
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy2 strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy2 strategy) {
            if ((object == null)||(this.getClass()!= object.getClass())) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final BaseStatus that = ((BaseStatus) object);
            {
                String lhsValue;
                lhsValue = this.getValue();
                String rhsValue;
                rhsValue = that.getValue();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "value", lhsValue), LocatorUtils.property(thatLocator, "value", rhsValue), lhsValue, rhsValue, (this.value!= null), (that.value!= null))) {
                    return false;
                }
            }
            {
                String lhsDesc;
                lhsDesc = this.getDesc();
                String rhsDesc;
                rhsDesc = that.getDesc();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "desc", lhsDesc), LocatorUtils.property(thatLocator, "desc", rhsDesc), lhsDesc, rhsDesc, (this.desc!= null), (that.desc!= null))) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy2 strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public String toString() {
            final ToStringStrategy2 strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            {
                String theValue;
                theValue = this.getValue();
                strategy.appendField(locator, this, "value", buffer, theValue, (this.value!= null));
            }
            {
                String theDesc;
                theDesc = this.getDesc();
                strategy.appendField(locator, this, "desc", buffer, theDesc, (this.desc!= null));
            }
            return buffer;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;simpleContent&gt;
     *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
     *       &lt;attribute name="desc" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
     *     &lt;/extension&gt;
     *   &lt;/simpleContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "value"
    })
    public static class Library implements Serializable, Equals2, HashCode2, ToString2
    {

        @XmlValue
        protected String value;
        @XmlAttribute(name = "desc")
        protected String desc;

        /**
         * Gets the value of the value property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getValue() {
            return value;
        }

        /**
         * Sets the value of the value property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setValue(String value) {
            this.value = value;
        }

        /**
         * Gets the value of the desc property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getDesc() {
            return desc;
        }

        /**
         * Sets the value of the desc property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setDesc(String value) {
            this.desc = value;
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy2 strategy) {
            int currentHashCode = 1;
            {
                String theValue;
                theValue = this.getValue();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "value", theValue), currentHashCode, theValue, (this.value!= null));
            }
            {
                String theDesc;
                theDesc = this.getDesc();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "desc", theDesc), currentHashCode, theDesc, (this.desc!= null));
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy2 strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy2 strategy) {
            if ((object == null)||(this.getClass()!= object.getClass())) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final Library that = ((Library) object);
            {
                String lhsValue;
                lhsValue = this.getValue();
                String rhsValue;
                rhsValue = that.getValue();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "value", lhsValue), LocatorUtils.property(thatLocator, "value", rhsValue), lhsValue, rhsValue, (this.value!= null), (that.value!= null))) {
                    return false;
                }
            }
            {
                String lhsDesc;
                lhsDesc = this.getDesc();
                String rhsDesc;
                rhsDesc = that.getDesc();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "desc", lhsDesc), LocatorUtils.property(thatLocator, "desc", rhsDesc), lhsDesc, rhsDesc, (this.desc!= null), (that.desc!= null))) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy2 strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public String toString() {
            final ToStringStrategy2 strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            {
                String theValue;
                theValue = this.getValue();
                strategy.appendField(locator, this, "value", buffer, theValue, (this.value!= null));
            }
            {
                String theDesc;
                theDesc = this.getDesc();
                strategy.appendField(locator, this, "desc", buffer, theDesc, (this.desc!= null));
            }
            return buffer;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;simpleContent&gt;
     *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
     *       &lt;attribute name="desc" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
     *     &lt;/extension&gt;
     *   &lt;/simpleContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "value"
    })
    public static class Location implements Serializable, Equals2, HashCode2, ToString2
    {

        @XmlValue
        protected String value;
        @XmlAttribute(name = "desc")
        protected String desc;

        /**
         * Gets the value of the value property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getValue() {
            return value;
        }

        /**
         * Sets the value of the value property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setValue(String value) {
            this.value = value;
        }

        /**
         * Gets the value of the desc property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getDesc() {
            return desc;
        }

        /**
         * Sets the value of the desc property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setDesc(String value) {
            this.desc = value;
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy2 strategy) {
            int currentHashCode = 1;
            {
                String theValue;
                theValue = this.getValue();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "value", theValue), currentHashCode, theValue, (this.value!= null));
            }
            {
                String theDesc;
                theDesc = this.getDesc();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "desc", theDesc), currentHashCode, theDesc, (this.desc!= null));
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy2 strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy2 strategy) {
            if ((object == null)||(this.getClass()!= object.getClass())) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final Location that = ((Location) object);
            {
                String lhsValue;
                lhsValue = this.getValue();
                String rhsValue;
                rhsValue = that.getValue();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "value", lhsValue), LocatorUtils.property(thatLocator, "value", rhsValue), lhsValue, rhsValue, (this.value!= null), (that.value!= null))) {
                    return false;
                }
            }
            {
                String lhsDesc;
                lhsDesc = this.getDesc();
                String rhsDesc;
                rhsDesc = that.getDesc();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "desc", lhsDesc), LocatorUtils.property(thatLocator, "desc", rhsDesc), lhsDesc, rhsDesc, (this.desc!= null), (that.desc!= null))) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy2 strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public String toString() {
            final ToStringStrategy2 strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            {
                String theValue;
                theValue = this.getValue();
                strategy.appendField(locator, this, "value", buffer, theValue, (this.value!= null));
            }
            {
                String theDesc;
                theDesc = this.getDesc();
                strategy.appendField(locator, this, "desc", buffer, theDesc, (this.desc!= null));
            }
            return buffer;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;simpleContent&gt;
     *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
     *       &lt;attribute name="desc" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
     *     &lt;/extension&gt;
     *   &lt;/simpleContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "value"
    })
    public static class PhysicalCondition implements Serializable, Equals2, HashCode2, ToString2
    {

        @XmlValue
        protected String value;
        @XmlAttribute(name = "desc")
        protected String desc;

        /**
         * Gets the value of the value property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getValue() {
            return value;
        }

        /**
         * Sets the value of the value property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setValue(String value) {
            this.value = value;
        }

        /**
         * Gets the value of the desc property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getDesc() {
            return desc;
        }

        /**
         * Sets the value of the desc property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setDesc(String value) {
            this.desc = value;
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy2 strategy) {
            int currentHashCode = 1;
            {
                String theValue;
                theValue = this.getValue();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "value", theValue), currentHashCode, theValue, (this.value!= null));
            }
            {
                String theDesc;
                theDesc = this.getDesc();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "desc", theDesc), currentHashCode, theDesc, (this.desc!= null));
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy2 strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy2 strategy) {
            if ((object == null)||(this.getClass()!= object.getClass())) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final PhysicalCondition that = ((PhysicalCondition) object);
            {
                String lhsValue;
                lhsValue = this.getValue();
                String rhsValue;
                rhsValue = that.getValue();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "value", lhsValue), LocatorUtils.property(thatLocator, "value", rhsValue), lhsValue, rhsValue, (this.value!= null), (that.value!= null))) {
                    return false;
                }
            }
            {
                String lhsDesc;
                lhsDesc = this.getDesc();
                String rhsDesc;
                rhsDesc = that.getDesc();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "desc", lhsDesc), LocatorUtils.property(thatLocator, "desc", rhsDesc), lhsDesc, rhsDesc, (this.desc!= null), (that.desc!= null))) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy2 strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public String toString() {
            final ToStringStrategy2 strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            {
                String theValue;
                theValue = this.getValue();
                strategy.appendField(locator, this, "value", buffer, theValue, (this.value!= null));
            }
            {
                String theDesc;
                theDesc = this.getDesc();
                strategy.appendField(locator, this, "desc", buffer, theDesc, (this.desc!= null));
            }
            return buffer;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;simpleContent&gt;
     *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
     *       &lt;attribute name="desc" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
     *     &lt;/extension&gt;
     *   &lt;/simpleContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "value"
    })
    public static class PhysicalMaterialType implements Serializable, Equals2, HashCode2, ToString2
    {

        @XmlValue
        protected String value;
        @XmlAttribute(name = "desc")
        protected String desc;

        /**
         * Gets the value of the value property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getValue() {
            return value;
        }

        /**
         * Sets the value of the value property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setValue(String value) {
            this.value = value;
        }

        /**
         * Gets the value of the desc property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getDesc() {
            return desc;
        }

        /**
         * Sets the value of the desc property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setDesc(String value) {
            this.desc = value;
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy2 strategy) {
            int currentHashCode = 1;
            {
                String theValue;
                theValue = this.getValue();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "value", theValue), currentHashCode, theValue, (this.value!= null));
            }
            {
                String theDesc;
                theDesc = this.getDesc();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "desc", theDesc), currentHashCode, theDesc, (this.desc!= null));
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy2 strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy2 strategy) {
            if ((object == null)||(this.getClass()!= object.getClass())) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final PhysicalMaterialType that = ((PhysicalMaterialType) object);
            {
                String lhsValue;
                lhsValue = this.getValue();
                String rhsValue;
                rhsValue = that.getValue();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "value", lhsValue), LocatorUtils.property(thatLocator, "value", rhsValue), lhsValue, rhsValue, (this.value!= null), (that.value!= null))) {
                    return false;
                }
            }
            {
                String lhsDesc;
                lhsDesc = this.getDesc();
                String rhsDesc;
                rhsDesc = that.getDesc();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "desc", lhsDesc), LocatorUtils.property(thatLocator, "desc", rhsDesc), lhsDesc, rhsDesc, (this.desc!= null), (that.desc!= null))) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy2 strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public String toString() {
            final ToStringStrategy2 strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            {
                String theValue;
                theValue = this.getValue();
                strategy.appendField(locator, this, "value", buffer, theValue, (this.value!= null));
            }
            {
                String theDesc;
                theDesc = this.getDesc();
                strategy.appendField(locator, this, "desc", buffer, theDesc, (this.desc!= null));
            }
            return buffer;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;simpleContent&gt;
     *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
     *       &lt;attribute name="desc" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
     *     &lt;/extension&gt;
     *   &lt;/simpleContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "value"
    })
    public static class Policy implements Serializable, Equals2, HashCode2, ToString2
    {

        @XmlValue
        protected String value;
        @XmlAttribute(name = "desc")
        protected String desc;

        /**
         * Gets the value of the value property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getValue() {
            return value;
        }

        /**
         * Sets the value of the value property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setValue(String value) {
            this.value = value;
        }

        /**
         * Gets the value of the desc property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getDesc() {
            return desc;
        }

        /**
         * Sets the value of the desc property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setDesc(String value) {
            this.desc = value;
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy2 strategy) {
            int currentHashCode = 1;
            {
                String theValue;
                theValue = this.getValue();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "value", theValue), currentHashCode, theValue, (this.value!= null));
            }
            {
                String theDesc;
                theDesc = this.getDesc();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "desc", theDesc), currentHashCode, theDesc, (this.desc!= null));
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy2 strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy2 strategy) {
            if ((object == null)||(this.getClass()!= object.getClass())) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final Policy that = ((Policy) object);
            {
                String lhsValue;
                lhsValue = this.getValue();
                String rhsValue;
                rhsValue = that.getValue();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "value", lhsValue), LocatorUtils.property(thatLocator, "value", rhsValue), lhsValue, rhsValue, (this.value!= null), (that.value!= null))) {
                    return false;
                }
            }
            {
                String lhsDesc;
                lhsDesc = this.getDesc();
                String rhsDesc;
                rhsDesc = that.getDesc();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "desc", lhsDesc), LocatorUtils.property(thatLocator, "desc", rhsDesc), lhsDesc, rhsDesc, (this.desc!= null), (that.desc!= null))) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy2 strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public String toString() {
            final ToStringStrategy2 strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            {
                String theValue;
                theValue = this.getValue();
                strategy.appendField(locator, this, "value", buffer, theValue, (this.value!= null));
            }
            {
                String theDesc;
                theDesc = this.getDesc();
                strategy.appendField(locator, this, "desc", buffer, theDesc, (this.desc!= null));
            }
            return buffer;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;simpleContent&gt;
     *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
     *       &lt;attribute name="desc" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
     *     &lt;/extension&gt;
     *   &lt;/simpleContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "value"
    })
    public static class ProcessType implements Serializable, Equals2, HashCode2, ToString2
    {

        @XmlValue
        protected String value;
        @XmlAttribute(name = "desc")
        protected String desc;

        /**
         * Gets the value of the value property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getValue() {
            return value;
        }

        /**
         * Sets the value of the value property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setValue(String value) {
            this.value = value;
        }

        /**
         * Gets the value of the desc property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getDesc() {
            return desc;
        }

        /**
         * Sets the value of the desc property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setDesc(String value) {
            this.desc = value;
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy2 strategy) {
            int currentHashCode = 1;
            {
                String theValue;
                theValue = this.getValue();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "value", theValue), currentHashCode, theValue, (this.value!= null));
            }
            {
                String theDesc;
                theDesc = this.getDesc();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "desc", theDesc), currentHashCode, theDesc, (this.desc!= null));
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy2 strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy2 strategy) {
            if ((object == null)||(this.getClass()!= object.getClass())) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final ProcessType that = ((ProcessType) object);
            {
                String lhsValue;
                lhsValue = this.getValue();
                String rhsValue;
                rhsValue = that.getValue();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "value", lhsValue), LocatorUtils.property(thatLocator, "value", rhsValue), lhsValue, rhsValue, (this.value!= null), (that.value!= null))) {
                    return false;
                }
            }
            {
                String lhsDesc;
                lhsDesc = this.getDesc();
                String rhsDesc;
                rhsDesc = that.getDesc();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "desc", lhsDesc), LocatorUtils.property(thatLocator, "desc", rhsDesc), lhsDesc, rhsDesc, (this.desc!= null), (that.desc!= null))) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy2 strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public String toString() {
            final ToStringStrategy2 strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            {
                String theValue;
                theValue = this.getValue();
                strategy.appendField(locator, this, "value", buffer, theValue, (this.value!= null));
            }
            {
                String theDesc;
                theDesc = this.getDesc();
                strategy.appendField(locator, this, "desc", buffer, theDesc, (this.desc!= null));
            }
            return buffer;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;simpleContent&gt;
     *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
     *       &lt;attribute name="desc" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
     *     &lt;/extension&gt;
     *   &lt;/simpleContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "value"
    })
    public static class Provenance implements Serializable, Equals2, HashCode2, ToString2
    {

        @XmlValue
        protected String value;
        @XmlAttribute(name = "desc")
        protected String desc;

        /**
         * Gets the value of the value property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getValue() {
            return value;
        }

        /**
         * Sets the value of the value property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setValue(String value) {
            this.value = value;
        }

        /**
         * Gets the value of the desc property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getDesc() {
            return desc;
        }

        /**
         * Sets the value of the desc property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setDesc(String value) {
            this.desc = value;
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy2 strategy) {
            int currentHashCode = 1;
            {
                String theValue;
                theValue = this.getValue();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "value", theValue), currentHashCode, theValue, (this.value!= null));
            }
            {
                String theDesc;
                theDesc = this.getDesc();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "desc", theDesc), currentHashCode, theDesc, (this.desc!= null));
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy2 strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy2 strategy) {
            if ((object == null)||(this.getClass()!= object.getClass())) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final Provenance that = ((Provenance) object);
            {
                String lhsValue;
                lhsValue = this.getValue();
                String rhsValue;
                rhsValue = that.getValue();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "value", lhsValue), LocatorUtils.property(thatLocator, "value", rhsValue), lhsValue, rhsValue, (this.value!= null), (that.value!= null))) {
                    return false;
                }
            }
            {
                String lhsDesc;
                lhsDesc = this.getDesc();
                String rhsDesc;
                rhsDesc = that.getDesc();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "desc", lhsDesc), LocatorUtils.property(thatLocator, "desc", rhsDesc), lhsDesc, rhsDesc, (this.desc!= null), (that.desc!= null))) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy2 strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public String toString() {
            final ToStringStrategy2 strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            {
                String theValue;
                theValue = this.getValue();
                strategy.appendField(locator, this, "value", buffer, theValue, (this.value!= null));
            }
            {
                String theDesc;
                theDesc = this.getDesc();
                strategy.appendField(locator, this, "desc", buffer, theDesc, (this.desc!= null));
            }
            return buffer;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;simpleContent&gt;
     *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
     *       &lt;attribute name="desc" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
     *     &lt;/extension&gt;
     *   &lt;/simpleContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "value"
    })
    public static class WorkOrderAt implements Serializable, Equals2, HashCode2, ToString2
    {

        @XmlValue
        protected String value;
        @XmlAttribute(name = "desc")
        protected String desc;

        /**
         * Gets the value of the value property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getValue() {
            return value;
        }

        /**
         * Sets the value of the value property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setValue(String value) {
            this.value = value;
        }

        /**
         * Gets the value of the desc property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getDesc() {
            return desc;
        }

        /**
         * Sets the value of the desc property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setDesc(String value) {
            this.desc = value;
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy2 strategy) {
            int currentHashCode = 1;
            {
                String theValue;
                theValue = this.getValue();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "value", theValue), currentHashCode, theValue, (this.value!= null));
            }
            {
                String theDesc;
                theDesc = this.getDesc();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "desc", theDesc), currentHashCode, theDesc, (this.desc!= null));
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy2 strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy2 strategy) {
            if ((object == null)||(this.getClass()!= object.getClass())) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final WorkOrderAt that = ((WorkOrderAt) object);
            {
                String lhsValue;
                lhsValue = this.getValue();
                String rhsValue;
                rhsValue = that.getValue();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "value", lhsValue), LocatorUtils.property(thatLocator, "value", rhsValue), lhsValue, rhsValue, (this.value!= null), (that.value!= null))) {
                    return false;
                }
            }
            {
                String lhsDesc;
                lhsDesc = this.getDesc();
                String rhsDesc;
                rhsDesc = that.getDesc();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "desc", lhsDesc), LocatorUtils.property(thatLocator, "desc", rhsDesc), lhsDesc, rhsDesc, (this.desc!= null), (that.desc!= null))) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy2 strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public String toString() {
            final ToStringStrategy2 strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            {
                String theValue;
                theValue = this.getValue();
                strategy.appendField(locator, this, "value", buffer, theValue, (this.value!= null));
            }
            {
                String theDesc;
                theDesc = this.getDesc();
                strategy.appendField(locator, this, "desc", buffer, theDesc, (this.desc!= null));
            }
            return buffer;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;simpleContent&gt;
     *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
     *       &lt;attribute name="desc" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
     *     &lt;/extension&gt;
     *   &lt;/simpleContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "value"
    })
    public static class WorkOrderType implements Serializable, Equals2, HashCode2, ToString2
    {

        @XmlValue
        protected String value;
        @XmlAttribute(name = "desc")
        protected String desc;

        /**
         * Gets the value of the value property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getValue() {
            return value;
        }

        /**
         * Sets the value of the value property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setValue(String value) {
            this.value = value;
        }

        /**
         * Gets the value of the desc property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getDesc() {
            return desc;
        }

        /**
         * Sets the value of the desc property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setDesc(String value) {
            this.desc = value;
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy2 strategy) {
            int currentHashCode = 1;
            {
                String theValue;
                theValue = this.getValue();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "value", theValue), currentHashCode, theValue, (this.value!= null));
            }
            {
                String theDesc;
                theDesc = this.getDesc();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "desc", theDesc), currentHashCode, theDesc, (this.desc!= null));
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy2 strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy2 strategy) {
            if ((object == null)||(this.getClass()!= object.getClass())) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final WorkOrderType that = ((WorkOrderType) object);
            {
                String lhsValue;
                lhsValue = this.getValue();
                String rhsValue;
                rhsValue = that.getValue();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "value", lhsValue), LocatorUtils.property(thatLocator, "value", rhsValue), lhsValue, rhsValue, (this.value!= null), (that.value!= null))) {
                    return false;
                }
            }
            {
                String lhsDesc;
                lhsDesc = this.getDesc();
                String rhsDesc;
                rhsDesc = that.getDesc();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "desc", lhsDesc), LocatorUtils.property(thatLocator, "desc", rhsDesc), lhsDesc, rhsDesc, (this.desc!= null), (that.desc!= null))) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy2 strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public String toString() {
            final ToStringStrategy2 strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            {
                String theValue;
                theValue = this.getValue();
                strategy.appendField(locator, this, "value", buffer, theValue, (this.value!= null));
            }
            {
                String theDesc;
                theDesc = this.getDesc();
                strategy.appendField(locator, this, "desc", buffer, theDesc, (this.desc!= null));
            }
            return buffer;
        }

    }

}
