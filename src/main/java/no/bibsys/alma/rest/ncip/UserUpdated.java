//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.03.12 at 09:54:26 AM CET 
//


package no.bibsys.alma.rest.ncip;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals2;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy2;
import org.jvnet.jaxb2_commons.lang.HashCode2;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy2;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString2;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy2;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}InitiationHeader" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}UserId"/&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}DeleteUserFields" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}AddUserFields" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}Ext" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "initiationHeader",
    "userId",
    "deleteUserFields",
    "addUserFields",
    "ext"
})
@XmlRootElement(name = "UserUpdated")
public class UserUpdated implements Equals2, HashCode2, ToString2
{

    @XmlElement(name = "InitiationHeader")
    protected InitiationHeader initiationHeader;
    @XmlElement(name = "UserId", required = true)
    protected UserId userId;
    @XmlElement(name = "DeleteUserFields")
    protected DeleteUserFields deleteUserFields;
    @XmlElement(name = "AddUserFields")
    protected AddUserFields addUserFields;
    @XmlElement(name = "Ext")
    protected Ext ext;

    /**
     * Gets the value of the initiationHeader property.
     * 
     * @return
     *     possible object is
     *     {@link InitiationHeader }
     *     
     */
    public InitiationHeader getInitiationHeader() {
        return initiationHeader;
    }

    /**
     * Sets the value of the initiationHeader property.
     * 
     * @param value
     *     allowed object is
     *     {@link InitiationHeader }
     *     
     */
    public void setInitiationHeader(InitiationHeader value) {
        this.initiationHeader = value;
    }

    /**
     * Gets the value of the userId property.
     * 
     * @return
     *     possible object is
     *     {@link UserId }
     *     
     */
    public UserId getUserId() {
        return userId;
    }

    /**
     * Sets the value of the userId property.
     * 
     * @param value
     *     allowed object is
     *     {@link UserId }
     *     
     */
    public void setUserId(UserId value) {
        this.userId = value;
    }

    /**
     * Gets the value of the deleteUserFields property.
     * 
     * @return
     *     possible object is
     *     {@link DeleteUserFields }
     *     
     */
    public DeleteUserFields getDeleteUserFields() {
        return deleteUserFields;
    }

    /**
     * Sets the value of the deleteUserFields property.
     * 
     * @param value
     *     allowed object is
     *     {@link DeleteUserFields }
     *     
     */
    public void setDeleteUserFields(DeleteUserFields value) {
        this.deleteUserFields = value;
    }

    /**
     * Gets the value of the addUserFields property.
     * 
     * @return
     *     possible object is
     *     {@link AddUserFields }
     *     
     */
    public AddUserFields getAddUserFields() {
        return addUserFields;
    }

    /**
     * Sets the value of the addUserFields property.
     * 
     * @param value
     *     allowed object is
     *     {@link AddUserFields }
     *     
     */
    public void setAddUserFields(AddUserFields value) {
        this.addUserFields = value;
    }

    /**
     * Gets the value of the ext property.
     * 
     * @return
     *     possible object is
     *     {@link Ext }
     *     
     */
    public Ext getExt() {
        return ext;
    }

    /**
     * Sets the value of the ext property.
     * 
     * @param value
     *     allowed object is
     *     {@link Ext }
     *     
     */
    public void setExt(Ext value) {
        this.ext = value;
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy2 strategy) {
        int currentHashCode = 1;
        {
            InitiationHeader theInitiationHeader;
            theInitiationHeader = this.getInitiationHeader();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "initiationHeader", theInitiationHeader), currentHashCode, theInitiationHeader, (this.initiationHeader!= null));
        }
        {
            UserId theUserId;
            theUserId = this.getUserId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "userId", theUserId), currentHashCode, theUserId, (this.userId!= null));
        }
        {
            DeleteUserFields theDeleteUserFields;
            theDeleteUserFields = this.getDeleteUserFields();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "deleteUserFields", theDeleteUserFields), currentHashCode, theDeleteUserFields, (this.deleteUserFields!= null));
        }
        {
            AddUserFields theAddUserFields;
            theAddUserFields = this.getAddUserFields();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "addUserFields", theAddUserFields), currentHashCode, theAddUserFields, (this.addUserFields!= null));
        }
        {
            Ext theExt;
            theExt = this.getExt();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ext", theExt), currentHashCode, theExt, (this.ext!= null));
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy2 strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy2 strategy) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final UserUpdated that = ((UserUpdated) object);
        {
            InitiationHeader lhsInitiationHeader;
            lhsInitiationHeader = this.getInitiationHeader();
            InitiationHeader rhsInitiationHeader;
            rhsInitiationHeader = that.getInitiationHeader();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "initiationHeader", lhsInitiationHeader), LocatorUtils.property(thatLocator, "initiationHeader", rhsInitiationHeader), lhsInitiationHeader, rhsInitiationHeader, (this.initiationHeader!= null), (that.initiationHeader!= null))) {
                return false;
            }
        }
        {
            UserId lhsUserId;
            lhsUserId = this.getUserId();
            UserId rhsUserId;
            rhsUserId = that.getUserId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "userId", lhsUserId), LocatorUtils.property(thatLocator, "userId", rhsUserId), lhsUserId, rhsUserId, (this.userId!= null), (that.userId!= null))) {
                return false;
            }
        }
        {
            DeleteUserFields lhsDeleteUserFields;
            lhsDeleteUserFields = this.getDeleteUserFields();
            DeleteUserFields rhsDeleteUserFields;
            rhsDeleteUserFields = that.getDeleteUserFields();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "deleteUserFields", lhsDeleteUserFields), LocatorUtils.property(thatLocator, "deleteUserFields", rhsDeleteUserFields), lhsDeleteUserFields, rhsDeleteUserFields, (this.deleteUserFields!= null), (that.deleteUserFields!= null))) {
                return false;
            }
        }
        {
            AddUserFields lhsAddUserFields;
            lhsAddUserFields = this.getAddUserFields();
            AddUserFields rhsAddUserFields;
            rhsAddUserFields = that.getAddUserFields();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "addUserFields", lhsAddUserFields), LocatorUtils.property(thatLocator, "addUserFields", rhsAddUserFields), lhsAddUserFields, rhsAddUserFields, (this.addUserFields!= null), (that.addUserFields!= null))) {
                return false;
            }
        }
        {
            Ext lhsExt;
            lhsExt = this.getExt();
            Ext rhsExt;
            rhsExt = that.getExt();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ext", lhsExt), LocatorUtils.property(thatLocator, "ext", rhsExt), lhsExt, rhsExt, (this.ext!= null), (that.ext!= null))) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy2 strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public String toString() {
        final ToStringStrategy2 strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        {
            InitiationHeader theInitiationHeader;
            theInitiationHeader = this.getInitiationHeader();
            strategy.appendField(locator, this, "initiationHeader", buffer, theInitiationHeader, (this.initiationHeader!= null));
        }
        {
            UserId theUserId;
            theUserId = this.getUserId();
            strategy.appendField(locator, this, "userId", buffer, theUserId, (this.userId!= null));
        }
        {
            DeleteUserFields theDeleteUserFields;
            theDeleteUserFields = this.getDeleteUserFields();
            strategy.appendField(locator, this, "deleteUserFields", buffer, theDeleteUserFields, (this.deleteUserFields!= null));
        }
        {
            AddUserFields theAddUserFields;
            theAddUserFields = this.getAddUserFields();
            strategy.appendField(locator, this, "addUserFields", buffer, theAddUserFields, (this.addUserFields!= null));
        }
        {
            Ext theExt;
            theExt = this.getExt();
            strategy.appendField(locator, this, "ext", buffer, theExt, (this.ext!= null));
        }
        return buffer;
    }

}
