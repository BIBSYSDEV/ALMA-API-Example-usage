//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.03.12 at 09:54:26 AM CET 
//


package no.bibsys.alma.rest.ncip;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals2;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy2;
import org.jvnet.jaxb2_commons.lang.HashCode2;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy2;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString2;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy2;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}NoticeType"/&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}NoticeContent" minOccurs="0"/&gt;
 *         &lt;choice&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}NoticeItem" maxOccurs="unbounded"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}UserFiscalAccount"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}UserPrivilege"/&gt;
 *         &lt;/choice&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}Ext" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "noticeType",
    "noticeContent",
    "userPrivilege",
    "userFiscalAccount",
    "noticeItems",
    "ext"
})
@XmlRootElement(name = "UserNoticeDetails")
public class UserNoticeDetails implements Equals2, HashCode2, ToString2
{

    @XmlElement(name = "NoticeType", required = true)
    protected SchemeValuePair noticeType;
    @XmlElement(name = "NoticeContent")
    protected String noticeContent;
    @XmlElement(name = "UserPrivilege")
    protected UserPrivilege userPrivilege;
    @XmlElement(name = "UserFiscalAccount")
    protected UserFiscalAccount userFiscalAccount;
    @XmlElement(name = "NoticeItem")
    protected List<NoticeItem> noticeItems;
    @XmlElement(name = "Ext")
    protected Ext ext;

    /**
     * Gets the value of the noticeType property.
     * 
     * @return
     *     possible object is
     *     {@link SchemeValuePair }
     *     
     */
    public SchemeValuePair getNoticeType() {
        return noticeType;
    }

    /**
     * Sets the value of the noticeType property.
     * 
     * @param value
     *     allowed object is
     *     {@link SchemeValuePair }
     *     
     */
    public void setNoticeType(SchemeValuePair value) {
        this.noticeType = value;
    }

    /**
     * Gets the value of the noticeContent property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getNoticeContent() {
        return noticeContent;
    }

    /**
     * Sets the value of the noticeContent property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNoticeContent(String value) {
        this.noticeContent = value;
    }

    /**
     * Gets the value of the userPrivilege property.
     * 
     * @return
     *     possible object is
     *     {@link UserPrivilege }
     *     
     */
    public UserPrivilege getUserPrivilege() {
        return userPrivilege;
    }

    /**
     * Sets the value of the userPrivilege property.
     * 
     * @param value
     *     allowed object is
     *     {@link UserPrivilege }
     *     
     */
    public void setUserPrivilege(UserPrivilege value) {
        this.userPrivilege = value;
    }

    /**
     * Gets the value of the userFiscalAccount property.
     * 
     * @return
     *     possible object is
     *     {@link UserFiscalAccount }
     *     
     */
    public UserFiscalAccount getUserFiscalAccount() {
        return userFiscalAccount;
    }

    /**
     * Sets the value of the userFiscalAccount property.
     * 
     * @param value
     *     allowed object is
     *     {@link UserFiscalAccount }
     *     
     */
    public void setUserFiscalAccount(UserFiscalAccount value) {
        this.userFiscalAccount = value;
    }

    /**
     * Gets the value of the noticeItems property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the noticeItems property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getNoticeItems().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link NoticeItem }
     * 
     * 
     */
    public List<NoticeItem> getNoticeItems() {
        if (noticeItems == null) {
            noticeItems = new ArrayList<NoticeItem>();
        }
        return this.noticeItems;
    }

    /**
     * Gets the value of the ext property.
     * 
     * @return
     *     possible object is
     *     {@link Ext }
     *     
     */
    public Ext getExt() {
        return ext;
    }

    /**
     * Sets the value of the ext property.
     * 
     * @param value
     *     allowed object is
     *     {@link Ext }
     *     
     */
    public void setExt(Ext value) {
        this.ext = value;
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy2 strategy) {
        int currentHashCode = 1;
        {
            SchemeValuePair theNoticeType;
            theNoticeType = this.getNoticeType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "noticeType", theNoticeType), currentHashCode, theNoticeType, (this.noticeType!= null));
        }
        {
            String theNoticeContent;
            theNoticeContent = this.getNoticeContent();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "noticeContent", theNoticeContent), currentHashCode, theNoticeContent, (this.noticeContent!= null));
        }
        {
            UserPrivilege theUserPrivilege;
            theUserPrivilege = this.getUserPrivilege();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "userPrivilege", theUserPrivilege), currentHashCode, theUserPrivilege, (this.userPrivilege!= null));
        }
        {
            UserFiscalAccount theUserFiscalAccount;
            theUserFiscalAccount = this.getUserFiscalAccount();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "userFiscalAccount", theUserFiscalAccount), currentHashCode, theUserFiscalAccount, (this.userFiscalAccount!= null));
        }
        {
            List<NoticeItem> theNoticeItems;
            theNoticeItems = (((this.noticeItems!= null)&&(!this.noticeItems.isEmpty()))?this.getNoticeItems():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "noticeItems", theNoticeItems), currentHashCode, theNoticeItems, ((this.noticeItems!= null)&&(!this.noticeItems.isEmpty())));
        }
        {
            Ext theExt;
            theExt = this.getExt();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ext", theExt), currentHashCode, theExt, (this.ext!= null));
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy2 strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy2 strategy) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final UserNoticeDetails that = ((UserNoticeDetails) object);
        {
            SchemeValuePair lhsNoticeType;
            lhsNoticeType = this.getNoticeType();
            SchemeValuePair rhsNoticeType;
            rhsNoticeType = that.getNoticeType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "noticeType", lhsNoticeType), LocatorUtils.property(thatLocator, "noticeType", rhsNoticeType), lhsNoticeType, rhsNoticeType, (this.noticeType!= null), (that.noticeType!= null))) {
                return false;
            }
        }
        {
            String lhsNoticeContent;
            lhsNoticeContent = this.getNoticeContent();
            String rhsNoticeContent;
            rhsNoticeContent = that.getNoticeContent();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "noticeContent", lhsNoticeContent), LocatorUtils.property(thatLocator, "noticeContent", rhsNoticeContent), lhsNoticeContent, rhsNoticeContent, (this.noticeContent!= null), (that.noticeContent!= null))) {
                return false;
            }
        }
        {
            UserPrivilege lhsUserPrivilege;
            lhsUserPrivilege = this.getUserPrivilege();
            UserPrivilege rhsUserPrivilege;
            rhsUserPrivilege = that.getUserPrivilege();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "userPrivilege", lhsUserPrivilege), LocatorUtils.property(thatLocator, "userPrivilege", rhsUserPrivilege), lhsUserPrivilege, rhsUserPrivilege, (this.userPrivilege!= null), (that.userPrivilege!= null))) {
                return false;
            }
        }
        {
            UserFiscalAccount lhsUserFiscalAccount;
            lhsUserFiscalAccount = this.getUserFiscalAccount();
            UserFiscalAccount rhsUserFiscalAccount;
            rhsUserFiscalAccount = that.getUserFiscalAccount();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "userFiscalAccount", lhsUserFiscalAccount), LocatorUtils.property(thatLocator, "userFiscalAccount", rhsUserFiscalAccount), lhsUserFiscalAccount, rhsUserFiscalAccount, (this.userFiscalAccount!= null), (that.userFiscalAccount!= null))) {
                return false;
            }
        }
        {
            List<NoticeItem> lhsNoticeItems;
            lhsNoticeItems = (((this.noticeItems!= null)&&(!this.noticeItems.isEmpty()))?this.getNoticeItems():null);
            List<NoticeItem> rhsNoticeItems;
            rhsNoticeItems = (((that.noticeItems!= null)&&(!that.noticeItems.isEmpty()))?that.getNoticeItems():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "noticeItems", lhsNoticeItems), LocatorUtils.property(thatLocator, "noticeItems", rhsNoticeItems), lhsNoticeItems, rhsNoticeItems, ((this.noticeItems!= null)&&(!this.noticeItems.isEmpty())), ((that.noticeItems!= null)&&(!that.noticeItems.isEmpty())))) {
                return false;
            }
        }
        {
            Ext lhsExt;
            lhsExt = this.getExt();
            Ext rhsExt;
            rhsExt = that.getExt();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ext", lhsExt), LocatorUtils.property(thatLocator, "ext", rhsExt), lhsExt, rhsExt, (this.ext!= null), (that.ext!= null))) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy2 strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public String toString() {
        final ToStringStrategy2 strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        {
            SchemeValuePair theNoticeType;
            theNoticeType = this.getNoticeType();
            strategy.appendField(locator, this, "noticeType", buffer, theNoticeType, (this.noticeType!= null));
        }
        {
            String theNoticeContent;
            theNoticeContent = this.getNoticeContent();
            strategy.appendField(locator, this, "noticeContent", buffer, theNoticeContent, (this.noticeContent!= null));
        }
        {
            UserPrivilege theUserPrivilege;
            theUserPrivilege = this.getUserPrivilege();
            strategy.appendField(locator, this, "userPrivilege", buffer, theUserPrivilege, (this.userPrivilege!= null));
        }
        {
            UserFiscalAccount theUserFiscalAccount;
            theUserFiscalAccount = this.getUserFiscalAccount();
            strategy.appendField(locator, this, "userFiscalAccount", buffer, theUserFiscalAccount, (this.userFiscalAccount!= null));
        }
        {
            List<NoticeItem> theNoticeItems;
            theNoticeItems = (((this.noticeItems!= null)&&(!this.noticeItems.isEmpty()))?this.getNoticeItems():null);
            strategy.appendField(locator, this, "noticeItems", buffer, theNoticeItems, ((this.noticeItems!= null)&&(!this.noticeItems.isEmpty())));
        }
        {
            Ext theExt;
            theExt = this.getExt();
            strategy.appendField(locator, this, "ext", buffer, theExt, (this.ext!= null));
        }
        return buffer;
    }

}
