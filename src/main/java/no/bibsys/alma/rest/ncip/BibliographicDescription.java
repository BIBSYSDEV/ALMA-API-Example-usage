//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.03.12 at 09:54:26 AM CET 
//


package no.bibsys.alma.rest.ncip;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals2;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy2;
import org.jvnet.jaxb2_commons.lang.HashCode2;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy2;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString2;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy2;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}Author" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}AuthorOfComponent" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}BibliographicItemId" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}BibliographicRecordId" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}ComponentId" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}Edition" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}Pagination" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}PlaceOfPublication" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}PublicationDate" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}PublicationDateOfComponent" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}Publisher" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}SeriesTitleNumber" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}Title" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}TitleOfComponent" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}BibliographicLevel" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}SponsoringBody" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}ElectronicDataFormatType" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}Language" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}MediumType" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}Ext" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "author",
    "authorOfComponent",
    "bibliographicItemId",
    "bibliographicRecordIds",
    "componentId",
    "edition",
    "pagination",
    "placeOfPublication",
    "publicationDate",
    "publicationDateOfComponent",
    "publisher",
    "seriesTitleNumber",
    "title",
    "titleOfComponent",
    "bibliographicLevel",
    "sponsoringBody",
    "electronicDataFormatType",
    "language",
    "mediumType",
    "ext"
})
@XmlRootElement(name = "BibliographicDescription")
public class BibliographicDescription implements Equals2, HashCode2, ToString2
{

    @XmlElement(name = "Author")
    protected String author;
    @XmlElement(name = "AuthorOfComponent")
    protected String authorOfComponent;
    @XmlElement(name = "BibliographicItemId")
    protected BibliographicItemId bibliographicItemId;
    @XmlElement(name = "BibliographicRecordId")
    protected List<BibliographicRecordId> bibliographicRecordIds;
    @XmlElement(name = "ComponentId")
    protected ComponentId componentId;
    @XmlElement(name = "Edition")
    protected String edition;
    @XmlElement(name = "Pagination")
    protected String pagination;
    @XmlElement(name = "PlaceOfPublication")
    protected String placeOfPublication;
    @XmlElement(name = "PublicationDate")
    protected String publicationDate;
    @XmlElement(name = "PublicationDateOfComponent")
    protected String publicationDateOfComponent;
    @XmlElement(name = "Publisher")
    protected String publisher;
    @XmlElement(name = "SeriesTitleNumber")
    protected String seriesTitleNumber;
    @XmlElement(name = "Title")
    protected String title;
    @XmlElement(name = "TitleOfComponent")
    protected String titleOfComponent;
    @XmlElement(name = "BibliographicLevel")
    protected SchemeValuePair bibliographicLevel;
    @XmlElement(name = "SponsoringBody")
    protected String sponsoringBody;
    @XmlElement(name = "ElectronicDataFormatType")
    protected SchemeValuePair electronicDataFormatType;
    @XmlElement(name = "Language")
    protected SchemeValuePair language;
    @XmlElement(name = "MediumType")
    protected SchemeValuePair mediumType;
    @XmlElement(name = "Ext")
    protected Ext ext;

    /**
     * Gets the value of the author property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAuthor() {
        return author;
    }

    /**
     * Sets the value of the author property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAuthor(String value) {
        this.author = value;
    }

    /**
     * Gets the value of the authorOfComponent property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAuthorOfComponent() {
        return authorOfComponent;
    }

    /**
     * Sets the value of the authorOfComponent property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAuthorOfComponent(String value) {
        this.authorOfComponent = value;
    }

    /**
     * Gets the value of the bibliographicItemId property.
     * 
     * @return
     *     possible object is
     *     {@link BibliographicItemId }
     *     
     */
    public BibliographicItemId getBibliographicItemId() {
        return bibliographicItemId;
    }

    /**
     * Sets the value of the bibliographicItemId property.
     * 
     * @param value
     *     allowed object is
     *     {@link BibliographicItemId }
     *     
     */
    public void setBibliographicItemId(BibliographicItemId value) {
        this.bibliographicItemId = value;
    }

    /**
     * Gets the value of the bibliographicRecordIds property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the bibliographicRecordIds property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getBibliographicRecordIds().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link BibliographicRecordId }
     * 
     * 
     */
    public List<BibliographicRecordId> getBibliographicRecordIds() {
        if (bibliographicRecordIds == null) {
            bibliographicRecordIds = new ArrayList<BibliographicRecordId>();
        }
        return this.bibliographicRecordIds;
    }

    /**
     * Gets the value of the componentId property.
     * 
     * @return
     *     possible object is
     *     {@link ComponentId }
     *     
     */
    public ComponentId getComponentId() {
        return componentId;
    }

    /**
     * Sets the value of the componentId property.
     * 
     * @param value
     *     allowed object is
     *     {@link ComponentId }
     *     
     */
    public void setComponentId(ComponentId value) {
        this.componentId = value;
    }

    /**
     * Gets the value of the edition property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEdition() {
        return edition;
    }

    /**
     * Sets the value of the edition property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEdition(String value) {
        this.edition = value;
    }

    /**
     * Gets the value of the pagination property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPagination() {
        return pagination;
    }

    /**
     * Sets the value of the pagination property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPagination(String value) {
        this.pagination = value;
    }

    /**
     * Gets the value of the placeOfPublication property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPlaceOfPublication() {
        return placeOfPublication;
    }

    /**
     * Sets the value of the placeOfPublication property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPlaceOfPublication(String value) {
        this.placeOfPublication = value;
    }

    /**
     * Gets the value of the publicationDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPublicationDate() {
        return publicationDate;
    }

    /**
     * Sets the value of the publicationDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPublicationDate(String value) {
        this.publicationDate = value;
    }

    /**
     * Gets the value of the publicationDateOfComponent property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPublicationDateOfComponent() {
        return publicationDateOfComponent;
    }

    /**
     * Sets the value of the publicationDateOfComponent property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPublicationDateOfComponent(String value) {
        this.publicationDateOfComponent = value;
    }

    /**
     * Gets the value of the publisher property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPublisher() {
        return publisher;
    }

    /**
     * Sets the value of the publisher property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPublisher(String value) {
        this.publisher = value;
    }

    /**
     * Gets the value of the seriesTitleNumber property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSeriesTitleNumber() {
        return seriesTitleNumber;
    }

    /**
     * Sets the value of the seriesTitleNumber property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSeriesTitleNumber(String value) {
        this.seriesTitleNumber = value;
    }

    /**
     * Gets the value of the title property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTitle() {
        return title;
    }

    /**
     * Sets the value of the title property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTitle(String value) {
        this.title = value;
    }

    /**
     * Gets the value of the titleOfComponent property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTitleOfComponent() {
        return titleOfComponent;
    }

    /**
     * Sets the value of the titleOfComponent property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTitleOfComponent(String value) {
        this.titleOfComponent = value;
    }

    /**
     * Gets the value of the bibliographicLevel property.
     * 
     * @return
     *     possible object is
     *     {@link SchemeValuePair }
     *     
     */
    public SchemeValuePair getBibliographicLevel() {
        return bibliographicLevel;
    }

    /**
     * Sets the value of the bibliographicLevel property.
     * 
     * @param value
     *     allowed object is
     *     {@link SchemeValuePair }
     *     
     */
    public void setBibliographicLevel(SchemeValuePair value) {
        this.bibliographicLevel = value;
    }

    /**
     * Gets the value of the sponsoringBody property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSponsoringBody() {
        return sponsoringBody;
    }

    /**
     * Sets the value of the sponsoringBody property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSponsoringBody(String value) {
        this.sponsoringBody = value;
    }

    /**
     * Gets the value of the electronicDataFormatType property.
     * 
     * @return
     *     possible object is
     *     {@link SchemeValuePair }
     *     
     */
    public SchemeValuePair getElectronicDataFormatType() {
        return electronicDataFormatType;
    }

    /**
     * Sets the value of the electronicDataFormatType property.
     * 
     * @param value
     *     allowed object is
     *     {@link SchemeValuePair }
     *     
     */
    public void setElectronicDataFormatType(SchemeValuePair value) {
        this.electronicDataFormatType = value;
    }

    /**
     * Gets the value of the language property.
     * 
     * @return
     *     possible object is
     *     {@link SchemeValuePair }
     *     
     */
    public SchemeValuePair getLanguage() {
        return language;
    }

    /**
     * Sets the value of the language property.
     * 
     * @param value
     *     allowed object is
     *     {@link SchemeValuePair }
     *     
     */
    public void setLanguage(SchemeValuePair value) {
        this.language = value;
    }

    /**
     * Gets the value of the mediumType property.
     * 
     * @return
     *     possible object is
     *     {@link SchemeValuePair }
     *     
     */
    public SchemeValuePair getMediumType() {
        return mediumType;
    }

    /**
     * Sets the value of the mediumType property.
     * 
     * @param value
     *     allowed object is
     *     {@link SchemeValuePair }
     *     
     */
    public void setMediumType(SchemeValuePair value) {
        this.mediumType = value;
    }

    /**
     * Gets the value of the ext property.
     * 
     * @return
     *     possible object is
     *     {@link Ext }
     *     
     */
    public Ext getExt() {
        return ext;
    }

    /**
     * Sets the value of the ext property.
     * 
     * @param value
     *     allowed object is
     *     {@link Ext }
     *     
     */
    public void setExt(Ext value) {
        this.ext = value;
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy2 strategy) {
        int currentHashCode = 1;
        {
            String theAuthor;
            theAuthor = this.getAuthor();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "author", theAuthor), currentHashCode, theAuthor, (this.author!= null));
        }
        {
            String theAuthorOfComponent;
            theAuthorOfComponent = this.getAuthorOfComponent();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "authorOfComponent", theAuthorOfComponent), currentHashCode, theAuthorOfComponent, (this.authorOfComponent!= null));
        }
        {
            BibliographicItemId theBibliographicItemId;
            theBibliographicItemId = this.getBibliographicItemId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "bibliographicItemId", theBibliographicItemId), currentHashCode, theBibliographicItemId, (this.bibliographicItemId!= null));
        }
        {
            List<BibliographicRecordId> theBibliographicRecordIds;
            theBibliographicRecordIds = (((this.bibliographicRecordIds!= null)&&(!this.bibliographicRecordIds.isEmpty()))?this.getBibliographicRecordIds():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "bibliographicRecordIds", theBibliographicRecordIds), currentHashCode, theBibliographicRecordIds, ((this.bibliographicRecordIds!= null)&&(!this.bibliographicRecordIds.isEmpty())));
        }
        {
            ComponentId theComponentId;
            theComponentId = this.getComponentId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "componentId", theComponentId), currentHashCode, theComponentId, (this.componentId!= null));
        }
        {
            String theEdition;
            theEdition = this.getEdition();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "edition", theEdition), currentHashCode, theEdition, (this.edition!= null));
        }
        {
            String thePagination;
            thePagination = this.getPagination();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "pagination", thePagination), currentHashCode, thePagination, (this.pagination!= null));
        }
        {
            String thePlaceOfPublication;
            thePlaceOfPublication = this.getPlaceOfPublication();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "placeOfPublication", thePlaceOfPublication), currentHashCode, thePlaceOfPublication, (this.placeOfPublication!= null));
        }
        {
            String thePublicationDate;
            thePublicationDate = this.getPublicationDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "publicationDate", thePublicationDate), currentHashCode, thePublicationDate, (this.publicationDate!= null));
        }
        {
            String thePublicationDateOfComponent;
            thePublicationDateOfComponent = this.getPublicationDateOfComponent();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "publicationDateOfComponent", thePublicationDateOfComponent), currentHashCode, thePublicationDateOfComponent, (this.publicationDateOfComponent!= null));
        }
        {
            String thePublisher;
            thePublisher = this.getPublisher();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "publisher", thePublisher), currentHashCode, thePublisher, (this.publisher!= null));
        }
        {
            String theSeriesTitleNumber;
            theSeriesTitleNumber = this.getSeriesTitleNumber();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "seriesTitleNumber", theSeriesTitleNumber), currentHashCode, theSeriesTitleNumber, (this.seriesTitleNumber!= null));
        }
        {
            String theTitle;
            theTitle = this.getTitle();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "title", theTitle), currentHashCode, theTitle, (this.title!= null));
        }
        {
            String theTitleOfComponent;
            theTitleOfComponent = this.getTitleOfComponent();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "titleOfComponent", theTitleOfComponent), currentHashCode, theTitleOfComponent, (this.titleOfComponent!= null));
        }
        {
            SchemeValuePair theBibliographicLevel;
            theBibliographicLevel = this.getBibliographicLevel();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "bibliographicLevel", theBibliographicLevel), currentHashCode, theBibliographicLevel, (this.bibliographicLevel!= null));
        }
        {
            String theSponsoringBody;
            theSponsoringBody = this.getSponsoringBody();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "sponsoringBody", theSponsoringBody), currentHashCode, theSponsoringBody, (this.sponsoringBody!= null));
        }
        {
            SchemeValuePair theElectronicDataFormatType;
            theElectronicDataFormatType = this.getElectronicDataFormatType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "electronicDataFormatType", theElectronicDataFormatType), currentHashCode, theElectronicDataFormatType, (this.electronicDataFormatType!= null));
        }
        {
            SchemeValuePair theLanguage;
            theLanguage = this.getLanguage();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "language", theLanguage), currentHashCode, theLanguage, (this.language!= null));
        }
        {
            SchemeValuePair theMediumType;
            theMediumType = this.getMediumType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "mediumType", theMediumType), currentHashCode, theMediumType, (this.mediumType!= null));
        }
        {
            Ext theExt;
            theExt = this.getExt();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ext", theExt), currentHashCode, theExt, (this.ext!= null));
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy2 strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy2 strategy) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final BibliographicDescription that = ((BibliographicDescription) object);
        {
            String lhsAuthor;
            lhsAuthor = this.getAuthor();
            String rhsAuthor;
            rhsAuthor = that.getAuthor();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "author", lhsAuthor), LocatorUtils.property(thatLocator, "author", rhsAuthor), lhsAuthor, rhsAuthor, (this.author!= null), (that.author!= null))) {
                return false;
            }
        }
        {
            String lhsAuthorOfComponent;
            lhsAuthorOfComponent = this.getAuthorOfComponent();
            String rhsAuthorOfComponent;
            rhsAuthorOfComponent = that.getAuthorOfComponent();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "authorOfComponent", lhsAuthorOfComponent), LocatorUtils.property(thatLocator, "authorOfComponent", rhsAuthorOfComponent), lhsAuthorOfComponent, rhsAuthorOfComponent, (this.authorOfComponent!= null), (that.authorOfComponent!= null))) {
                return false;
            }
        }
        {
            BibliographicItemId lhsBibliographicItemId;
            lhsBibliographicItemId = this.getBibliographicItemId();
            BibliographicItemId rhsBibliographicItemId;
            rhsBibliographicItemId = that.getBibliographicItemId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "bibliographicItemId", lhsBibliographicItemId), LocatorUtils.property(thatLocator, "bibliographicItemId", rhsBibliographicItemId), lhsBibliographicItemId, rhsBibliographicItemId, (this.bibliographicItemId!= null), (that.bibliographicItemId!= null))) {
                return false;
            }
        }
        {
            List<BibliographicRecordId> lhsBibliographicRecordIds;
            lhsBibliographicRecordIds = (((this.bibliographicRecordIds!= null)&&(!this.bibliographicRecordIds.isEmpty()))?this.getBibliographicRecordIds():null);
            List<BibliographicRecordId> rhsBibliographicRecordIds;
            rhsBibliographicRecordIds = (((that.bibliographicRecordIds!= null)&&(!that.bibliographicRecordIds.isEmpty()))?that.getBibliographicRecordIds():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "bibliographicRecordIds", lhsBibliographicRecordIds), LocatorUtils.property(thatLocator, "bibliographicRecordIds", rhsBibliographicRecordIds), lhsBibliographicRecordIds, rhsBibliographicRecordIds, ((this.bibliographicRecordIds!= null)&&(!this.bibliographicRecordIds.isEmpty())), ((that.bibliographicRecordIds!= null)&&(!that.bibliographicRecordIds.isEmpty())))) {
                return false;
            }
        }
        {
            ComponentId lhsComponentId;
            lhsComponentId = this.getComponentId();
            ComponentId rhsComponentId;
            rhsComponentId = that.getComponentId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "componentId", lhsComponentId), LocatorUtils.property(thatLocator, "componentId", rhsComponentId), lhsComponentId, rhsComponentId, (this.componentId!= null), (that.componentId!= null))) {
                return false;
            }
        }
        {
            String lhsEdition;
            lhsEdition = this.getEdition();
            String rhsEdition;
            rhsEdition = that.getEdition();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "edition", lhsEdition), LocatorUtils.property(thatLocator, "edition", rhsEdition), lhsEdition, rhsEdition, (this.edition!= null), (that.edition!= null))) {
                return false;
            }
        }
        {
            String lhsPagination;
            lhsPagination = this.getPagination();
            String rhsPagination;
            rhsPagination = that.getPagination();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "pagination", lhsPagination), LocatorUtils.property(thatLocator, "pagination", rhsPagination), lhsPagination, rhsPagination, (this.pagination!= null), (that.pagination!= null))) {
                return false;
            }
        }
        {
            String lhsPlaceOfPublication;
            lhsPlaceOfPublication = this.getPlaceOfPublication();
            String rhsPlaceOfPublication;
            rhsPlaceOfPublication = that.getPlaceOfPublication();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "placeOfPublication", lhsPlaceOfPublication), LocatorUtils.property(thatLocator, "placeOfPublication", rhsPlaceOfPublication), lhsPlaceOfPublication, rhsPlaceOfPublication, (this.placeOfPublication!= null), (that.placeOfPublication!= null))) {
                return false;
            }
        }
        {
            String lhsPublicationDate;
            lhsPublicationDate = this.getPublicationDate();
            String rhsPublicationDate;
            rhsPublicationDate = that.getPublicationDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "publicationDate", lhsPublicationDate), LocatorUtils.property(thatLocator, "publicationDate", rhsPublicationDate), lhsPublicationDate, rhsPublicationDate, (this.publicationDate!= null), (that.publicationDate!= null))) {
                return false;
            }
        }
        {
            String lhsPublicationDateOfComponent;
            lhsPublicationDateOfComponent = this.getPublicationDateOfComponent();
            String rhsPublicationDateOfComponent;
            rhsPublicationDateOfComponent = that.getPublicationDateOfComponent();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "publicationDateOfComponent", lhsPublicationDateOfComponent), LocatorUtils.property(thatLocator, "publicationDateOfComponent", rhsPublicationDateOfComponent), lhsPublicationDateOfComponent, rhsPublicationDateOfComponent, (this.publicationDateOfComponent!= null), (that.publicationDateOfComponent!= null))) {
                return false;
            }
        }
        {
            String lhsPublisher;
            lhsPublisher = this.getPublisher();
            String rhsPublisher;
            rhsPublisher = that.getPublisher();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "publisher", lhsPublisher), LocatorUtils.property(thatLocator, "publisher", rhsPublisher), lhsPublisher, rhsPublisher, (this.publisher!= null), (that.publisher!= null))) {
                return false;
            }
        }
        {
            String lhsSeriesTitleNumber;
            lhsSeriesTitleNumber = this.getSeriesTitleNumber();
            String rhsSeriesTitleNumber;
            rhsSeriesTitleNumber = that.getSeriesTitleNumber();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "seriesTitleNumber", lhsSeriesTitleNumber), LocatorUtils.property(thatLocator, "seriesTitleNumber", rhsSeriesTitleNumber), lhsSeriesTitleNumber, rhsSeriesTitleNumber, (this.seriesTitleNumber!= null), (that.seriesTitleNumber!= null))) {
                return false;
            }
        }
        {
            String lhsTitle;
            lhsTitle = this.getTitle();
            String rhsTitle;
            rhsTitle = that.getTitle();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "title", lhsTitle), LocatorUtils.property(thatLocator, "title", rhsTitle), lhsTitle, rhsTitle, (this.title!= null), (that.title!= null))) {
                return false;
            }
        }
        {
            String lhsTitleOfComponent;
            lhsTitleOfComponent = this.getTitleOfComponent();
            String rhsTitleOfComponent;
            rhsTitleOfComponent = that.getTitleOfComponent();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "titleOfComponent", lhsTitleOfComponent), LocatorUtils.property(thatLocator, "titleOfComponent", rhsTitleOfComponent), lhsTitleOfComponent, rhsTitleOfComponent, (this.titleOfComponent!= null), (that.titleOfComponent!= null))) {
                return false;
            }
        }
        {
            SchemeValuePair lhsBibliographicLevel;
            lhsBibliographicLevel = this.getBibliographicLevel();
            SchemeValuePair rhsBibliographicLevel;
            rhsBibliographicLevel = that.getBibliographicLevel();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "bibliographicLevel", lhsBibliographicLevel), LocatorUtils.property(thatLocator, "bibliographicLevel", rhsBibliographicLevel), lhsBibliographicLevel, rhsBibliographicLevel, (this.bibliographicLevel!= null), (that.bibliographicLevel!= null))) {
                return false;
            }
        }
        {
            String lhsSponsoringBody;
            lhsSponsoringBody = this.getSponsoringBody();
            String rhsSponsoringBody;
            rhsSponsoringBody = that.getSponsoringBody();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "sponsoringBody", lhsSponsoringBody), LocatorUtils.property(thatLocator, "sponsoringBody", rhsSponsoringBody), lhsSponsoringBody, rhsSponsoringBody, (this.sponsoringBody!= null), (that.sponsoringBody!= null))) {
                return false;
            }
        }
        {
            SchemeValuePair lhsElectronicDataFormatType;
            lhsElectronicDataFormatType = this.getElectronicDataFormatType();
            SchemeValuePair rhsElectronicDataFormatType;
            rhsElectronicDataFormatType = that.getElectronicDataFormatType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "electronicDataFormatType", lhsElectronicDataFormatType), LocatorUtils.property(thatLocator, "electronicDataFormatType", rhsElectronicDataFormatType), lhsElectronicDataFormatType, rhsElectronicDataFormatType, (this.electronicDataFormatType!= null), (that.electronicDataFormatType!= null))) {
                return false;
            }
        }
        {
            SchemeValuePair lhsLanguage;
            lhsLanguage = this.getLanguage();
            SchemeValuePair rhsLanguage;
            rhsLanguage = that.getLanguage();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "language", lhsLanguage), LocatorUtils.property(thatLocator, "language", rhsLanguage), lhsLanguage, rhsLanguage, (this.language!= null), (that.language!= null))) {
                return false;
            }
        }
        {
            SchemeValuePair lhsMediumType;
            lhsMediumType = this.getMediumType();
            SchemeValuePair rhsMediumType;
            rhsMediumType = that.getMediumType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "mediumType", lhsMediumType), LocatorUtils.property(thatLocator, "mediumType", rhsMediumType), lhsMediumType, rhsMediumType, (this.mediumType!= null), (that.mediumType!= null))) {
                return false;
            }
        }
        {
            Ext lhsExt;
            lhsExt = this.getExt();
            Ext rhsExt;
            rhsExt = that.getExt();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ext", lhsExt), LocatorUtils.property(thatLocator, "ext", rhsExt), lhsExt, rhsExt, (this.ext!= null), (that.ext!= null))) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy2 strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public String toString() {
        final ToStringStrategy2 strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        {
            String theAuthor;
            theAuthor = this.getAuthor();
            strategy.appendField(locator, this, "author", buffer, theAuthor, (this.author!= null));
        }
        {
            String theAuthorOfComponent;
            theAuthorOfComponent = this.getAuthorOfComponent();
            strategy.appendField(locator, this, "authorOfComponent", buffer, theAuthorOfComponent, (this.authorOfComponent!= null));
        }
        {
            BibliographicItemId theBibliographicItemId;
            theBibliographicItemId = this.getBibliographicItemId();
            strategy.appendField(locator, this, "bibliographicItemId", buffer, theBibliographicItemId, (this.bibliographicItemId!= null));
        }
        {
            List<BibliographicRecordId> theBibliographicRecordIds;
            theBibliographicRecordIds = (((this.bibliographicRecordIds!= null)&&(!this.bibliographicRecordIds.isEmpty()))?this.getBibliographicRecordIds():null);
            strategy.appendField(locator, this, "bibliographicRecordIds", buffer, theBibliographicRecordIds, ((this.bibliographicRecordIds!= null)&&(!this.bibliographicRecordIds.isEmpty())));
        }
        {
            ComponentId theComponentId;
            theComponentId = this.getComponentId();
            strategy.appendField(locator, this, "componentId", buffer, theComponentId, (this.componentId!= null));
        }
        {
            String theEdition;
            theEdition = this.getEdition();
            strategy.appendField(locator, this, "edition", buffer, theEdition, (this.edition!= null));
        }
        {
            String thePagination;
            thePagination = this.getPagination();
            strategy.appendField(locator, this, "pagination", buffer, thePagination, (this.pagination!= null));
        }
        {
            String thePlaceOfPublication;
            thePlaceOfPublication = this.getPlaceOfPublication();
            strategy.appendField(locator, this, "placeOfPublication", buffer, thePlaceOfPublication, (this.placeOfPublication!= null));
        }
        {
            String thePublicationDate;
            thePublicationDate = this.getPublicationDate();
            strategy.appendField(locator, this, "publicationDate", buffer, thePublicationDate, (this.publicationDate!= null));
        }
        {
            String thePublicationDateOfComponent;
            thePublicationDateOfComponent = this.getPublicationDateOfComponent();
            strategy.appendField(locator, this, "publicationDateOfComponent", buffer, thePublicationDateOfComponent, (this.publicationDateOfComponent!= null));
        }
        {
            String thePublisher;
            thePublisher = this.getPublisher();
            strategy.appendField(locator, this, "publisher", buffer, thePublisher, (this.publisher!= null));
        }
        {
            String theSeriesTitleNumber;
            theSeriesTitleNumber = this.getSeriesTitleNumber();
            strategy.appendField(locator, this, "seriesTitleNumber", buffer, theSeriesTitleNumber, (this.seriesTitleNumber!= null));
        }
        {
            String theTitle;
            theTitle = this.getTitle();
            strategy.appendField(locator, this, "title", buffer, theTitle, (this.title!= null));
        }
        {
            String theTitleOfComponent;
            theTitleOfComponent = this.getTitleOfComponent();
            strategy.appendField(locator, this, "titleOfComponent", buffer, theTitleOfComponent, (this.titleOfComponent!= null));
        }
        {
            SchemeValuePair theBibliographicLevel;
            theBibliographicLevel = this.getBibliographicLevel();
            strategy.appendField(locator, this, "bibliographicLevel", buffer, theBibliographicLevel, (this.bibliographicLevel!= null));
        }
        {
            String theSponsoringBody;
            theSponsoringBody = this.getSponsoringBody();
            strategy.appendField(locator, this, "sponsoringBody", buffer, theSponsoringBody, (this.sponsoringBody!= null));
        }
        {
            SchemeValuePair theElectronicDataFormatType;
            theElectronicDataFormatType = this.getElectronicDataFormatType();
            strategy.appendField(locator, this, "electronicDataFormatType", buffer, theElectronicDataFormatType, (this.electronicDataFormatType!= null));
        }
        {
            SchemeValuePair theLanguage;
            theLanguage = this.getLanguage();
            strategy.appendField(locator, this, "language", buffer, theLanguage, (this.language!= null));
        }
        {
            SchemeValuePair theMediumType;
            theMediumType = this.getMediumType();
            strategy.appendField(locator, this, "mediumType", buffer, theMediumType, (this.mediumType!= null));
        }
        {
            Ext theExt;
            theExt = this.getExt();
            strategy.appendField(locator, this, "ext", buffer, theExt, (this.ext!= null));
        }
        return buffer;
    }

}
