//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.03.12 at 09:54:26 AM CET 
//


package no.bibsys.alma.rest.ncip;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals2;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy2;
import org.jvnet.jaxb2_commons.lang.HashCode2;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy2;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString2;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy2;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;choice&gt;
 *           &lt;sequence&gt;
 *             &lt;element ref="{http://www.niso.org/2008/ncip}ElectronicDataFormatType"/&gt;
 *             &lt;element ref="{http://www.niso.org/2008/ncip}ActualResource"/&gt;
 *           &lt;/sequence&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}ReferenceToResource"/&gt;
 *         &lt;/choice&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}Ext" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "referenceToResource",
    "electronicDataFormatType",
    "actualResource",
    "ext"
})
@XmlRootElement(name = "ElectronicResource")
public class ElectronicResource implements Equals2, HashCode2, ToString2
{

    @XmlElement(name = "ReferenceToResource")
    protected String referenceToResource;
    @XmlElement(name = "ElectronicDataFormatType")
    protected SchemeValuePair electronicDataFormatType;
    @XmlElement(name = "ActualResource")
    protected String actualResource;
    @XmlElement(name = "Ext")
    protected Ext ext;

    /**
     * Gets the value of the referenceToResource property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getReferenceToResource() {
        return referenceToResource;
    }

    /**
     * Sets the value of the referenceToResource property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setReferenceToResource(String value) {
        this.referenceToResource = value;
    }

    /**
     * Gets the value of the electronicDataFormatType property.
     * 
     * @return
     *     possible object is
     *     {@link SchemeValuePair }
     *     
     */
    public SchemeValuePair getElectronicDataFormatType() {
        return electronicDataFormatType;
    }

    /**
     * Sets the value of the electronicDataFormatType property.
     * 
     * @param value
     *     allowed object is
     *     {@link SchemeValuePair }
     *     
     */
    public void setElectronicDataFormatType(SchemeValuePair value) {
        this.electronicDataFormatType = value;
    }

    /**
     * Gets the value of the actualResource property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getActualResource() {
        return actualResource;
    }

    /**
     * Sets the value of the actualResource property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setActualResource(String value) {
        this.actualResource = value;
    }

    /**
     * Gets the value of the ext property.
     * 
     * @return
     *     possible object is
     *     {@link Ext }
     *     
     */
    public Ext getExt() {
        return ext;
    }

    /**
     * Sets the value of the ext property.
     * 
     * @param value
     *     allowed object is
     *     {@link Ext }
     *     
     */
    public void setExt(Ext value) {
        this.ext = value;
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy2 strategy) {
        int currentHashCode = 1;
        {
            String theReferenceToResource;
            theReferenceToResource = this.getReferenceToResource();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "referenceToResource", theReferenceToResource), currentHashCode, theReferenceToResource, (this.referenceToResource!= null));
        }
        {
            SchemeValuePair theElectronicDataFormatType;
            theElectronicDataFormatType = this.getElectronicDataFormatType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "electronicDataFormatType", theElectronicDataFormatType), currentHashCode, theElectronicDataFormatType, (this.electronicDataFormatType!= null));
        }
        {
            String theActualResource;
            theActualResource = this.getActualResource();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "actualResource", theActualResource), currentHashCode, theActualResource, (this.actualResource!= null));
        }
        {
            Ext theExt;
            theExt = this.getExt();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ext", theExt), currentHashCode, theExt, (this.ext!= null));
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy2 strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy2 strategy) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final ElectronicResource that = ((ElectronicResource) object);
        {
            String lhsReferenceToResource;
            lhsReferenceToResource = this.getReferenceToResource();
            String rhsReferenceToResource;
            rhsReferenceToResource = that.getReferenceToResource();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "referenceToResource", lhsReferenceToResource), LocatorUtils.property(thatLocator, "referenceToResource", rhsReferenceToResource), lhsReferenceToResource, rhsReferenceToResource, (this.referenceToResource!= null), (that.referenceToResource!= null))) {
                return false;
            }
        }
        {
            SchemeValuePair lhsElectronicDataFormatType;
            lhsElectronicDataFormatType = this.getElectronicDataFormatType();
            SchemeValuePair rhsElectronicDataFormatType;
            rhsElectronicDataFormatType = that.getElectronicDataFormatType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "electronicDataFormatType", lhsElectronicDataFormatType), LocatorUtils.property(thatLocator, "electronicDataFormatType", rhsElectronicDataFormatType), lhsElectronicDataFormatType, rhsElectronicDataFormatType, (this.electronicDataFormatType!= null), (that.electronicDataFormatType!= null))) {
                return false;
            }
        }
        {
            String lhsActualResource;
            lhsActualResource = this.getActualResource();
            String rhsActualResource;
            rhsActualResource = that.getActualResource();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "actualResource", lhsActualResource), LocatorUtils.property(thatLocator, "actualResource", rhsActualResource), lhsActualResource, rhsActualResource, (this.actualResource!= null), (that.actualResource!= null))) {
                return false;
            }
        }
        {
            Ext lhsExt;
            lhsExt = this.getExt();
            Ext rhsExt;
            rhsExt = that.getExt();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ext", lhsExt), LocatorUtils.property(thatLocator, "ext", rhsExt), lhsExt, rhsExt, (this.ext!= null), (that.ext!= null))) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy2 strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public String toString() {
        final ToStringStrategy2 strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        {
            String theReferenceToResource;
            theReferenceToResource = this.getReferenceToResource();
            strategy.appendField(locator, this, "referenceToResource", buffer, theReferenceToResource, (this.referenceToResource!= null));
        }
        {
            SchemeValuePair theElectronicDataFormatType;
            theElectronicDataFormatType = this.getElectronicDataFormatType();
            strategy.appendField(locator, this, "electronicDataFormatType", buffer, theElectronicDataFormatType, (this.electronicDataFormatType!= null));
        }
        {
            String theActualResource;
            theActualResource = this.getActualResource();
            strategy.appendField(locator, this, "actualResource", buffer, theActualResource, (this.actualResource!= null));
        }
        {
            Ext theExt;
            theExt = this.getExt();
            strategy.appendField(locator, this, "ext", buffer, theExt, (this.ext!= null));
        }
        return buffer;
    }

}
