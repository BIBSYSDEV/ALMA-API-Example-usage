//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.03.12 at 09:54:26 AM CET 
//


package no.bibsys.alma.rest.ncip;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;
import org.jvnet.jaxb2_commons.lang.Equals2;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy2;
import org.jvnet.jaxb2_commons.lang.HashCode2;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy2;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString2;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy2;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}InitiationHeader" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}MandatedAction" minOccurs="0"/&gt;
 *         &lt;choice&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}UserId"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}AuthenticationInput" maxOccurs="unbounded"/&gt;
 *         &lt;/choice&gt;
 *         &lt;choice&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}ItemId" maxOccurs="unbounded"/&gt;
 *           &lt;sequence&gt;
 *             &lt;element ref="{http://www.niso.org/2008/ncip}BibliographicId" maxOccurs="unbounded"/&gt;
 *             &lt;element ref="{http://www.niso.org/2008/ncip}ItemId" maxOccurs="unbounded" minOccurs="0"/&gt;
 *           &lt;/sequence&gt;
 *         &lt;/choice&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}RequestId" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}RequestType"/&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}RequestScopeType"/&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}ItemOptionalFields" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}ShippingInformation" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}EarliestDateNeeded" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}NeedBeforeDate" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}PickupLocation" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}PickupExpiryDate" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}AcknowledgedFeeAmount" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}PaidFeeAmount" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}AcknowledgedItemUseRestrictionType" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}ItemElementType" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}UserElementType" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}Ext" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "initiationHeader",
    "mandatedAction",
    "authenticationInputs",
    "userId",
    "bibliographicIds",
    "itemIds",
    "requestId",
    "requestType",
    "requestScopeType",
    "itemOptionalFields",
    "shippingInformation",
    "earliestDateNeeded",
    "needBeforeDate",
    "pickupLocation",
    "pickupExpiryDate",
    "acknowledgedFeeAmount",
    "paidFeeAmount",
    "acknowledgedItemUseRestrictionTypes",
    "itemElementTypes",
    "userElementTypes",
    "ext"
})
@XmlRootElement(name = "RequestItem")
public class RequestItem implements Equals2, HashCode2, ToString2
{

    @XmlElement(name = "InitiationHeader")
    protected InitiationHeader initiationHeader;
    @XmlElement(name = "MandatedAction")
    protected MandatedAction mandatedAction;
    @XmlElement(name = "AuthenticationInput")
    protected List<AuthenticationInput> authenticationInputs;
    @XmlElement(name = "UserId")
    protected UserId userId;
    @XmlElement(name = "BibliographicId")
    protected List<BibliographicId> bibliographicIds;
    @XmlElement(name = "ItemId")
    protected List<ItemId> itemIds;
    @XmlElement(name = "RequestId")
    protected RequestId requestId;
    @XmlElement(name = "RequestType", required = true)
    protected SchemeValuePair requestType;
    @XmlElement(name = "RequestScopeType", required = true)
    protected SchemeValuePair requestScopeType;
    @XmlElement(name = "ItemOptionalFields")
    protected ItemOptionalFields itemOptionalFields;
    @XmlElement(name = "ShippingInformation")
    protected ShippingInformation shippingInformation;
    @XmlElement(name = "EarliestDateNeeded")
    @XmlSchemaType(name = "dateTime")
    protected XMLGregorianCalendar earliestDateNeeded;
    @XmlElement(name = "NeedBeforeDate")
    @XmlSchemaType(name = "dateTime")
    protected XMLGregorianCalendar needBeforeDate;
    @XmlElement(name = "PickupLocation")
    protected SchemeValuePair pickupLocation;
    @XmlElement(name = "PickupExpiryDate")
    @XmlSchemaType(name = "dateTime")
    protected XMLGregorianCalendar pickupExpiryDate;
    @XmlElement(name = "AcknowledgedFeeAmount")
    protected AcknowledgedFeeAmount acknowledgedFeeAmount;
    @XmlElement(name = "PaidFeeAmount")
    protected PaidFeeAmount paidFeeAmount;
    @XmlElement(name = "AcknowledgedItemUseRestrictionType")
    protected List<SchemeValuePair> acknowledgedItemUseRestrictionTypes;
    @XmlElement(name = "ItemElementType")
    protected List<SchemeValuePair> itemElementTypes;
    @XmlElement(name = "UserElementType")
    protected List<SchemeValuePair> userElementTypes;
    @XmlElement(name = "Ext")
    protected Ext ext;

    /**
     * Gets the value of the initiationHeader property.
     * 
     * @return
     *     possible object is
     *     {@link InitiationHeader }
     *     
     */
    public InitiationHeader getInitiationHeader() {
        return initiationHeader;
    }

    /**
     * Sets the value of the initiationHeader property.
     * 
     * @param value
     *     allowed object is
     *     {@link InitiationHeader }
     *     
     */
    public void setInitiationHeader(InitiationHeader value) {
        this.initiationHeader = value;
    }

    /**
     * Gets the value of the mandatedAction property.
     * 
     * @return
     *     possible object is
     *     {@link MandatedAction }
     *     
     */
    public MandatedAction getMandatedAction() {
        return mandatedAction;
    }

    /**
     * Sets the value of the mandatedAction property.
     * 
     * @param value
     *     allowed object is
     *     {@link MandatedAction }
     *     
     */
    public void setMandatedAction(MandatedAction value) {
        this.mandatedAction = value;
    }

    /**
     * Gets the value of the authenticationInputs property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the authenticationInputs property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAuthenticationInputs().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AuthenticationInput }
     * 
     * 
     */
    public List<AuthenticationInput> getAuthenticationInputs() {
        if (authenticationInputs == null) {
            authenticationInputs = new ArrayList<AuthenticationInput>();
        }
        return this.authenticationInputs;
    }

    /**
     * Gets the value of the userId property.
     * 
     * @return
     *     possible object is
     *     {@link UserId }
     *     
     */
    public UserId getUserId() {
        return userId;
    }

    /**
     * Sets the value of the userId property.
     * 
     * @param value
     *     allowed object is
     *     {@link UserId }
     *     
     */
    public void setUserId(UserId value) {
        this.userId = value;
    }

    /**
     * Gets the value of the bibliographicIds property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the bibliographicIds property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getBibliographicIds().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link BibliographicId }
     * 
     * 
     */
    public List<BibliographicId> getBibliographicIds() {
        if (bibliographicIds == null) {
            bibliographicIds = new ArrayList<BibliographicId>();
        }
        return this.bibliographicIds;
    }

    /**
     * Gets the value of the itemIds property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the itemIds property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getItemIds().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ItemId }
     * 
     * 
     */
    public List<ItemId> getItemIds() {
        if (itemIds == null) {
            itemIds = new ArrayList<ItemId>();
        }
        return this.itemIds;
    }

    /**
     * Gets the value of the requestId property.
     * 
     * @return
     *     possible object is
     *     {@link RequestId }
     *     
     */
    public RequestId getRequestId() {
        return requestId;
    }

    /**
     * Sets the value of the requestId property.
     * 
     * @param value
     *     allowed object is
     *     {@link RequestId }
     *     
     */
    public void setRequestId(RequestId value) {
        this.requestId = value;
    }

    /**
     * Gets the value of the requestType property.
     * 
     * @return
     *     possible object is
     *     {@link SchemeValuePair }
     *     
     */
    public SchemeValuePair getRequestType() {
        return requestType;
    }

    /**
     * Sets the value of the requestType property.
     * 
     * @param value
     *     allowed object is
     *     {@link SchemeValuePair }
     *     
     */
    public void setRequestType(SchemeValuePair value) {
        this.requestType = value;
    }

    /**
     * Gets the value of the requestScopeType property.
     * 
     * @return
     *     possible object is
     *     {@link SchemeValuePair }
     *     
     */
    public SchemeValuePair getRequestScopeType() {
        return requestScopeType;
    }

    /**
     * Sets the value of the requestScopeType property.
     * 
     * @param value
     *     allowed object is
     *     {@link SchemeValuePair }
     *     
     */
    public void setRequestScopeType(SchemeValuePair value) {
        this.requestScopeType = value;
    }

    /**
     * Gets the value of the itemOptionalFields property.
     * 
     * @return
     *     possible object is
     *     {@link ItemOptionalFields }
     *     
     */
    public ItemOptionalFields getItemOptionalFields() {
        return itemOptionalFields;
    }

    /**
     * Sets the value of the itemOptionalFields property.
     * 
     * @param value
     *     allowed object is
     *     {@link ItemOptionalFields }
     *     
     */
    public void setItemOptionalFields(ItemOptionalFields value) {
        this.itemOptionalFields = value;
    }

    /**
     * Gets the value of the shippingInformation property.
     * 
     * @return
     *     possible object is
     *     {@link ShippingInformation }
     *     
     */
    public ShippingInformation getShippingInformation() {
        return shippingInformation;
    }

    /**
     * Sets the value of the shippingInformation property.
     * 
     * @param value
     *     allowed object is
     *     {@link ShippingInformation }
     *     
     */
    public void setShippingInformation(ShippingInformation value) {
        this.shippingInformation = value;
    }

    /**
     * Gets the value of the earliestDateNeeded property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getEarliestDateNeeded() {
        return earliestDateNeeded;
    }

    /**
     * Sets the value of the earliestDateNeeded property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setEarliestDateNeeded(XMLGregorianCalendar value) {
        this.earliestDateNeeded = value;
    }

    /**
     * Gets the value of the needBeforeDate property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getNeedBeforeDate() {
        return needBeforeDate;
    }

    /**
     * Sets the value of the needBeforeDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setNeedBeforeDate(XMLGregorianCalendar value) {
        this.needBeforeDate = value;
    }

    /**
     * Gets the value of the pickupLocation property.
     * 
     * @return
     *     possible object is
     *     {@link SchemeValuePair }
     *     
     */
    public SchemeValuePair getPickupLocation() {
        return pickupLocation;
    }

    /**
     * Sets the value of the pickupLocation property.
     * 
     * @param value
     *     allowed object is
     *     {@link SchemeValuePair }
     *     
     */
    public void setPickupLocation(SchemeValuePair value) {
        this.pickupLocation = value;
    }

    /**
     * Gets the value of the pickupExpiryDate property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getPickupExpiryDate() {
        return pickupExpiryDate;
    }

    /**
     * Sets the value of the pickupExpiryDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setPickupExpiryDate(XMLGregorianCalendar value) {
        this.pickupExpiryDate = value;
    }

    /**
     * Gets the value of the acknowledgedFeeAmount property.
     * 
     * @return
     *     possible object is
     *     {@link AcknowledgedFeeAmount }
     *     
     */
    public AcknowledgedFeeAmount getAcknowledgedFeeAmount() {
        return acknowledgedFeeAmount;
    }

    /**
     * Sets the value of the acknowledgedFeeAmount property.
     * 
     * @param value
     *     allowed object is
     *     {@link AcknowledgedFeeAmount }
     *     
     */
    public void setAcknowledgedFeeAmount(AcknowledgedFeeAmount value) {
        this.acknowledgedFeeAmount = value;
    }

    /**
     * Gets the value of the paidFeeAmount property.
     * 
     * @return
     *     possible object is
     *     {@link PaidFeeAmount }
     *     
     */
    public PaidFeeAmount getPaidFeeAmount() {
        return paidFeeAmount;
    }

    /**
     * Sets the value of the paidFeeAmount property.
     * 
     * @param value
     *     allowed object is
     *     {@link PaidFeeAmount }
     *     
     */
    public void setPaidFeeAmount(PaidFeeAmount value) {
        this.paidFeeAmount = value;
    }

    /**
     * Gets the value of the acknowledgedItemUseRestrictionTypes property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the acknowledgedItemUseRestrictionTypes property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAcknowledgedItemUseRestrictionTypes().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SchemeValuePair }
     * 
     * 
     */
    public List<SchemeValuePair> getAcknowledgedItemUseRestrictionTypes() {
        if (acknowledgedItemUseRestrictionTypes == null) {
            acknowledgedItemUseRestrictionTypes = new ArrayList<SchemeValuePair>();
        }
        return this.acknowledgedItemUseRestrictionTypes;
    }

    /**
     * Gets the value of the itemElementTypes property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the itemElementTypes property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getItemElementTypes().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SchemeValuePair }
     * 
     * 
     */
    public List<SchemeValuePair> getItemElementTypes() {
        if (itemElementTypes == null) {
            itemElementTypes = new ArrayList<SchemeValuePair>();
        }
        return this.itemElementTypes;
    }

    /**
     * Gets the value of the userElementTypes property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the userElementTypes property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getUserElementTypes().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SchemeValuePair }
     * 
     * 
     */
    public List<SchemeValuePair> getUserElementTypes() {
        if (userElementTypes == null) {
            userElementTypes = new ArrayList<SchemeValuePair>();
        }
        return this.userElementTypes;
    }

    /**
     * Gets the value of the ext property.
     * 
     * @return
     *     possible object is
     *     {@link Ext }
     *     
     */
    public Ext getExt() {
        return ext;
    }

    /**
     * Sets the value of the ext property.
     * 
     * @param value
     *     allowed object is
     *     {@link Ext }
     *     
     */
    public void setExt(Ext value) {
        this.ext = value;
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy2 strategy) {
        int currentHashCode = 1;
        {
            InitiationHeader theInitiationHeader;
            theInitiationHeader = this.getInitiationHeader();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "initiationHeader", theInitiationHeader), currentHashCode, theInitiationHeader, (this.initiationHeader!= null));
        }
        {
            MandatedAction theMandatedAction;
            theMandatedAction = this.getMandatedAction();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "mandatedAction", theMandatedAction), currentHashCode, theMandatedAction, (this.mandatedAction!= null));
        }
        {
            List<AuthenticationInput> theAuthenticationInputs;
            theAuthenticationInputs = (((this.authenticationInputs!= null)&&(!this.authenticationInputs.isEmpty()))?this.getAuthenticationInputs():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "authenticationInputs", theAuthenticationInputs), currentHashCode, theAuthenticationInputs, ((this.authenticationInputs!= null)&&(!this.authenticationInputs.isEmpty())));
        }
        {
            UserId theUserId;
            theUserId = this.getUserId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "userId", theUserId), currentHashCode, theUserId, (this.userId!= null));
        }
        {
            List<BibliographicId> theBibliographicIds;
            theBibliographicIds = (((this.bibliographicIds!= null)&&(!this.bibliographicIds.isEmpty()))?this.getBibliographicIds():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "bibliographicIds", theBibliographicIds), currentHashCode, theBibliographicIds, ((this.bibliographicIds!= null)&&(!this.bibliographicIds.isEmpty())));
        }
        {
            List<ItemId> theItemIds;
            theItemIds = (((this.itemIds!= null)&&(!this.itemIds.isEmpty()))?this.getItemIds():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "itemIds", theItemIds), currentHashCode, theItemIds, ((this.itemIds!= null)&&(!this.itemIds.isEmpty())));
        }
        {
            RequestId theRequestId;
            theRequestId = this.getRequestId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "requestId", theRequestId), currentHashCode, theRequestId, (this.requestId!= null));
        }
        {
            SchemeValuePair theRequestType;
            theRequestType = this.getRequestType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "requestType", theRequestType), currentHashCode, theRequestType, (this.requestType!= null));
        }
        {
            SchemeValuePair theRequestScopeType;
            theRequestScopeType = this.getRequestScopeType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "requestScopeType", theRequestScopeType), currentHashCode, theRequestScopeType, (this.requestScopeType!= null));
        }
        {
            ItemOptionalFields theItemOptionalFields;
            theItemOptionalFields = this.getItemOptionalFields();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "itemOptionalFields", theItemOptionalFields), currentHashCode, theItemOptionalFields, (this.itemOptionalFields!= null));
        }
        {
            ShippingInformation theShippingInformation;
            theShippingInformation = this.getShippingInformation();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "shippingInformation", theShippingInformation), currentHashCode, theShippingInformation, (this.shippingInformation!= null));
        }
        {
            XMLGregorianCalendar theEarliestDateNeeded;
            theEarliestDateNeeded = this.getEarliestDateNeeded();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "earliestDateNeeded", theEarliestDateNeeded), currentHashCode, theEarliestDateNeeded, (this.earliestDateNeeded!= null));
        }
        {
            XMLGregorianCalendar theNeedBeforeDate;
            theNeedBeforeDate = this.getNeedBeforeDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "needBeforeDate", theNeedBeforeDate), currentHashCode, theNeedBeforeDate, (this.needBeforeDate!= null));
        }
        {
            SchemeValuePair thePickupLocation;
            thePickupLocation = this.getPickupLocation();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "pickupLocation", thePickupLocation), currentHashCode, thePickupLocation, (this.pickupLocation!= null));
        }
        {
            XMLGregorianCalendar thePickupExpiryDate;
            thePickupExpiryDate = this.getPickupExpiryDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "pickupExpiryDate", thePickupExpiryDate), currentHashCode, thePickupExpiryDate, (this.pickupExpiryDate!= null));
        }
        {
            AcknowledgedFeeAmount theAcknowledgedFeeAmount;
            theAcknowledgedFeeAmount = this.getAcknowledgedFeeAmount();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "acknowledgedFeeAmount", theAcknowledgedFeeAmount), currentHashCode, theAcknowledgedFeeAmount, (this.acknowledgedFeeAmount!= null));
        }
        {
            PaidFeeAmount thePaidFeeAmount;
            thePaidFeeAmount = this.getPaidFeeAmount();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "paidFeeAmount", thePaidFeeAmount), currentHashCode, thePaidFeeAmount, (this.paidFeeAmount!= null));
        }
        {
            List<SchemeValuePair> theAcknowledgedItemUseRestrictionTypes;
            theAcknowledgedItemUseRestrictionTypes = (((this.acknowledgedItemUseRestrictionTypes!= null)&&(!this.acknowledgedItemUseRestrictionTypes.isEmpty()))?this.getAcknowledgedItemUseRestrictionTypes():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "acknowledgedItemUseRestrictionTypes", theAcknowledgedItemUseRestrictionTypes), currentHashCode, theAcknowledgedItemUseRestrictionTypes, ((this.acknowledgedItemUseRestrictionTypes!= null)&&(!this.acknowledgedItemUseRestrictionTypes.isEmpty())));
        }
        {
            List<SchemeValuePair> theItemElementTypes;
            theItemElementTypes = (((this.itemElementTypes!= null)&&(!this.itemElementTypes.isEmpty()))?this.getItemElementTypes():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "itemElementTypes", theItemElementTypes), currentHashCode, theItemElementTypes, ((this.itemElementTypes!= null)&&(!this.itemElementTypes.isEmpty())));
        }
        {
            List<SchemeValuePair> theUserElementTypes;
            theUserElementTypes = (((this.userElementTypes!= null)&&(!this.userElementTypes.isEmpty()))?this.getUserElementTypes():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "userElementTypes", theUserElementTypes), currentHashCode, theUserElementTypes, ((this.userElementTypes!= null)&&(!this.userElementTypes.isEmpty())));
        }
        {
            Ext theExt;
            theExt = this.getExt();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ext", theExt), currentHashCode, theExt, (this.ext!= null));
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy2 strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy2 strategy) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final RequestItem that = ((RequestItem) object);
        {
            InitiationHeader lhsInitiationHeader;
            lhsInitiationHeader = this.getInitiationHeader();
            InitiationHeader rhsInitiationHeader;
            rhsInitiationHeader = that.getInitiationHeader();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "initiationHeader", lhsInitiationHeader), LocatorUtils.property(thatLocator, "initiationHeader", rhsInitiationHeader), lhsInitiationHeader, rhsInitiationHeader, (this.initiationHeader!= null), (that.initiationHeader!= null))) {
                return false;
            }
        }
        {
            MandatedAction lhsMandatedAction;
            lhsMandatedAction = this.getMandatedAction();
            MandatedAction rhsMandatedAction;
            rhsMandatedAction = that.getMandatedAction();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "mandatedAction", lhsMandatedAction), LocatorUtils.property(thatLocator, "mandatedAction", rhsMandatedAction), lhsMandatedAction, rhsMandatedAction, (this.mandatedAction!= null), (that.mandatedAction!= null))) {
                return false;
            }
        }
        {
            List<AuthenticationInput> lhsAuthenticationInputs;
            lhsAuthenticationInputs = (((this.authenticationInputs!= null)&&(!this.authenticationInputs.isEmpty()))?this.getAuthenticationInputs():null);
            List<AuthenticationInput> rhsAuthenticationInputs;
            rhsAuthenticationInputs = (((that.authenticationInputs!= null)&&(!that.authenticationInputs.isEmpty()))?that.getAuthenticationInputs():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "authenticationInputs", lhsAuthenticationInputs), LocatorUtils.property(thatLocator, "authenticationInputs", rhsAuthenticationInputs), lhsAuthenticationInputs, rhsAuthenticationInputs, ((this.authenticationInputs!= null)&&(!this.authenticationInputs.isEmpty())), ((that.authenticationInputs!= null)&&(!that.authenticationInputs.isEmpty())))) {
                return false;
            }
        }
        {
            UserId lhsUserId;
            lhsUserId = this.getUserId();
            UserId rhsUserId;
            rhsUserId = that.getUserId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "userId", lhsUserId), LocatorUtils.property(thatLocator, "userId", rhsUserId), lhsUserId, rhsUserId, (this.userId!= null), (that.userId!= null))) {
                return false;
            }
        }
        {
            List<BibliographicId> lhsBibliographicIds;
            lhsBibliographicIds = (((this.bibliographicIds!= null)&&(!this.bibliographicIds.isEmpty()))?this.getBibliographicIds():null);
            List<BibliographicId> rhsBibliographicIds;
            rhsBibliographicIds = (((that.bibliographicIds!= null)&&(!that.bibliographicIds.isEmpty()))?that.getBibliographicIds():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "bibliographicIds", lhsBibliographicIds), LocatorUtils.property(thatLocator, "bibliographicIds", rhsBibliographicIds), lhsBibliographicIds, rhsBibliographicIds, ((this.bibliographicIds!= null)&&(!this.bibliographicIds.isEmpty())), ((that.bibliographicIds!= null)&&(!that.bibliographicIds.isEmpty())))) {
                return false;
            }
        }
        {
            List<ItemId> lhsItemIds;
            lhsItemIds = (((this.itemIds!= null)&&(!this.itemIds.isEmpty()))?this.getItemIds():null);
            List<ItemId> rhsItemIds;
            rhsItemIds = (((that.itemIds!= null)&&(!that.itemIds.isEmpty()))?that.getItemIds():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "itemIds", lhsItemIds), LocatorUtils.property(thatLocator, "itemIds", rhsItemIds), lhsItemIds, rhsItemIds, ((this.itemIds!= null)&&(!this.itemIds.isEmpty())), ((that.itemIds!= null)&&(!that.itemIds.isEmpty())))) {
                return false;
            }
        }
        {
            RequestId lhsRequestId;
            lhsRequestId = this.getRequestId();
            RequestId rhsRequestId;
            rhsRequestId = that.getRequestId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "requestId", lhsRequestId), LocatorUtils.property(thatLocator, "requestId", rhsRequestId), lhsRequestId, rhsRequestId, (this.requestId!= null), (that.requestId!= null))) {
                return false;
            }
        }
        {
            SchemeValuePair lhsRequestType;
            lhsRequestType = this.getRequestType();
            SchemeValuePair rhsRequestType;
            rhsRequestType = that.getRequestType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "requestType", lhsRequestType), LocatorUtils.property(thatLocator, "requestType", rhsRequestType), lhsRequestType, rhsRequestType, (this.requestType!= null), (that.requestType!= null))) {
                return false;
            }
        }
        {
            SchemeValuePair lhsRequestScopeType;
            lhsRequestScopeType = this.getRequestScopeType();
            SchemeValuePair rhsRequestScopeType;
            rhsRequestScopeType = that.getRequestScopeType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "requestScopeType", lhsRequestScopeType), LocatorUtils.property(thatLocator, "requestScopeType", rhsRequestScopeType), lhsRequestScopeType, rhsRequestScopeType, (this.requestScopeType!= null), (that.requestScopeType!= null))) {
                return false;
            }
        }
        {
            ItemOptionalFields lhsItemOptionalFields;
            lhsItemOptionalFields = this.getItemOptionalFields();
            ItemOptionalFields rhsItemOptionalFields;
            rhsItemOptionalFields = that.getItemOptionalFields();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "itemOptionalFields", lhsItemOptionalFields), LocatorUtils.property(thatLocator, "itemOptionalFields", rhsItemOptionalFields), lhsItemOptionalFields, rhsItemOptionalFields, (this.itemOptionalFields!= null), (that.itemOptionalFields!= null))) {
                return false;
            }
        }
        {
            ShippingInformation lhsShippingInformation;
            lhsShippingInformation = this.getShippingInformation();
            ShippingInformation rhsShippingInformation;
            rhsShippingInformation = that.getShippingInformation();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "shippingInformation", lhsShippingInformation), LocatorUtils.property(thatLocator, "shippingInformation", rhsShippingInformation), lhsShippingInformation, rhsShippingInformation, (this.shippingInformation!= null), (that.shippingInformation!= null))) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsEarliestDateNeeded;
            lhsEarliestDateNeeded = this.getEarliestDateNeeded();
            XMLGregorianCalendar rhsEarliestDateNeeded;
            rhsEarliestDateNeeded = that.getEarliestDateNeeded();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "earliestDateNeeded", lhsEarliestDateNeeded), LocatorUtils.property(thatLocator, "earliestDateNeeded", rhsEarliestDateNeeded), lhsEarliestDateNeeded, rhsEarliestDateNeeded, (this.earliestDateNeeded!= null), (that.earliestDateNeeded!= null))) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsNeedBeforeDate;
            lhsNeedBeforeDate = this.getNeedBeforeDate();
            XMLGregorianCalendar rhsNeedBeforeDate;
            rhsNeedBeforeDate = that.getNeedBeforeDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "needBeforeDate", lhsNeedBeforeDate), LocatorUtils.property(thatLocator, "needBeforeDate", rhsNeedBeforeDate), lhsNeedBeforeDate, rhsNeedBeforeDate, (this.needBeforeDate!= null), (that.needBeforeDate!= null))) {
                return false;
            }
        }
        {
            SchemeValuePair lhsPickupLocation;
            lhsPickupLocation = this.getPickupLocation();
            SchemeValuePair rhsPickupLocation;
            rhsPickupLocation = that.getPickupLocation();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "pickupLocation", lhsPickupLocation), LocatorUtils.property(thatLocator, "pickupLocation", rhsPickupLocation), lhsPickupLocation, rhsPickupLocation, (this.pickupLocation!= null), (that.pickupLocation!= null))) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsPickupExpiryDate;
            lhsPickupExpiryDate = this.getPickupExpiryDate();
            XMLGregorianCalendar rhsPickupExpiryDate;
            rhsPickupExpiryDate = that.getPickupExpiryDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "pickupExpiryDate", lhsPickupExpiryDate), LocatorUtils.property(thatLocator, "pickupExpiryDate", rhsPickupExpiryDate), lhsPickupExpiryDate, rhsPickupExpiryDate, (this.pickupExpiryDate!= null), (that.pickupExpiryDate!= null))) {
                return false;
            }
        }
        {
            AcknowledgedFeeAmount lhsAcknowledgedFeeAmount;
            lhsAcknowledgedFeeAmount = this.getAcknowledgedFeeAmount();
            AcknowledgedFeeAmount rhsAcknowledgedFeeAmount;
            rhsAcknowledgedFeeAmount = that.getAcknowledgedFeeAmount();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "acknowledgedFeeAmount", lhsAcknowledgedFeeAmount), LocatorUtils.property(thatLocator, "acknowledgedFeeAmount", rhsAcknowledgedFeeAmount), lhsAcknowledgedFeeAmount, rhsAcknowledgedFeeAmount, (this.acknowledgedFeeAmount!= null), (that.acknowledgedFeeAmount!= null))) {
                return false;
            }
        }
        {
            PaidFeeAmount lhsPaidFeeAmount;
            lhsPaidFeeAmount = this.getPaidFeeAmount();
            PaidFeeAmount rhsPaidFeeAmount;
            rhsPaidFeeAmount = that.getPaidFeeAmount();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "paidFeeAmount", lhsPaidFeeAmount), LocatorUtils.property(thatLocator, "paidFeeAmount", rhsPaidFeeAmount), lhsPaidFeeAmount, rhsPaidFeeAmount, (this.paidFeeAmount!= null), (that.paidFeeAmount!= null))) {
                return false;
            }
        }
        {
            List<SchemeValuePair> lhsAcknowledgedItemUseRestrictionTypes;
            lhsAcknowledgedItemUseRestrictionTypes = (((this.acknowledgedItemUseRestrictionTypes!= null)&&(!this.acknowledgedItemUseRestrictionTypes.isEmpty()))?this.getAcknowledgedItemUseRestrictionTypes():null);
            List<SchemeValuePair> rhsAcknowledgedItemUseRestrictionTypes;
            rhsAcknowledgedItemUseRestrictionTypes = (((that.acknowledgedItemUseRestrictionTypes!= null)&&(!that.acknowledgedItemUseRestrictionTypes.isEmpty()))?that.getAcknowledgedItemUseRestrictionTypes():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "acknowledgedItemUseRestrictionTypes", lhsAcknowledgedItemUseRestrictionTypes), LocatorUtils.property(thatLocator, "acknowledgedItemUseRestrictionTypes", rhsAcknowledgedItemUseRestrictionTypes), lhsAcknowledgedItemUseRestrictionTypes, rhsAcknowledgedItemUseRestrictionTypes, ((this.acknowledgedItemUseRestrictionTypes!= null)&&(!this.acknowledgedItemUseRestrictionTypes.isEmpty())), ((that.acknowledgedItemUseRestrictionTypes!= null)&&(!that.acknowledgedItemUseRestrictionTypes.isEmpty())))) {
                return false;
            }
        }
        {
            List<SchemeValuePair> lhsItemElementTypes;
            lhsItemElementTypes = (((this.itemElementTypes!= null)&&(!this.itemElementTypes.isEmpty()))?this.getItemElementTypes():null);
            List<SchemeValuePair> rhsItemElementTypes;
            rhsItemElementTypes = (((that.itemElementTypes!= null)&&(!that.itemElementTypes.isEmpty()))?that.getItemElementTypes():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "itemElementTypes", lhsItemElementTypes), LocatorUtils.property(thatLocator, "itemElementTypes", rhsItemElementTypes), lhsItemElementTypes, rhsItemElementTypes, ((this.itemElementTypes!= null)&&(!this.itemElementTypes.isEmpty())), ((that.itemElementTypes!= null)&&(!that.itemElementTypes.isEmpty())))) {
                return false;
            }
        }
        {
            List<SchemeValuePair> lhsUserElementTypes;
            lhsUserElementTypes = (((this.userElementTypes!= null)&&(!this.userElementTypes.isEmpty()))?this.getUserElementTypes():null);
            List<SchemeValuePair> rhsUserElementTypes;
            rhsUserElementTypes = (((that.userElementTypes!= null)&&(!that.userElementTypes.isEmpty()))?that.getUserElementTypes():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "userElementTypes", lhsUserElementTypes), LocatorUtils.property(thatLocator, "userElementTypes", rhsUserElementTypes), lhsUserElementTypes, rhsUserElementTypes, ((this.userElementTypes!= null)&&(!this.userElementTypes.isEmpty())), ((that.userElementTypes!= null)&&(!that.userElementTypes.isEmpty())))) {
                return false;
            }
        }
        {
            Ext lhsExt;
            lhsExt = this.getExt();
            Ext rhsExt;
            rhsExt = that.getExt();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ext", lhsExt), LocatorUtils.property(thatLocator, "ext", rhsExt), lhsExt, rhsExt, (this.ext!= null), (that.ext!= null))) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy2 strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public String toString() {
        final ToStringStrategy2 strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        {
            InitiationHeader theInitiationHeader;
            theInitiationHeader = this.getInitiationHeader();
            strategy.appendField(locator, this, "initiationHeader", buffer, theInitiationHeader, (this.initiationHeader!= null));
        }
        {
            MandatedAction theMandatedAction;
            theMandatedAction = this.getMandatedAction();
            strategy.appendField(locator, this, "mandatedAction", buffer, theMandatedAction, (this.mandatedAction!= null));
        }
        {
            List<AuthenticationInput> theAuthenticationInputs;
            theAuthenticationInputs = (((this.authenticationInputs!= null)&&(!this.authenticationInputs.isEmpty()))?this.getAuthenticationInputs():null);
            strategy.appendField(locator, this, "authenticationInputs", buffer, theAuthenticationInputs, ((this.authenticationInputs!= null)&&(!this.authenticationInputs.isEmpty())));
        }
        {
            UserId theUserId;
            theUserId = this.getUserId();
            strategy.appendField(locator, this, "userId", buffer, theUserId, (this.userId!= null));
        }
        {
            List<BibliographicId> theBibliographicIds;
            theBibliographicIds = (((this.bibliographicIds!= null)&&(!this.bibliographicIds.isEmpty()))?this.getBibliographicIds():null);
            strategy.appendField(locator, this, "bibliographicIds", buffer, theBibliographicIds, ((this.bibliographicIds!= null)&&(!this.bibliographicIds.isEmpty())));
        }
        {
            List<ItemId> theItemIds;
            theItemIds = (((this.itemIds!= null)&&(!this.itemIds.isEmpty()))?this.getItemIds():null);
            strategy.appendField(locator, this, "itemIds", buffer, theItemIds, ((this.itemIds!= null)&&(!this.itemIds.isEmpty())));
        }
        {
            RequestId theRequestId;
            theRequestId = this.getRequestId();
            strategy.appendField(locator, this, "requestId", buffer, theRequestId, (this.requestId!= null));
        }
        {
            SchemeValuePair theRequestType;
            theRequestType = this.getRequestType();
            strategy.appendField(locator, this, "requestType", buffer, theRequestType, (this.requestType!= null));
        }
        {
            SchemeValuePair theRequestScopeType;
            theRequestScopeType = this.getRequestScopeType();
            strategy.appendField(locator, this, "requestScopeType", buffer, theRequestScopeType, (this.requestScopeType!= null));
        }
        {
            ItemOptionalFields theItemOptionalFields;
            theItemOptionalFields = this.getItemOptionalFields();
            strategy.appendField(locator, this, "itemOptionalFields", buffer, theItemOptionalFields, (this.itemOptionalFields!= null));
        }
        {
            ShippingInformation theShippingInformation;
            theShippingInformation = this.getShippingInformation();
            strategy.appendField(locator, this, "shippingInformation", buffer, theShippingInformation, (this.shippingInformation!= null));
        }
        {
            XMLGregorianCalendar theEarliestDateNeeded;
            theEarliestDateNeeded = this.getEarliestDateNeeded();
            strategy.appendField(locator, this, "earliestDateNeeded", buffer, theEarliestDateNeeded, (this.earliestDateNeeded!= null));
        }
        {
            XMLGregorianCalendar theNeedBeforeDate;
            theNeedBeforeDate = this.getNeedBeforeDate();
            strategy.appendField(locator, this, "needBeforeDate", buffer, theNeedBeforeDate, (this.needBeforeDate!= null));
        }
        {
            SchemeValuePair thePickupLocation;
            thePickupLocation = this.getPickupLocation();
            strategy.appendField(locator, this, "pickupLocation", buffer, thePickupLocation, (this.pickupLocation!= null));
        }
        {
            XMLGregorianCalendar thePickupExpiryDate;
            thePickupExpiryDate = this.getPickupExpiryDate();
            strategy.appendField(locator, this, "pickupExpiryDate", buffer, thePickupExpiryDate, (this.pickupExpiryDate!= null));
        }
        {
            AcknowledgedFeeAmount theAcknowledgedFeeAmount;
            theAcknowledgedFeeAmount = this.getAcknowledgedFeeAmount();
            strategy.appendField(locator, this, "acknowledgedFeeAmount", buffer, theAcknowledgedFeeAmount, (this.acknowledgedFeeAmount!= null));
        }
        {
            PaidFeeAmount thePaidFeeAmount;
            thePaidFeeAmount = this.getPaidFeeAmount();
            strategy.appendField(locator, this, "paidFeeAmount", buffer, thePaidFeeAmount, (this.paidFeeAmount!= null));
        }
        {
            List<SchemeValuePair> theAcknowledgedItemUseRestrictionTypes;
            theAcknowledgedItemUseRestrictionTypes = (((this.acknowledgedItemUseRestrictionTypes!= null)&&(!this.acknowledgedItemUseRestrictionTypes.isEmpty()))?this.getAcknowledgedItemUseRestrictionTypes():null);
            strategy.appendField(locator, this, "acknowledgedItemUseRestrictionTypes", buffer, theAcknowledgedItemUseRestrictionTypes, ((this.acknowledgedItemUseRestrictionTypes!= null)&&(!this.acknowledgedItemUseRestrictionTypes.isEmpty())));
        }
        {
            List<SchemeValuePair> theItemElementTypes;
            theItemElementTypes = (((this.itemElementTypes!= null)&&(!this.itemElementTypes.isEmpty()))?this.getItemElementTypes():null);
            strategy.appendField(locator, this, "itemElementTypes", buffer, theItemElementTypes, ((this.itemElementTypes!= null)&&(!this.itemElementTypes.isEmpty())));
        }
        {
            List<SchemeValuePair> theUserElementTypes;
            theUserElementTypes = (((this.userElementTypes!= null)&&(!this.userElementTypes.isEmpty()))?this.getUserElementTypes():null);
            strategy.appendField(locator, this, "userElementTypes", buffer, theUserElementTypes, ((this.userElementTypes!= null)&&(!this.userElementTypes.isEmpty())));
        }
        {
            Ext theExt;
            theExt = this.getExt();
            strategy.appendField(locator, this, "ext", buffer, theExt, (this.ext!= null));
        }
        return buffer;
    }

}
