//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.03.12 at 09:54:26 AM CET 
//


package no.bibsys.alma.rest.ncip;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals2;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy2;
import org.jvnet.jaxb2_commons.lang.HashCode2;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy2;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString2;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy2;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;choice&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}AcceptItem"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}AcceptItemResponse"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}AgencyCreated"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}AgencyCreatedResponse"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}AgencyUpdated"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}AgencyUpdatedResponse"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}CancelRecallItem"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}CancelRecallItemResponse"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}CancelRequestItem"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}CancelRequestItemResponse"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}CheckInItem"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}CheckInItemResponse"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}CheckOutItem"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}CheckOutItemResponse"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}CirculationStatusChangeReported"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}CirculationStatusChangeReportedResponse"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}CirculationStatusUpdated"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}CirculationStatusUpdatedResponse"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}CreateAgency"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}CreateAgencyResponse"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}CreateItem"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}CreateItemResponse"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}CreateUser"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}CreateUserResponse"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}CreateUserFiscalTransaction"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}CreateUserFiscalTransactionResponse"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}DeleteItem"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}DeleteItemResponse"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}DeleteUser"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}DeleteUserResponse"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}ItemCheckedIn"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}ItemCheckedInResponse"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}ItemCheckedOut"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}ItemCheckedOutResponse"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}ItemCreated"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}ItemCreatedResponse"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}ItemRecallCancelled"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}ItemRecallCancelledResponse"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}ItemRecalled"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}ItemRecalledResponse"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}ItemReceived"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}ItemReceivedResponse"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}ItemRenewed"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}ItemRenewedResponse"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}ItemRequestCancelled"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}ItemRequestCancelledResponse"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}ItemRequestUpdated"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}ItemRequestUpdatedResponse"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}ItemRequested"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}ItemRequestedResponse"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}ItemShipped"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}ItemShippedResponse"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}ItemUpdated"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}ItemUpdatedResponse"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}LookupAgency"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}LookupAgencyResponse"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}LookupItem"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}LookupItemResponse"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}LookupItemSet"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}LookupItemSetResponse"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}LookupRequest"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}LookupRequestResponse"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}LookupUser"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}LookupUserResponse"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}RecallItem"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}RecallItemResponse"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}RenewItem"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}RenewItemResponse"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}ReportCirculationStatusChange"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}ReportCirculationStatusChangeResponse"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}RequestItem"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}RequestItemResponse"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}SendUserNotice"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}SendUserNoticeResponse"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}UndoCheckOutItem"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}UndoCheckOutItemResponse"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}UpdateAgency"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}UpdateAgencyResponse"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}UpdateCirculationStatus"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}UpdateCirculationStatusResponse"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}UpdateItem"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}UpdateItemResponse"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}UpdateRequestItem"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}UpdateRequestItemResponse"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}UpdateUser"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}UpdateUserResponse"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}UserCreated"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}UserCreatedResponse"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}UserFiscalTransactionCreated"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}UserFiscalTransactionCreatedResponse"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}UserNoticeSent"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}UserNoticeSentResponse"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}UserUpdated"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}UserUpdatedResponse"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}Problem" maxOccurs="unbounded"/&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}Ext"/&gt;
 *         &lt;/choice&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="version" use="required" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "ext",
    "problems",
    "userUpdatedResponse",
    "userUpdated",
    "userNoticeSentResponse",
    "userNoticeSent",
    "userFiscalTransactionCreatedResponse",
    "userFiscalTransactionCreated",
    "userCreatedResponse",
    "userCreated",
    "updateUserResponse",
    "updateUser",
    "updateRequestItemResponse",
    "updateRequestItem",
    "updateItemResponse",
    "updateItem",
    "updateCirculationStatusResponse",
    "updateCirculationStatus",
    "updateAgencyResponse",
    "updateAgency",
    "undoCheckOutItemResponse",
    "undoCheckOutItem",
    "sendUserNoticeResponse",
    "sendUserNotice",
    "requestItemResponse",
    "requestItem",
    "reportCirculationStatusChangeResponse",
    "reportCirculationStatusChange",
    "renewItemResponse",
    "renewItem",
    "recallItemResponse",
    "recallItem",
    "lookupUserResponse",
    "lookupUser",
    "lookupRequestResponse",
    "lookupRequest",
    "lookupItemSetResponse",
    "lookupItemSet",
    "lookupItemResponse",
    "lookupItem",
    "lookupAgencyResponse",
    "lookupAgency",
    "itemUpdatedResponse",
    "itemUpdated",
    "itemShippedResponse",
    "itemShipped",
    "itemRequestedResponse",
    "itemRequested",
    "itemRequestUpdatedResponse",
    "itemRequestUpdated",
    "itemRequestCancelledResponse",
    "itemRequestCancelled",
    "itemRenewedResponse",
    "itemRenewed",
    "itemReceivedResponse",
    "itemReceived",
    "itemRecalledResponse",
    "itemRecalled",
    "itemRecallCancelledResponse",
    "itemRecallCancelled",
    "itemCreatedResponse",
    "itemCreated",
    "itemCheckedOutResponse",
    "itemCheckedOut",
    "itemCheckedInResponse",
    "itemCheckedIn",
    "deleteUserResponse",
    "deleteUser",
    "deleteItemResponse",
    "deleteItem",
    "createUserFiscalTransactionResponse",
    "createUserFiscalTransaction",
    "createUserResponse",
    "createUser",
    "createItemResponse",
    "createItem",
    "createAgencyResponse",
    "createAgency",
    "circulationStatusUpdatedResponse",
    "circulationStatusUpdated",
    "circulationStatusChangeReportedResponse",
    "circulationStatusChangeReported",
    "checkOutItemResponse",
    "checkOutItem",
    "checkInItemResponse",
    "checkInItem",
    "cancelRequestItemResponse",
    "cancelRequestItem",
    "cancelRecallItemResponse",
    "cancelRecallItem",
    "agencyUpdatedResponse",
    "agencyUpdated",
    "agencyCreatedResponse",
    "agencyCreated",
    "acceptItemResponse",
    "acceptItem"
})
@XmlRootElement(name = "NCIPMessage")
public class NCIPMessage implements Equals2, HashCode2, ToString2
{

    @XmlElement(name = "Ext")
    protected Ext ext;
    @XmlElement(name = "Problem")
    protected List<Problem> problems;
    @XmlElement(name = "UserUpdatedResponse")
    protected UserUpdatedResponse userUpdatedResponse;
    @XmlElement(name = "UserUpdated")
    protected UserUpdated userUpdated;
    @XmlElement(name = "UserNoticeSentResponse")
    protected UserNoticeSentResponse userNoticeSentResponse;
    @XmlElement(name = "UserNoticeSent")
    protected UserNoticeSent userNoticeSent;
    @XmlElement(name = "UserFiscalTransactionCreatedResponse")
    protected UserFiscalTransactionCreatedResponse userFiscalTransactionCreatedResponse;
    @XmlElement(name = "UserFiscalTransactionCreated")
    protected UserFiscalTransactionCreated userFiscalTransactionCreated;
    @XmlElement(name = "UserCreatedResponse")
    protected UserCreatedResponse userCreatedResponse;
    @XmlElement(name = "UserCreated")
    protected UserCreated userCreated;
    @XmlElement(name = "UpdateUserResponse")
    protected UpdateUserResponse updateUserResponse;
    @XmlElement(name = "UpdateUser")
    protected UpdateUser updateUser;
    @XmlElement(name = "UpdateRequestItemResponse")
    protected UpdateRequestItemResponse updateRequestItemResponse;
    @XmlElement(name = "UpdateRequestItem")
    protected UpdateRequestItem updateRequestItem;
    @XmlElement(name = "UpdateItemResponse")
    protected UpdateItemResponse updateItemResponse;
    @XmlElement(name = "UpdateItem")
    protected UpdateItem updateItem;
    @XmlElement(name = "UpdateCirculationStatusResponse")
    protected UpdateCirculationStatusResponse updateCirculationStatusResponse;
    @XmlElement(name = "UpdateCirculationStatus")
    protected UpdateCirculationStatus updateCirculationStatus;
    @XmlElement(name = "UpdateAgencyResponse")
    protected UpdateAgencyResponse updateAgencyResponse;
    @XmlElement(name = "UpdateAgency")
    protected UpdateAgency updateAgency;
    @XmlElement(name = "UndoCheckOutItemResponse")
    protected UndoCheckOutItemResponse undoCheckOutItemResponse;
    @XmlElement(name = "UndoCheckOutItem")
    protected UndoCheckOutItem undoCheckOutItem;
    @XmlElement(name = "SendUserNoticeResponse")
    protected SendUserNoticeResponse sendUserNoticeResponse;
    @XmlElement(name = "SendUserNotice")
    protected SendUserNotice sendUserNotice;
    @XmlElement(name = "RequestItemResponse")
    protected RequestItemResponse requestItemResponse;
    @XmlElement(name = "RequestItem")
    protected RequestItem requestItem;
    @XmlElement(name = "ReportCirculationStatusChangeResponse")
    protected ReportCirculationStatusChangeResponse reportCirculationStatusChangeResponse;
    @XmlElement(name = "ReportCirculationStatusChange")
    protected ReportCirculationStatusChange reportCirculationStatusChange;
    @XmlElement(name = "RenewItemResponse")
    protected RenewItemResponse renewItemResponse;
    @XmlElement(name = "RenewItem")
    protected RenewItem renewItem;
    @XmlElement(name = "RecallItemResponse")
    protected RecallItemResponse recallItemResponse;
    @XmlElement(name = "RecallItem")
    protected RecallItem recallItem;
    @XmlElement(name = "LookupUserResponse")
    protected LookupUserResponse lookupUserResponse;
    @XmlElement(name = "LookupUser")
    protected LookupUser lookupUser;
    @XmlElement(name = "LookupRequestResponse")
    protected LookupRequestResponse lookupRequestResponse;
    @XmlElement(name = "LookupRequest")
    protected LookupRequest lookupRequest;
    @XmlElement(name = "LookupItemSetResponse")
    protected LookupItemSetResponse lookupItemSetResponse;
    @XmlElement(name = "LookupItemSet")
    protected LookupItemSet lookupItemSet;
    @XmlElement(name = "LookupItemResponse")
    protected LookupItemResponse lookupItemResponse;
    @XmlElement(name = "LookupItem")
    protected LookupItem lookupItem;
    @XmlElement(name = "LookupAgencyResponse")
    protected LookupAgencyResponse lookupAgencyResponse;
    @XmlElement(name = "LookupAgency")
    protected LookupAgency lookupAgency;
    @XmlElement(name = "ItemUpdatedResponse")
    protected ItemUpdatedResponse itemUpdatedResponse;
    @XmlElement(name = "ItemUpdated")
    protected ItemUpdated itemUpdated;
    @XmlElement(name = "ItemShippedResponse")
    protected ItemShippedResponse itemShippedResponse;
    @XmlElement(name = "ItemShipped")
    protected ItemShipped itemShipped;
    @XmlElement(name = "ItemRequestedResponse")
    protected ItemRequestedResponse itemRequestedResponse;
    @XmlElement(name = "ItemRequested")
    protected ItemRequested itemRequested;
    @XmlElement(name = "ItemRequestUpdatedResponse")
    protected ItemRequestUpdatedResponse itemRequestUpdatedResponse;
    @XmlElement(name = "ItemRequestUpdated")
    protected ItemRequestUpdated itemRequestUpdated;
    @XmlElement(name = "ItemRequestCancelledResponse")
    protected ItemRequestCancelledResponse itemRequestCancelledResponse;
    @XmlElement(name = "ItemRequestCancelled")
    protected ItemRequestCancelled itemRequestCancelled;
    @XmlElement(name = "ItemRenewedResponse")
    protected ItemRenewedResponse itemRenewedResponse;
    @XmlElement(name = "ItemRenewed")
    protected ItemRenewed itemRenewed;
    @XmlElement(name = "ItemReceivedResponse")
    protected ItemReceivedResponse itemReceivedResponse;
    @XmlElement(name = "ItemReceived")
    protected ItemReceived itemReceived;
    @XmlElement(name = "ItemRecalledResponse")
    protected ItemRecalledResponse itemRecalledResponse;
    @XmlElement(name = "ItemRecalled")
    protected ItemRecalled itemRecalled;
    @XmlElement(name = "ItemRecallCancelledResponse")
    protected ItemRecallCancelledResponse itemRecallCancelledResponse;
    @XmlElement(name = "ItemRecallCancelled")
    protected ItemRecallCancelled itemRecallCancelled;
    @XmlElement(name = "ItemCreatedResponse")
    protected ItemCreatedResponse itemCreatedResponse;
    @XmlElement(name = "ItemCreated")
    protected ItemCreated itemCreated;
    @XmlElement(name = "ItemCheckedOutResponse")
    protected ItemCheckedOutResponse itemCheckedOutResponse;
    @XmlElement(name = "ItemCheckedOut")
    protected ItemCheckedOut itemCheckedOut;
    @XmlElement(name = "ItemCheckedInResponse")
    protected ItemCheckedInResponse itemCheckedInResponse;
    @XmlElement(name = "ItemCheckedIn")
    protected ItemCheckedIn itemCheckedIn;
    @XmlElement(name = "DeleteUserResponse")
    protected DeleteUserResponse deleteUserResponse;
    @XmlElement(name = "DeleteUser")
    protected DeleteUser deleteUser;
    @XmlElement(name = "DeleteItemResponse")
    protected DeleteItemResponse deleteItemResponse;
    @XmlElement(name = "DeleteItem")
    protected DeleteItem deleteItem;
    @XmlElement(name = "CreateUserFiscalTransactionResponse")
    protected CreateUserFiscalTransactionResponse createUserFiscalTransactionResponse;
    @XmlElement(name = "CreateUserFiscalTransaction")
    protected CreateUserFiscalTransaction createUserFiscalTransaction;
    @XmlElement(name = "CreateUserResponse")
    protected CreateUserResponse createUserResponse;
    @XmlElement(name = "CreateUser")
    protected CreateUser createUser;
    @XmlElement(name = "CreateItemResponse")
    protected CreateItemResponse createItemResponse;
    @XmlElement(name = "CreateItem")
    protected CreateItem createItem;
    @XmlElement(name = "CreateAgencyResponse")
    protected CreateAgencyResponse createAgencyResponse;
    @XmlElement(name = "CreateAgency")
    protected CreateAgency createAgency;
    @XmlElement(name = "CirculationStatusUpdatedResponse")
    protected CirculationStatusUpdatedResponse circulationStatusUpdatedResponse;
    @XmlElement(name = "CirculationStatusUpdated")
    protected CirculationStatusUpdated circulationStatusUpdated;
    @XmlElement(name = "CirculationStatusChangeReportedResponse")
    protected CirculationStatusChangeReportedResponse circulationStatusChangeReportedResponse;
    @XmlElement(name = "CirculationStatusChangeReported")
    protected CirculationStatusChangeReported circulationStatusChangeReported;
    @XmlElement(name = "CheckOutItemResponse")
    protected CheckOutItemResponse checkOutItemResponse;
    @XmlElement(name = "CheckOutItem")
    protected CheckOutItem checkOutItem;
    @XmlElement(name = "CheckInItemResponse")
    protected CheckInItemResponse checkInItemResponse;
    @XmlElement(name = "CheckInItem")
    protected CheckInItem checkInItem;
    @XmlElement(name = "CancelRequestItemResponse")
    protected CancelRequestItemResponse cancelRequestItemResponse;
    @XmlElement(name = "CancelRequestItem")
    protected CancelRequestItem cancelRequestItem;
    @XmlElement(name = "CancelRecallItemResponse")
    protected CancelRecallItemResponse cancelRecallItemResponse;
    @XmlElement(name = "CancelRecallItem")
    protected CancelRecallItem cancelRecallItem;
    @XmlElement(name = "AgencyUpdatedResponse")
    protected AgencyUpdatedResponse agencyUpdatedResponse;
    @XmlElement(name = "AgencyUpdated")
    protected AgencyUpdated agencyUpdated;
    @XmlElement(name = "AgencyCreatedResponse")
    protected AgencyCreatedResponse agencyCreatedResponse;
    @XmlElement(name = "AgencyCreated")
    protected AgencyCreated agencyCreated;
    @XmlElement(name = "AcceptItemResponse")
    protected AcceptItemResponse acceptItemResponse;
    @XmlElement(name = "AcceptItem")
    protected AcceptItem acceptItem;
    @XmlAttribute(name = "version", namespace = "http://www.niso.org/2008/ncip", required = true)
    protected String version;

    /**
     * Gets the value of the ext property.
     * 
     * @return
     *     possible object is
     *     {@link Ext }
     *     
     */
    public Ext getExt() {
        return ext;
    }

    /**
     * Sets the value of the ext property.
     * 
     * @param value
     *     allowed object is
     *     {@link Ext }
     *     
     */
    public void setExt(Ext value) {
        this.ext = value;
    }

    /**
     * Gets the value of the problems property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the problems property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getProblems().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Problem }
     * 
     * 
     */
    public List<Problem> getProblems() {
        if (problems == null) {
            problems = new ArrayList<Problem>();
        }
        return this.problems;
    }

    /**
     * Gets the value of the userUpdatedResponse property.
     * 
     * @return
     *     possible object is
     *     {@link UserUpdatedResponse }
     *     
     */
    public UserUpdatedResponse getUserUpdatedResponse() {
        return userUpdatedResponse;
    }

    /**
     * Sets the value of the userUpdatedResponse property.
     * 
     * @param value
     *     allowed object is
     *     {@link UserUpdatedResponse }
     *     
     */
    public void setUserUpdatedResponse(UserUpdatedResponse value) {
        this.userUpdatedResponse = value;
    }

    /**
     * Gets the value of the userUpdated property.
     * 
     * @return
     *     possible object is
     *     {@link UserUpdated }
     *     
     */
    public UserUpdated getUserUpdated() {
        return userUpdated;
    }

    /**
     * Sets the value of the userUpdated property.
     * 
     * @param value
     *     allowed object is
     *     {@link UserUpdated }
     *     
     */
    public void setUserUpdated(UserUpdated value) {
        this.userUpdated = value;
    }

    /**
     * Gets the value of the userNoticeSentResponse property.
     * 
     * @return
     *     possible object is
     *     {@link UserNoticeSentResponse }
     *     
     */
    public UserNoticeSentResponse getUserNoticeSentResponse() {
        return userNoticeSentResponse;
    }

    /**
     * Sets the value of the userNoticeSentResponse property.
     * 
     * @param value
     *     allowed object is
     *     {@link UserNoticeSentResponse }
     *     
     */
    public void setUserNoticeSentResponse(UserNoticeSentResponse value) {
        this.userNoticeSentResponse = value;
    }

    /**
     * Gets the value of the userNoticeSent property.
     * 
     * @return
     *     possible object is
     *     {@link UserNoticeSent }
     *     
     */
    public UserNoticeSent getUserNoticeSent() {
        return userNoticeSent;
    }

    /**
     * Sets the value of the userNoticeSent property.
     * 
     * @param value
     *     allowed object is
     *     {@link UserNoticeSent }
     *     
     */
    public void setUserNoticeSent(UserNoticeSent value) {
        this.userNoticeSent = value;
    }

    /**
     * Gets the value of the userFiscalTransactionCreatedResponse property.
     * 
     * @return
     *     possible object is
     *     {@link UserFiscalTransactionCreatedResponse }
     *     
     */
    public UserFiscalTransactionCreatedResponse getUserFiscalTransactionCreatedResponse() {
        return userFiscalTransactionCreatedResponse;
    }

    /**
     * Sets the value of the userFiscalTransactionCreatedResponse property.
     * 
     * @param value
     *     allowed object is
     *     {@link UserFiscalTransactionCreatedResponse }
     *     
     */
    public void setUserFiscalTransactionCreatedResponse(UserFiscalTransactionCreatedResponse value) {
        this.userFiscalTransactionCreatedResponse = value;
    }

    /**
     * Gets the value of the userFiscalTransactionCreated property.
     * 
     * @return
     *     possible object is
     *     {@link UserFiscalTransactionCreated }
     *     
     */
    public UserFiscalTransactionCreated getUserFiscalTransactionCreated() {
        return userFiscalTransactionCreated;
    }

    /**
     * Sets the value of the userFiscalTransactionCreated property.
     * 
     * @param value
     *     allowed object is
     *     {@link UserFiscalTransactionCreated }
     *     
     */
    public void setUserFiscalTransactionCreated(UserFiscalTransactionCreated value) {
        this.userFiscalTransactionCreated = value;
    }

    /**
     * Gets the value of the userCreatedResponse property.
     * 
     * @return
     *     possible object is
     *     {@link UserCreatedResponse }
     *     
     */
    public UserCreatedResponse getUserCreatedResponse() {
        return userCreatedResponse;
    }

    /**
     * Sets the value of the userCreatedResponse property.
     * 
     * @param value
     *     allowed object is
     *     {@link UserCreatedResponse }
     *     
     */
    public void setUserCreatedResponse(UserCreatedResponse value) {
        this.userCreatedResponse = value;
    }

    /**
     * Gets the value of the userCreated property.
     * 
     * @return
     *     possible object is
     *     {@link UserCreated }
     *     
     */
    public UserCreated getUserCreated() {
        return userCreated;
    }

    /**
     * Sets the value of the userCreated property.
     * 
     * @param value
     *     allowed object is
     *     {@link UserCreated }
     *     
     */
    public void setUserCreated(UserCreated value) {
        this.userCreated = value;
    }

    /**
     * Gets the value of the updateUserResponse property.
     * 
     * @return
     *     possible object is
     *     {@link UpdateUserResponse }
     *     
     */
    public UpdateUserResponse getUpdateUserResponse() {
        return updateUserResponse;
    }

    /**
     * Sets the value of the updateUserResponse property.
     * 
     * @param value
     *     allowed object is
     *     {@link UpdateUserResponse }
     *     
     */
    public void setUpdateUserResponse(UpdateUserResponse value) {
        this.updateUserResponse = value;
    }

    /**
     * Gets the value of the updateUser property.
     * 
     * @return
     *     possible object is
     *     {@link UpdateUser }
     *     
     */
    public UpdateUser getUpdateUser() {
        return updateUser;
    }

    /**
     * Sets the value of the updateUser property.
     * 
     * @param value
     *     allowed object is
     *     {@link UpdateUser }
     *     
     */
    public void setUpdateUser(UpdateUser value) {
        this.updateUser = value;
    }

    /**
     * Gets the value of the updateRequestItemResponse property.
     * 
     * @return
     *     possible object is
     *     {@link UpdateRequestItemResponse }
     *     
     */
    public UpdateRequestItemResponse getUpdateRequestItemResponse() {
        return updateRequestItemResponse;
    }

    /**
     * Sets the value of the updateRequestItemResponse property.
     * 
     * @param value
     *     allowed object is
     *     {@link UpdateRequestItemResponse }
     *     
     */
    public void setUpdateRequestItemResponse(UpdateRequestItemResponse value) {
        this.updateRequestItemResponse = value;
    }

    /**
     * Gets the value of the updateRequestItem property.
     * 
     * @return
     *     possible object is
     *     {@link UpdateRequestItem }
     *     
     */
    public UpdateRequestItem getUpdateRequestItem() {
        return updateRequestItem;
    }

    /**
     * Sets the value of the updateRequestItem property.
     * 
     * @param value
     *     allowed object is
     *     {@link UpdateRequestItem }
     *     
     */
    public void setUpdateRequestItem(UpdateRequestItem value) {
        this.updateRequestItem = value;
    }

    /**
     * Gets the value of the updateItemResponse property.
     * 
     * @return
     *     possible object is
     *     {@link UpdateItemResponse }
     *     
     */
    public UpdateItemResponse getUpdateItemResponse() {
        return updateItemResponse;
    }

    /**
     * Sets the value of the updateItemResponse property.
     * 
     * @param value
     *     allowed object is
     *     {@link UpdateItemResponse }
     *     
     */
    public void setUpdateItemResponse(UpdateItemResponse value) {
        this.updateItemResponse = value;
    }

    /**
     * Gets the value of the updateItem property.
     * 
     * @return
     *     possible object is
     *     {@link UpdateItem }
     *     
     */
    public UpdateItem getUpdateItem() {
        return updateItem;
    }

    /**
     * Sets the value of the updateItem property.
     * 
     * @param value
     *     allowed object is
     *     {@link UpdateItem }
     *     
     */
    public void setUpdateItem(UpdateItem value) {
        this.updateItem = value;
    }

    /**
     * Gets the value of the updateCirculationStatusResponse property.
     * 
     * @return
     *     possible object is
     *     {@link UpdateCirculationStatusResponse }
     *     
     */
    public UpdateCirculationStatusResponse getUpdateCirculationStatusResponse() {
        return updateCirculationStatusResponse;
    }

    /**
     * Sets the value of the updateCirculationStatusResponse property.
     * 
     * @param value
     *     allowed object is
     *     {@link UpdateCirculationStatusResponse }
     *     
     */
    public void setUpdateCirculationStatusResponse(UpdateCirculationStatusResponse value) {
        this.updateCirculationStatusResponse = value;
    }

    /**
     * Gets the value of the updateCirculationStatus property.
     * 
     * @return
     *     possible object is
     *     {@link UpdateCirculationStatus }
     *     
     */
    public UpdateCirculationStatus getUpdateCirculationStatus() {
        return updateCirculationStatus;
    }

    /**
     * Sets the value of the updateCirculationStatus property.
     * 
     * @param value
     *     allowed object is
     *     {@link UpdateCirculationStatus }
     *     
     */
    public void setUpdateCirculationStatus(UpdateCirculationStatus value) {
        this.updateCirculationStatus = value;
    }

    /**
     * Gets the value of the updateAgencyResponse property.
     * 
     * @return
     *     possible object is
     *     {@link UpdateAgencyResponse }
     *     
     */
    public UpdateAgencyResponse getUpdateAgencyResponse() {
        return updateAgencyResponse;
    }

    /**
     * Sets the value of the updateAgencyResponse property.
     * 
     * @param value
     *     allowed object is
     *     {@link UpdateAgencyResponse }
     *     
     */
    public void setUpdateAgencyResponse(UpdateAgencyResponse value) {
        this.updateAgencyResponse = value;
    }

    /**
     * Gets the value of the updateAgency property.
     * 
     * @return
     *     possible object is
     *     {@link UpdateAgency }
     *     
     */
    public UpdateAgency getUpdateAgency() {
        return updateAgency;
    }

    /**
     * Sets the value of the updateAgency property.
     * 
     * @param value
     *     allowed object is
     *     {@link UpdateAgency }
     *     
     */
    public void setUpdateAgency(UpdateAgency value) {
        this.updateAgency = value;
    }

    /**
     * Gets the value of the undoCheckOutItemResponse property.
     * 
     * @return
     *     possible object is
     *     {@link UndoCheckOutItemResponse }
     *     
     */
    public UndoCheckOutItemResponse getUndoCheckOutItemResponse() {
        return undoCheckOutItemResponse;
    }

    /**
     * Sets the value of the undoCheckOutItemResponse property.
     * 
     * @param value
     *     allowed object is
     *     {@link UndoCheckOutItemResponse }
     *     
     */
    public void setUndoCheckOutItemResponse(UndoCheckOutItemResponse value) {
        this.undoCheckOutItemResponse = value;
    }

    /**
     * Gets the value of the undoCheckOutItem property.
     * 
     * @return
     *     possible object is
     *     {@link UndoCheckOutItem }
     *     
     */
    public UndoCheckOutItem getUndoCheckOutItem() {
        return undoCheckOutItem;
    }

    /**
     * Sets the value of the undoCheckOutItem property.
     * 
     * @param value
     *     allowed object is
     *     {@link UndoCheckOutItem }
     *     
     */
    public void setUndoCheckOutItem(UndoCheckOutItem value) {
        this.undoCheckOutItem = value;
    }

    /**
     * Gets the value of the sendUserNoticeResponse property.
     * 
     * @return
     *     possible object is
     *     {@link SendUserNoticeResponse }
     *     
     */
    public SendUserNoticeResponse getSendUserNoticeResponse() {
        return sendUserNoticeResponse;
    }

    /**
     * Sets the value of the sendUserNoticeResponse property.
     * 
     * @param value
     *     allowed object is
     *     {@link SendUserNoticeResponse }
     *     
     */
    public void setSendUserNoticeResponse(SendUserNoticeResponse value) {
        this.sendUserNoticeResponse = value;
    }

    /**
     * Gets the value of the sendUserNotice property.
     * 
     * @return
     *     possible object is
     *     {@link SendUserNotice }
     *     
     */
    public SendUserNotice getSendUserNotice() {
        return sendUserNotice;
    }

    /**
     * Sets the value of the sendUserNotice property.
     * 
     * @param value
     *     allowed object is
     *     {@link SendUserNotice }
     *     
     */
    public void setSendUserNotice(SendUserNotice value) {
        this.sendUserNotice = value;
    }

    /**
     * Gets the value of the requestItemResponse property.
     * 
     * @return
     *     possible object is
     *     {@link RequestItemResponse }
     *     
     */
    public RequestItemResponse getRequestItemResponse() {
        return requestItemResponse;
    }

    /**
     * Sets the value of the requestItemResponse property.
     * 
     * @param value
     *     allowed object is
     *     {@link RequestItemResponse }
     *     
     */
    public void setRequestItemResponse(RequestItemResponse value) {
        this.requestItemResponse = value;
    }

    /**
     * Gets the value of the requestItem property.
     * 
     * @return
     *     possible object is
     *     {@link RequestItem }
     *     
     */
    public RequestItem getRequestItem() {
        return requestItem;
    }

    /**
     * Sets the value of the requestItem property.
     * 
     * @param value
     *     allowed object is
     *     {@link RequestItem }
     *     
     */
    public void setRequestItem(RequestItem value) {
        this.requestItem = value;
    }

    /**
     * Gets the value of the reportCirculationStatusChangeResponse property.
     * 
     * @return
     *     possible object is
     *     {@link ReportCirculationStatusChangeResponse }
     *     
     */
    public ReportCirculationStatusChangeResponse getReportCirculationStatusChangeResponse() {
        return reportCirculationStatusChangeResponse;
    }

    /**
     * Sets the value of the reportCirculationStatusChangeResponse property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReportCirculationStatusChangeResponse }
     *     
     */
    public void setReportCirculationStatusChangeResponse(ReportCirculationStatusChangeResponse value) {
        this.reportCirculationStatusChangeResponse = value;
    }

    /**
     * Gets the value of the reportCirculationStatusChange property.
     * 
     * @return
     *     possible object is
     *     {@link ReportCirculationStatusChange }
     *     
     */
    public ReportCirculationStatusChange getReportCirculationStatusChange() {
        return reportCirculationStatusChange;
    }

    /**
     * Sets the value of the reportCirculationStatusChange property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReportCirculationStatusChange }
     *     
     */
    public void setReportCirculationStatusChange(ReportCirculationStatusChange value) {
        this.reportCirculationStatusChange = value;
    }

    /**
     * Gets the value of the renewItemResponse property.
     * 
     * @return
     *     possible object is
     *     {@link RenewItemResponse }
     *     
     */
    public RenewItemResponse getRenewItemResponse() {
        return renewItemResponse;
    }

    /**
     * Sets the value of the renewItemResponse property.
     * 
     * @param value
     *     allowed object is
     *     {@link RenewItemResponse }
     *     
     */
    public void setRenewItemResponse(RenewItemResponse value) {
        this.renewItemResponse = value;
    }

    /**
     * Gets the value of the renewItem property.
     * 
     * @return
     *     possible object is
     *     {@link RenewItem }
     *     
     */
    public RenewItem getRenewItem() {
        return renewItem;
    }

    /**
     * Sets the value of the renewItem property.
     * 
     * @param value
     *     allowed object is
     *     {@link RenewItem }
     *     
     */
    public void setRenewItem(RenewItem value) {
        this.renewItem = value;
    }

    /**
     * Gets the value of the recallItemResponse property.
     * 
     * @return
     *     possible object is
     *     {@link RecallItemResponse }
     *     
     */
    public RecallItemResponse getRecallItemResponse() {
        return recallItemResponse;
    }

    /**
     * Sets the value of the recallItemResponse property.
     * 
     * @param value
     *     allowed object is
     *     {@link RecallItemResponse }
     *     
     */
    public void setRecallItemResponse(RecallItemResponse value) {
        this.recallItemResponse = value;
    }

    /**
     * Gets the value of the recallItem property.
     * 
     * @return
     *     possible object is
     *     {@link RecallItem }
     *     
     */
    public RecallItem getRecallItem() {
        return recallItem;
    }

    /**
     * Sets the value of the recallItem property.
     * 
     * @param value
     *     allowed object is
     *     {@link RecallItem }
     *     
     */
    public void setRecallItem(RecallItem value) {
        this.recallItem = value;
    }

    /**
     * Gets the value of the lookupUserResponse property.
     * 
     * @return
     *     possible object is
     *     {@link LookupUserResponse }
     *     
     */
    public LookupUserResponse getLookupUserResponse() {
        return lookupUserResponse;
    }

    /**
     * Sets the value of the lookupUserResponse property.
     * 
     * @param value
     *     allowed object is
     *     {@link LookupUserResponse }
     *     
     */
    public void setLookupUserResponse(LookupUserResponse value) {
        this.lookupUserResponse = value;
    }

    /**
     * Gets the value of the lookupUser property.
     * 
     * @return
     *     possible object is
     *     {@link LookupUser }
     *     
     */
    public LookupUser getLookupUser() {
        return lookupUser;
    }

    /**
     * Sets the value of the lookupUser property.
     * 
     * @param value
     *     allowed object is
     *     {@link LookupUser }
     *     
     */
    public void setLookupUser(LookupUser value) {
        this.lookupUser = value;
    }

    /**
     * Gets the value of the lookupRequestResponse property.
     * 
     * @return
     *     possible object is
     *     {@link LookupRequestResponse }
     *     
     */
    public LookupRequestResponse getLookupRequestResponse() {
        return lookupRequestResponse;
    }

    /**
     * Sets the value of the lookupRequestResponse property.
     * 
     * @param value
     *     allowed object is
     *     {@link LookupRequestResponse }
     *     
     */
    public void setLookupRequestResponse(LookupRequestResponse value) {
        this.lookupRequestResponse = value;
    }

    /**
     * Gets the value of the lookupRequest property.
     * 
     * @return
     *     possible object is
     *     {@link LookupRequest }
     *     
     */
    public LookupRequest getLookupRequest() {
        return lookupRequest;
    }

    /**
     * Sets the value of the lookupRequest property.
     * 
     * @param value
     *     allowed object is
     *     {@link LookupRequest }
     *     
     */
    public void setLookupRequest(LookupRequest value) {
        this.lookupRequest = value;
    }

    /**
     * Gets the value of the lookupItemSetResponse property.
     * 
     * @return
     *     possible object is
     *     {@link LookupItemSetResponse }
     *     
     */
    public LookupItemSetResponse getLookupItemSetResponse() {
        return lookupItemSetResponse;
    }

    /**
     * Sets the value of the lookupItemSetResponse property.
     * 
     * @param value
     *     allowed object is
     *     {@link LookupItemSetResponse }
     *     
     */
    public void setLookupItemSetResponse(LookupItemSetResponse value) {
        this.lookupItemSetResponse = value;
    }

    /**
     * Gets the value of the lookupItemSet property.
     * 
     * @return
     *     possible object is
     *     {@link LookupItemSet }
     *     
     */
    public LookupItemSet getLookupItemSet() {
        return lookupItemSet;
    }

    /**
     * Sets the value of the lookupItemSet property.
     * 
     * @param value
     *     allowed object is
     *     {@link LookupItemSet }
     *     
     */
    public void setLookupItemSet(LookupItemSet value) {
        this.lookupItemSet = value;
    }

    /**
     * Gets the value of the lookupItemResponse property.
     * 
     * @return
     *     possible object is
     *     {@link LookupItemResponse }
     *     
     */
    public LookupItemResponse getLookupItemResponse() {
        return lookupItemResponse;
    }

    /**
     * Sets the value of the lookupItemResponse property.
     * 
     * @param value
     *     allowed object is
     *     {@link LookupItemResponse }
     *     
     */
    public void setLookupItemResponse(LookupItemResponse value) {
        this.lookupItemResponse = value;
    }

    /**
     * Gets the value of the lookupItem property.
     * 
     * @return
     *     possible object is
     *     {@link LookupItem }
     *     
     */
    public LookupItem getLookupItem() {
        return lookupItem;
    }

    /**
     * Sets the value of the lookupItem property.
     * 
     * @param value
     *     allowed object is
     *     {@link LookupItem }
     *     
     */
    public void setLookupItem(LookupItem value) {
        this.lookupItem = value;
    }

    /**
     * Gets the value of the lookupAgencyResponse property.
     * 
     * @return
     *     possible object is
     *     {@link LookupAgencyResponse }
     *     
     */
    public LookupAgencyResponse getLookupAgencyResponse() {
        return lookupAgencyResponse;
    }

    /**
     * Sets the value of the lookupAgencyResponse property.
     * 
     * @param value
     *     allowed object is
     *     {@link LookupAgencyResponse }
     *     
     */
    public void setLookupAgencyResponse(LookupAgencyResponse value) {
        this.lookupAgencyResponse = value;
    }

    /**
     * Gets the value of the lookupAgency property.
     * 
     * @return
     *     possible object is
     *     {@link LookupAgency }
     *     
     */
    public LookupAgency getLookupAgency() {
        return lookupAgency;
    }

    /**
     * Sets the value of the lookupAgency property.
     * 
     * @param value
     *     allowed object is
     *     {@link LookupAgency }
     *     
     */
    public void setLookupAgency(LookupAgency value) {
        this.lookupAgency = value;
    }

    /**
     * Gets the value of the itemUpdatedResponse property.
     * 
     * @return
     *     possible object is
     *     {@link ItemUpdatedResponse }
     *     
     */
    public ItemUpdatedResponse getItemUpdatedResponse() {
        return itemUpdatedResponse;
    }

    /**
     * Sets the value of the itemUpdatedResponse property.
     * 
     * @param value
     *     allowed object is
     *     {@link ItemUpdatedResponse }
     *     
     */
    public void setItemUpdatedResponse(ItemUpdatedResponse value) {
        this.itemUpdatedResponse = value;
    }

    /**
     * Gets the value of the itemUpdated property.
     * 
     * @return
     *     possible object is
     *     {@link ItemUpdated }
     *     
     */
    public ItemUpdated getItemUpdated() {
        return itemUpdated;
    }

    /**
     * Sets the value of the itemUpdated property.
     * 
     * @param value
     *     allowed object is
     *     {@link ItemUpdated }
     *     
     */
    public void setItemUpdated(ItemUpdated value) {
        this.itemUpdated = value;
    }

    /**
     * Gets the value of the itemShippedResponse property.
     * 
     * @return
     *     possible object is
     *     {@link ItemShippedResponse }
     *     
     */
    public ItemShippedResponse getItemShippedResponse() {
        return itemShippedResponse;
    }

    /**
     * Sets the value of the itemShippedResponse property.
     * 
     * @param value
     *     allowed object is
     *     {@link ItemShippedResponse }
     *     
     */
    public void setItemShippedResponse(ItemShippedResponse value) {
        this.itemShippedResponse = value;
    }

    /**
     * Gets the value of the itemShipped property.
     * 
     * @return
     *     possible object is
     *     {@link ItemShipped }
     *     
     */
    public ItemShipped getItemShipped() {
        return itemShipped;
    }

    /**
     * Sets the value of the itemShipped property.
     * 
     * @param value
     *     allowed object is
     *     {@link ItemShipped }
     *     
     */
    public void setItemShipped(ItemShipped value) {
        this.itemShipped = value;
    }

    /**
     * Gets the value of the itemRequestedResponse property.
     * 
     * @return
     *     possible object is
     *     {@link ItemRequestedResponse }
     *     
     */
    public ItemRequestedResponse getItemRequestedResponse() {
        return itemRequestedResponse;
    }

    /**
     * Sets the value of the itemRequestedResponse property.
     * 
     * @param value
     *     allowed object is
     *     {@link ItemRequestedResponse }
     *     
     */
    public void setItemRequestedResponse(ItemRequestedResponse value) {
        this.itemRequestedResponse = value;
    }

    /**
     * Gets the value of the itemRequested property.
     * 
     * @return
     *     possible object is
     *     {@link ItemRequested }
     *     
     */
    public ItemRequested getItemRequested() {
        return itemRequested;
    }

    /**
     * Sets the value of the itemRequested property.
     * 
     * @param value
     *     allowed object is
     *     {@link ItemRequested }
     *     
     */
    public void setItemRequested(ItemRequested value) {
        this.itemRequested = value;
    }

    /**
     * Gets the value of the itemRequestUpdatedResponse property.
     * 
     * @return
     *     possible object is
     *     {@link ItemRequestUpdatedResponse }
     *     
     */
    public ItemRequestUpdatedResponse getItemRequestUpdatedResponse() {
        return itemRequestUpdatedResponse;
    }

    /**
     * Sets the value of the itemRequestUpdatedResponse property.
     * 
     * @param value
     *     allowed object is
     *     {@link ItemRequestUpdatedResponse }
     *     
     */
    public void setItemRequestUpdatedResponse(ItemRequestUpdatedResponse value) {
        this.itemRequestUpdatedResponse = value;
    }

    /**
     * Gets the value of the itemRequestUpdated property.
     * 
     * @return
     *     possible object is
     *     {@link ItemRequestUpdated }
     *     
     */
    public ItemRequestUpdated getItemRequestUpdated() {
        return itemRequestUpdated;
    }

    /**
     * Sets the value of the itemRequestUpdated property.
     * 
     * @param value
     *     allowed object is
     *     {@link ItemRequestUpdated }
     *     
     */
    public void setItemRequestUpdated(ItemRequestUpdated value) {
        this.itemRequestUpdated = value;
    }

    /**
     * Gets the value of the itemRequestCancelledResponse property.
     * 
     * @return
     *     possible object is
     *     {@link ItemRequestCancelledResponse }
     *     
     */
    public ItemRequestCancelledResponse getItemRequestCancelledResponse() {
        return itemRequestCancelledResponse;
    }

    /**
     * Sets the value of the itemRequestCancelledResponse property.
     * 
     * @param value
     *     allowed object is
     *     {@link ItemRequestCancelledResponse }
     *     
     */
    public void setItemRequestCancelledResponse(ItemRequestCancelledResponse value) {
        this.itemRequestCancelledResponse = value;
    }

    /**
     * Gets the value of the itemRequestCancelled property.
     * 
     * @return
     *     possible object is
     *     {@link ItemRequestCancelled }
     *     
     */
    public ItemRequestCancelled getItemRequestCancelled() {
        return itemRequestCancelled;
    }

    /**
     * Sets the value of the itemRequestCancelled property.
     * 
     * @param value
     *     allowed object is
     *     {@link ItemRequestCancelled }
     *     
     */
    public void setItemRequestCancelled(ItemRequestCancelled value) {
        this.itemRequestCancelled = value;
    }

    /**
     * Gets the value of the itemRenewedResponse property.
     * 
     * @return
     *     possible object is
     *     {@link ItemRenewedResponse }
     *     
     */
    public ItemRenewedResponse getItemRenewedResponse() {
        return itemRenewedResponse;
    }

    /**
     * Sets the value of the itemRenewedResponse property.
     * 
     * @param value
     *     allowed object is
     *     {@link ItemRenewedResponse }
     *     
     */
    public void setItemRenewedResponse(ItemRenewedResponse value) {
        this.itemRenewedResponse = value;
    }

    /**
     * Gets the value of the itemRenewed property.
     * 
     * @return
     *     possible object is
     *     {@link ItemRenewed }
     *     
     */
    public ItemRenewed getItemRenewed() {
        return itemRenewed;
    }

    /**
     * Sets the value of the itemRenewed property.
     * 
     * @param value
     *     allowed object is
     *     {@link ItemRenewed }
     *     
     */
    public void setItemRenewed(ItemRenewed value) {
        this.itemRenewed = value;
    }

    /**
     * Gets the value of the itemReceivedResponse property.
     * 
     * @return
     *     possible object is
     *     {@link ItemReceivedResponse }
     *     
     */
    public ItemReceivedResponse getItemReceivedResponse() {
        return itemReceivedResponse;
    }

    /**
     * Sets the value of the itemReceivedResponse property.
     * 
     * @param value
     *     allowed object is
     *     {@link ItemReceivedResponse }
     *     
     */
    public void setItemReceivedResponse(ItemReceivedResponse value) {
        this.itemReceivedResponse = value;
    }

    /**
     * Gets the value of the itemReceived property.
     * 
     * @return
     *     possible object is
     *     {@link ItemReceived }
     *     
     */
    public ItemReceived getItemReceived() {
        return itemReceived;
    }

    /**
     * Sets the value of the itemReceived property.
     * 
     * @param value
     *     allowed object is
     *     {@link ItemReceived }
     *     
     */
    public void setItemReceived(ItemReceived value) {
        this.itemReceived = value;
    }

    /**
     * Gets the value of the itemRecalledResponse property.
     * 
     * @return
     *     possible object is
     *     {@link ItemRecalledResponse }
     *     
     */
    public ItemRecalledResponse getItemRecalledResponse() {
        return itemRecalledResponse;
    }

    /**
     * Sets the value of the itemRecalledResponse property.
     * 
     * @param value
     *     allowed object is
     *     {@link ItemRecalledResponse }
     *     
     */
    public void setItemRecalledResponse(ItemRecalledResponse value) {
        this.itemRecalledResponse = value;
    }

    /**
     * Gets the value of the itemRecalled property.
     * 
     * @return
     *     possible object is
     *     {@link ItemRecalled }
     *     
     */
    public ItemRecalled getItemRecalled() {
        return itemRecalled;
    }

    /**
     * Sets the value of the itemRecalled property.
     * 
     * @param value
     *     allowed object is
     *     {@link ItemRecalled }
     *     
     */
    public void setItemRecalled(ItemRecalled value) {
        this.itemRecalled = value;
    }

    /**
     * Gets the value of the itemRecallCancelledResponse property.
     * 
     * @return
     *     possible object is
     *     {@link ItemRecallCancelledResponse }
     *     
     */
    public ItemRecallCancelledResponse getItemRecallCancelledResponse() {
        return itemRecallCancelledResponse;
    }

    /**
     * Sets the value of the itemRecallCancelledResponse property.
     * 
     * @param value
     *     allowed object is
     *     {@link ItemRecallCancelledResponse }
     *     
     */
    public void setItemRecallCancelledResponse(ItemRecallCancelledResponse value) {
        this.itemRecallCancelledResponse = value;
    }

    /**
     * Gets the value of the itemRecallCancelled property.
     * 
     * @return
     *     possible object is
     *     {@link ItemRecallCancelled }
     *     
     */
    public ItemRecallCancelled getItemRecallCancelled() {
        return itemRecallCancelled;
    }

    /**
     * Sets the value of the itemRecallCancelled property.
     * 
     * @param value
     *     allowed object is
     *     {@link ItemRecallCancelled }
     *     
     */
    public void setItemRecallCancelled(ItemRecallCancelled value) {
        this.itemRecallCancelled = value;
    }

    /**
     * Gets the value of the itemCreatedResponse property.
     * 
     * @return
     *     possible object is
     *     {@link ItemCreatedResponse }
     *     
     */
    public ItemCreatedResponse getItemCreatedResponse() {
        return itemCreatedResponse;
    }

    /**
     * Sets the value of the itemCreatedResponse property.
     * 
     * @param value
     *     allowed object is
     *     {@link ItemCreatedResponse }
     *     
     */
    public void setItemCreatedResponse(ItemCreatedResponse value) {
        this.itemCreatedResponse = value;
    }

    /**
     * Gets the value of the itemCreated property.
     * 
     * @return
     *     possible object is
     *     {@link ItemCreated }
     *     
     */
    public ItemCreated getItemCreated() {
        return itemCreated;
    }

    /**
     * Sets the value of the itemCreated property.
     * 
     * @param value
     *     allowed object is
     *     {@link ItemCreated }
     *     
     */
    public void setItemCreated(ItemCreated value) {
        this.itemCreated = value;
    }

    /**
     * Gets the value of the itemCheckedOutResponse property.
     * 
     * @return
     *     possible object is
     *     {@link ItemCheckedOutResponse }
     *     
     */
    public ItemCheckedOutResponse getItemCheckedOutResponse() {
        return itemCheckedOutResponse;
    }

    /**
     * Sets the value of the itemCheckedOutResponse property.
     * 
     * @param value
     *     allowed object is
     *     {@link ItemCheckedOutResponse }
     *     
     */
    public void setItemCheckedOutResponse(ItemCheckedOutResponse value) {
        this.itemCheckedOutResponse = value;
    }

    /**
     * Gets the value of the itemCheckedOut property.
     * 
     * @return
     *     possible object is
     *     {@link ItemCheckedOut }
     *     
     */
    public ItemCheckedOut getItemCheckedOut() {
        return itemCheckedOut;
    }

    /**
     * Sets the value of the itemCheckedOut property.
     * 
     * @param value
     *     allowed object is
     *     {@link ItemCheckedOut }
     *     
     */
    public void setItemCheckedOut(ItemCheckedOut value) {
        this.itemCheckedOut = value;
    }

    /**
     * Gets the value of the itemCheckedInResponse property.
     * 
     * @return
     *     possible object is
     *     {@link ItemCheckedInResponse }
     *     
     */
    public ItemCheckedInResponse getItemCheckedInResponse() {
        return itemCheckedInResponse;
    }

    /**
     * Sets the value of the itemCheckedInResponse property.
     * 
     * @param value
     *     allowed object is
     *     {@link ItemCheckedInResponse }
     *     
     */
    public void setItemCheckedInResponse(ItemCheckedInResponse value) {
        this.itemCheckedInResponse = value;
    }

    /**
     * Gets the value of the itemCheckedIn property.
     * 
     * @return
     *     possible object is
     *     {@link ItemCheckedIn }
     *     
     */
    public ItemCheckedIn getItemCheckedIn() {
        return itemCheckedIn;
    }

    /**
     * Sets the value of the itemCheckedIn property.
     * 
     * @param value
     *     allowed object is
     *     {@link ItemCheckedIn }
     *     
     */
    public void setItemCheckedIn(ItemCheckedIn value) {
        this.itemCheckedIn = value;
    }

    /**
     * Gets the value of the deleteUserResponse property.
     * 
     * @return
     *     possible object is
     *     {@link DeleteUserResponse }
     *     
     */
    public DeleteUserResponse getDeleteUserResponse() {
        return deleteUserResponse;
    }

    /**
     * Sets the value of the deleteUserResponse property.
     * 
     * @param value
     *     allowed object is
     *     {@link DeleteUserResponse }
     *     
     */
    public void setDeleteUserResponse(DeleteUserResponse value) {
        this.deleteUserResponse = value;
    }

    /**
     * Gets the value of the deleteUser property.
     * 
     * @return
     *     possible object is
     *     {@link DeleteUser }
     *     
     */
    public DeleteUser getDeleteUser() {
        return deleteUser;
    }

    /**
     * Sets the value of the deleteUser property.
     * 
     * @param value
     *     allowed object is
     *     {@link DeleteUser }
     *     
     */
    public void setDeleteUser(DeleteUser value) {
        this.deleteUser = value;
    }

    /**
     * Gets the value of the deleteItemResponse property.
     * 
     * @return
     *     possible object is
     *     {@link DeleteItemResponse }
     *     
     */
    public DeleteItemResponse getDeleteItemResponse() {
        return deleteItemResponse;
    }

    /**
     * Sets the value of the deleteItemResponse property.
     * 
     * @param value
     *     allowed object is
     *     {@link DeleteItemResponse }
     *     
     */
    public void setDeleteItemResponse(DeleteItemResponse value) {
        this.deleteItemResponse = value;
    }

    /**
     * Gets the value of the deleteItem property.
     * 
     * @return
     *     possible object is
     *     {@link DeleteItem }
     *     
     */
    public DeleteItem getDeleteItem() {
        return deleteItem;
    }

    /**
     * Sets the value of the deleteItem property.
     * 
     * @param value
     *     allowed object is
     *     {@link DeleteItem }
     *     
     */
    public void setDeleteItem(DeleteItem value) {
        this.deleteItem = value;
    }

    /**
     * Gets the value of the createUserFiscalTransactionResponse property.
     * 
     * @return
     *     possible object is
     *     {@link CreateUserFiscalTransactionResponse }
     *     
     */
    public CreateUserFiscalTransactionResponse getCreateUserFiscalTransactionResponse() {
        return createUserFiscalTransactionResponse;
    }

    /**
     * Sets the value of the createUserFiscalTransactionResponse property.
     * 
     * @param value
     *     allowed object is
     *     {@link CreateUserFiscalTransactionResponse }
     *     
     */
    public void setCreateUserFiscalTransactionResponse(CreateUserFiscalTransactionResponse value) {
        this.createUserFiscalTransactionResponse = value;
    }

    /**
     * Gets the value of the createUserFiscalTransaction property.
     * 
     * @return
     *     possible object is
     *     {@link CreateUserFiscalTransaction }
     *     
     */
    public CreateUserFiscalTransaction getCreateUserFiscalTransaction() {
        return createUserFiscalTransaction;
    }

    /**
     * Sets the value of the createUserFiscalTransaction property.
     * 
     * @param value
     *     allowed object is
     *     {@link CreateUserFiscalTransaction }
     *     
     */
    public void setCreateUserFiscalTransaction(CreateUserFiscalTransaction value) {
        this.createUserFiscalTransaction = value;
    }

    /**
     * Gets the value of the createUserResponse property.
     * 
     * @return
     *     possible object is
     *     {@link CreateUserResponse }
     *     
     */
    public CreateUserResponse getCreateUserResponse() {
        return createUserResponse;
    }

    /**
     * Sets the value of the createUserResponse property.
     * 
     * @param value
     *     allowed object is
     *     {@link CreateUserResponse }
     *     
     */
    public void setCreateUserResponse(CreateUserResponse value) {
        this.createUserResponse = value;
    }

    /**
     * Gets the value of the createUser property.
     * 
     * @return
     *     possible object is
     *     {@link CreateUser }
     *     
     */
    public CreateUser getCreateUser() {
        return createUser;
    }

    /**
     * Sets the value of the createUser property.
     * 
     * @param value
     *     allowed object is
     *     {@link CreateUser }
     *     
     */
    public void setCreateUser(CreateUser value) {
        this.createUser = value;
    }

    /**
     * Gets the value of the createItemResponse property.
     * 
     * @return
     *     possible object is
     *     {@link CreateItemResponse }
     *     
     */
    public CreateItemResponse getCreateItemResponse() {
        return createItemResponse;
    }

    /**
     * Sets the value of the createItemResponse property.
     * 
     * @param value
     *     allowed object is
     *     {@link CreateItemResponse }
     *     
     */
    public void setCreateItemResponse(CreateItemResponse value) {
        this.createItemResponse = value;
    }

    /**
     * Gets the value of the createItem property.
     * 
     * @return
     *     possible object is
     *     {@link CreateItem }
     *     
     */
    public CreateItem getCreateItem() {
        return createItem;
    }

    /**
     * Sets the value of the createItem property.
     * 
     * @param value
     *     allowed object is
     *     {@link CreateItem }
     *     
     */
    public void setCreateItem(CreateItem value) {
        this.createItem = value;
    }

    /**
     * Gets the value of the createAgencyResponse property.
     * 
     * @return
     *     possible object is
     *     {@link CreateAgencyResponse }
     *     
     */
    public CreateAgencyResponse getCreateAgencyResponse() {
        return createAgencyResponse;
    }

    /**
     * Sets the value of the createAgencyResponse property.
     * 
     * @param value
     *     allowed object is
     *     {@link CreateAgencyResponse }
     *     
     */
    public void setCreateAgencyResponse(CreateAgencyResponse value) {
        this.createAgencyResponse = value;
    }

    /**
     * Gets the value of the createAgency property.
     * 
     * @return
     *     possible object is
     *     {@link CreateAgency }
     *     
     */
    public CreateAgency getCreateAgency() {
        return createAgency;
    }

    /**
     * Sets the value of the createAgency property.
     * 
     * @param value
     *     allowed object is
     *     {@link CreateAgency }
     *     
     */
    public void setCreateAgency(CreateAgency value) {
        this.createAgency = value;
    }

    /**
     * Gets the value of the circulationStatusUpdatedResponse property.
     * 
     * @return
     *     possible object is
     *     {@link CirculationStatusUpdatedResponse }
     *     
     */
    public CirculationStatusUpdatedResponse getCirculationStatusUpdatedResponse() {
        return circulationStatusUpdatedResponse;
    }

    /**
     * Sets the value of the circulationStatusUpdatedResponse property.
     * 
     * @param value
     *     allowed object is
     *     {@link CirculationStatusUpdatedResponse }
     *     
     */
    public void setCirculationStatusUpdatedResponse(CirculationStatusUpdatedResponse value) {
        this.circulationStatusUpdatedResponse = value;
    }

    /**
     * Gets the value of the circulationStatusUpdated property.
     * 
     * @return
     *     possible object is
     *     {@link CirculationStatusUpdated }
     *     
     */
    public CirculationStatusUpdated getCirculationStatusUpdated() {
        return circulationStatusUpdated;
    }

    /**
     * Sets the value of the circulationStatusUpdated property.
     * 
     * @param value
     *     allowed object is
     *     {@link CirculationStatusUpdated }
     *     
     */
    public void setCirculationStatusUpdated(CirculationStatusUpdated value) {
        this.circulationStatusUpdated = value;
    }

    /**
     * Gets the value of the circulationStatusChangeReportedResponse property.
     * 
     * @return
     *     possible object is
     *     {@link CirculationStatusChangeReportedResponse }
     *     
     */
    public CirculationStatusChangeReportedResponse getCirculationStatusChangeReportedResponse() {
        return circulationStatusChangeReportedResponse;
    }

    /**
     * Sets the value of the circulationStatusChangeReportedResponse property.
     * 
     * @param value
     *     allowed object is
     *     {@link CirculationStatusChangeReportedResponse }
     *     
     */
    public void setCirculationStatusChangeReportedResponse(CirculationStatusChangeReportedResponse value) {
        this.circulationStatusChangeReportedResponse = value;
    }

    /**
     * Gets the value of the circulationStatusChangeReported property.
     * 
     * @return
     *     possible object is
     *     {@link CirculationStatusChangeReported }
     *     
     */
    public CirculationStatusChangeReported getCirculationStatusChangeReported() {
        return circulationStatusChangeReported;
    }

    /**
     * Sets the value of the circulationStatusChangeReported property.
     * 
     * @param value
     *     allowed object is
     *     {@link CirculationStatusChangeReported }
     *     
     */
    public void setCirculationStatusChangeReported(CirculationStatusChangeReported value) {
        this.circulationStatusChangeReported = value;
    }

    /**
     * Gets the value of the checkOutItemResponse property.
     * 
     * @return
     *     possible object is
     *     {@link CheckOutItemResponse }
     *     
     */
    public CheckOutItemResponse getCheckOutItemResponse() {
        return checkOutItemResponse;
    }

    /**
     * Sets the value of the checkOutItemResponse property.
     * 
     * @param value
     *     allowed object is
     *     {@link CheckOutItemResponse }
     *     
     */
    public void setCheckOutItemResponse(CheckOutItemResponse value) {
        this.checkOutItemResponse = value;
    }

    /**
     * Gets the value of the checkOutItem property.
     * 
     * @return
     *     possible object is
     *     {@link CheckOutItem }
     *     
     */
    public CheckOutItem getCheckOutItem() {
        return checkOutItem;
    }

    /**
     * Sets the value of the checkOutItem property.
     * 
     * @param value
     *     allowed object is
     *     {@link CheckOutItem }
     *     
     */
    public void setCheckOutItem(CheckOutItem value) {
        this.checkOutItem = value;
    }

    /**
     * Gets the value of the checkInItemResponse property.
     * 
     * @return
     *     possible object is
     *     {@link CheckInItemResponse }
     *     
     */
    public CheckInItemResponse getCheckInItemResponse() {
        return checkInItemResponse;
    }

    /**
     * Sets the value of the checkInItemResponse property.
     * 
     * @param value
     *     allowed object is
     *     {@link CheckInItemResponse }
     *     
     */
    public void setCheckInItemResponse(CheckInItemResponse value) {
        this.checkInItemResponse = value;
    }

    /**
     * Gets the value of the checkInItem property.
     * 
     * @return
     *     possible object is
     *     {@link CheckInItem }
     *     
     */
    public CheckInItem getCheckInItem() {
        return checkInItem;
    }

    /**
     * Sets the value of the checkInItem property.
     * 
     * @param value
     *     allowed object is
     *     {@link CheckInItem }
     *     
     */
    public void setCheckInItem(CheckInItem value) {
        this.checkInItem = value;
    }

    /**
     * Gets the value of the cancelRequestItemResponse property.
     * 
     * @return
     *     possible object is
     *     {@link CancelRequestItemResponse }
     *     
     */
    public CancelRequestItemResponse getCancelRequestItemResponse() {
        return cancelRequestItemResponse;
    }

    /**
     * Sets the value of the cancelRequestItemResponse property.
     * 
     * @param value
     *     allowed object is
     *     {@link CancelRequestItemResponse }
     *     
     */
    public void setCancelRequestItemResponse(CancelRequestItemResponse value) {
        this.cancelRequestItemResponse = value;
    }

    /**
     * Gets the value of the cancelRequestItem property.
     * 
     * @return
     *     possible object is
     *     {@link CancelRequestItem }
     *     
     */
    public CancelRequestItem getCancelRequestItem() {
        return cancelRequestItem;
    }

    /**
     * Sets the value of the cancelRequestItem property.
     * 
     * @param value
     *     allowed object is
     *     {@link CancelRequestItem }
     *     
     */
    public void setCancelRequestItem(CancelRequestItem value) {
        this.cancelRequestItem = value;
    }

    /**
     * Gets the value of the cancelRecallItemResponse property.
     * 
     * @return
     *     possible object is
     *     {@link CancelRecallItemResponse }
     *     
     */
    public CancelRecallItemResponse getCancelRecallItemResponse() {
        return cancelRecallItemResponse;
    }

    /**
     * Sets the value of the cancelRecallItemResponse property.
     * 
     * @param value
     *     allowed object is
     *     {@link CancelRecallItemResponse }
     *     
     */
    public void setCancelRecallItemResponse(CancelRecallItemResponse value) {
        this.cancelRecallItemResponse = value;
    }

    /**
     * Gets the value of the cancelRecallItem property.
     * 
     * @return
     *     possible object is
     *     {@link CancelRecallItem }
     *     
     */
    public CancelRecallItem getCancelRecallItem() {
        return cancelRecallItem;
    }

    /**
     * Sets the value of the cancelRecallItem property.
     * 
     * @param value
     *     allowed object is
     *     {@link CancelRecallItem }
     *     
     */
    public void setCancelRecallItem(CancelRecallItem value) {
        this.cancelRecallItem = value;
    }

    /**
     * Gets the value of the agencyUpdatedResponse property.
     * 
     * @return
     *     possible object is
     *     {@link AgencyUpdatedResponse }
     *     
     */
    public AgencyUpdatedResponse getAgencyUpdatedResponse() {
        return agencyUpdatedResponse;
    }

    /**
     * Sets the value of the agencyUpdatedResponse property.
     * 
     * @param value
     *     allowed object is
     *     {@link AgencyUpdatedResponse }
     *     
     */
    public void setAgencyUpdatedResponse(AgencyUpdatedResponse value) {
        this.agencyUpdatedResponse = value;
    }

    /**
     * Gets the value of the agencyUpdated property.
     * 
     * @return
     *     possible object is
     *     {@link AgencyUpdated }
     *     
     */
    public AgencyUpdated getAgencyUpdated() {
        return agencyUpdated;
    }

    /**
     * Sets the value of the agencyUpdated property.
     * 
     * @param value
     *     allowed object is
     *     {@link AgencyUpdated }
     *     
     */
    public void setAgencyUpdated(AgencyUpdated value) {
        this.agencyUpdated = value;
    }

    /**
     * Gets the value of the agencyCreatedResponse property.
     * 
     * @return
     *     possible object is
     *     {@link AgencyCreatedResponse }
     *     
     */
    public AgencyCreatedResponse getAgencyCreatedResponse() {
        return agencyCreatedResponse;
    }

    /**
     * Sets the value of the agencyCreatedResponse property.
     * 
     * @param value
     *     allowed object is
     *     {@link AgencyCreatedResponse }
     *     
     */
    public void setAgencyCreatedResponse(AgencyCreatedResponse value) {
        this.agencyCreatedResponse = value;
    }

    /**
     * Gets the value of the agencyCreated property.
     * 
     * @return
     *     possible object is
     *     {@link AgencyCreated }
     *     
     */
    public AgencyCreated getAgencyCreated() {
        return agencyCreated;
    }

    /**
     * Sets the value of the agencyCreated property.
     * 
     * @param value
     *     allowed object is
     *     {@link AgencyCreated }
     *     
     */
    public void setAgencyCreated(AgencyCreated value) {
        this.agencyCreated = value;
    }

    /**
     * Gets the value of the acceptItemResponse property.
     * 
     * @return
     *     possible object is
     *     {@link AcceptItemResponse }
     *     
     */
    public AcceptItemResponse getAcceptItemResponse() {
        return acceptItemResponse;
    }

    /**
     * Sets the value of the acceptItemResponse property.
     * 
     * @param value
     *     allowed object is
     *     {@link AcceptItemResponse }
     *     
     */
    public void setAcceptItemResponse(AcceptItemResponse value) {
        this.acceptItemResponse = value;
    }

    /**
     * Gets the value of the acceptItem property.
     * 
     * @return
     *     possible object is
     *     {@link AcceptItem }
     *     
     */
    public AcceptItem getAcceptItem() {
        return acceptItem;
    }

    /**
     * Sets the value of the acceptItem property.
     * 
     * @param value
     *     allowed object is
     *     {@link AcceptItem }
     *     
     */
    public void setAcceptItem(AcceptItem value) {
        this.acceptItem = value;
    }

    /**
     * Gets the value of the version property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getVersion() {
        return version;
    }

    /**
     * Sets the value of the version property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setVersion(String value) {
        this.version = value;
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy2 strategy) {
        int currentHashCode = 1;
        {
            Ext theExt;
            theExt = this.getExt();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ext", theExt), currentHashCode, theExt, (this.ext!= null));
        }
        {
            List<Problem> theProblems;
            theProblems = (((this.problems!= null)&&(!this.problems.isEmpty()))?this.getProblems():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "problems", theProblems), currentHashCode, theProblems, ((this.problems!= null)&&(!this.problems.isEmpty())));
        }
        {
            UserUpdatedResponse theUserUpdatedResponse;
            theUserUpdatedResponse = this.getUserUpdatedResponse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "userUpdatedResponse", theUserUpdatedResponse), currentHashCode, theUserUpdatedResponse, (this.userUpdatedResponse!= null));
        }
        {
            UserUpdated theUserUpdated;
            theUserUpdated = this.getUserUpdated();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "userUpdated", theUserUpdated), currentHashCode, theUserUpdated, (this.userUpdated!= null));
        }
        {
            UserNoticeSentResponse theUserNoticeSentResponse;
            theUserNoticeSentResponse = this.getUserNoticeSentResponse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "userNoticeSentResponse", theUserNoticeSentResponse), currentHashCode, theUserNoticeSentResponse, (this.userNoticeSentResponse!= null));
        }
        {
            UserNoticeSent theUserNoticeSent;
            theUserNoticeSent = this.getUserNoticeSent();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "userNoticeSent", theUserNoticeSent), currentHashCode, theUserNoticeSent, (this.userNoticeSent!= null));
        }
        {
            UserFiscalTransactionCreatedResponse theUserFiscalTransactionCreatedResponse;
            theUserFiscalTransactionCreatedResponse = this.getUserFiscalTransactionCreatedResponse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "userFiscalTransactionCreatedResponse", theUserFiscalTransactionCreatedResponse), currentHashCode, theUserFiscalTransactionCreatedResponse, (this.userFiscalTransactionCreatedResponse!= null));
        }
        {
            UserFiscalTransactionCreated theUserFiscalTransactionCreated;
            theUserFiscalTransactionCreated = this.getUserFiscalTransactionCreated();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "userFiscalTransactionCreated", theUserFiscalTransactionCreated), currentHashCode, theUserFiscalTransactionCreated, (this.userFiscalTransactionCreated!= null));
        }
        {
            UserCreatedResponse theUserCreatedResponse;
            theUserCreatedResponse = this.getUserCreatedResponse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "userCreatedResponse", theUserCreatedResponse), currentHashCode, theUserCreatedResponse, (this.userCreatedResponse!= null));
        }
        {
            UserCreated theUserCreated;
            theUserCreated = this.getUserCreated();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "userCreated", theUserCreated), currentHashCode, theUserCreated, (this.userCreated!= null));
        }
        {
            UpdateUserResponse theUpdateUserResponse;
            theUpdateUserResponse = this.getUpdateUserResponse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "updateUserResponse", theUpdateUserResponse), currentHashCode, theUpdateUserResponse, (this.updateUserResponse!= null));
        }
        {
            UpdateUser theUpdateUser;
            theUpdateUser = this.getUpdateUser();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "updateUser", theUpdateUser), currentHashCode, theUpdateUser, (this.updateUser!= null));
        }
        {
            UpdateRequestItemResponse theUpdateRequestItemResponse;
            theUpdateRequestItemResponse = this.getUpdateRequestItemResponse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "updateRequestItemResponse", theUpdateRequestItemResponse), currentHashCode, theUpdateRequestItemResponse, (this.updateRequestItemResponse!= null));
        }
        {
            UpdateRequestItem theUpdateRequestItem;
            theUpdateRequestItem = this.getUpdateRequestItem();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "updateRequestItem", theUpdateRequestItem), currentHashCode, theUpdateRequestItem, (this.updateRequestItem!= null));
        }
        {
            UpdateItemResponse theUpdateItemResponse;
            theUpdateItemResponse = this.getUpdateItemResponse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "updateItemResponse", theUpdateItemResponse), currentHashCode, theUpdateItemResponse, (this.updateItemResponse!= null));
        }
        {
            UpdateItem theUpdateItem;
            theUpdateItem = this.getUpdateItem();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "updateItem", theUpdateItem), currentHashCode, theUpdateItem, (this.updateItem!= null));
        }
        {
            UpdateCirculationStatusResponse theUpdateCirculationStatusResponse;
            theUpdateCirculationStatusResponse = this.getUpdateCirculationStatusResponse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "updateCirculationStatusResponse", theUpdateCirculationStatusResponse), currentHashCode, theUpdateCirculationStatusResponse, (this.updateCirculationStatusResponse!= null));
        }
        {
            UpdateCirculationStatus theUpdateCirculationStatus;
            theUpdateCirculationStatus = this.getUpdateCirculationStatus();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "updateCirculationStatus", theUpdateCirculationStatus), currentHashCode, theUpdateCirculationStatus, (this.updateCirculationStatus!= null));
        }
        {
            UpdateAgencyResponse theUpdateAgencyResponse;
            theUpdateAgencyResponse = this.getUpdateAgencyResponse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "updateAgencyResponse", theUpdateAgencyResponse), currentHashCode, theUpdateAgencyResponse, (this.updateAgencyResponse!= null));
        }
        {
            UpdateAgency theUpdateAgency;
            theUpdateAgency = this.getUpdateAgency();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "updateAgency", theUpdateAgency), currentHashCode, theUpdateAgency, (this.updateAgency!= null));
        }
        {
            UndoCheckOutItemResponse theUndoCheckOutItemResponse;
            theUndoCheckOutItemResponse = this.getUndoCheckOutItemResponse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "undoCheckOutItemResponse", theUndoCheckOutItemResponse), currentHashCode, theUndoCheckOutItemResponse, (this.undoCheckOutItemResponse!= null));
        }
        {
            UndoCheckOutItem theUndoCheckOutItem;
            theUndoCheckOutItem = this.getUndoCheckOutItem();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "undoCheckOutItem", theUndoCheckOutItem), currentHashCode, theUndoCheckOutItem, (this.undoCheckOutItem!= null));
        }
        {
            SendUserNoticeResponse theSendUserNoticeResponse;
            theSendUserNoticeResponse = this.getSendUserNoticeResponse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "sendUserNoticeResponse", theSendUserNoticeResponse), currentHashCode, theSendUserNoticeResponse, (this.sendUserNoticeResponse!= null));
        }
        {
            SendUserNotice theSendUserNotice;
            theSendUserNotice = this.getSendUserNotice();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "sendUserNotice", theSendUserNotice), currentHashCode, theSendUserNotice, (this.sendUserNotice!= null));
        }
        {
            RequestItemResponse theRequestItemResponse;
            theRequestItemResponse = this.getRequestItemResponse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "requestItemResponse", theRequestItemResponse), currentHashCode, theRequestItemResponse, (this.requestItemResponse!= null));
        }
        {
            RequestItem theRequestItem;
            theRequestItem = this.getRequestItem();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "requestItem", theRequestItem), currentHashCode, theRequestItem, (this.requestItem!= null));
        }
        {
            ReportCirculationStatusChangeResponse theReportCirculationStatusChangeResponse;
            theReportCirculationStatusChangeResponse = this.getReportCirculationStatusChangeResponse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "reportCirculationStatusChangeResponse", theReportCirculationStatusChangeResponse), currentHashCode, theReportCirculationStatusChangeResponse, (this.reportCirculationStatusChangeResponse!= null));
        }
        {
            ReportCirculationStatusChange theReportCirculationStatusChange;
            theReportCirculationStatusChange = this.getReportCirculationStatusChange();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "reportCirculationStatusChange", theReportCirculationStatusChange), currentHashCode, theReportCirculationStatusChange, (this.reportCirculationStatusChange!= null));
        }
        {
            RenewItemResponse theRenewItemResponse;
            theRenewItemResponse = this.getRenewItemResponse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "renewItemResponse", theRenewItemResponse), currentHashCode, theRenewItemResponse, (this.renewItemResponse!= null));
        }
        {
            RenewItem theRenewItem;
            theRenewItem = this.getRenewItem();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "renewItem", theRenewItem), currentHashCode, theRenewItem, (this.renewItem!= null));
        }
        {
            RecallItemResponse theRecallItemResponse;
            theRecallItemResponse = this.getRecallItemResponse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "recallItemResponse", theRecallItemResponse), currentHashCode, theRecallItemResponse, (this.recallItemResponse!= null));
        }
        {
            RecallItem theRecallItem;
            theRecallItem = this.getRecallItem();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "recallItem", theRecallItem), currentHashCode, theRecallItem, (this.recallItem!= null));
        }
        {
            LookupUserResponse theLookupUserResponse;
            theLookupUserResponse = this.getLookupUserResponse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lookupUserResponse", theLookupUserResponse), currentHashCode, theLookupUserResponse, (this.lookupUserResponse!= null));
        }
        {
            LookupUser theLookupUser;
            theLookupUser = this.getLookupUser();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lookupUser", theLookupUser), currentHashCode, theLookupUser, (this.lookupUser!= null));
        }
        {
            LookupRequestResponse theLookupRequestResponse;
            theLookupRequestResponse = this.getLookupRequestResponse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lookupRequestResponse", theLookupRequestResponse), currentHashCode, theLookupRequestResponse, (this.lookupRequestResponse!= null));
        }
        {
            LookupRequest theLookupRequest;
            theLookupRequest = this.getLookupRequest();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lookupRequest", theLookupRequest), currentHashCode, theLookupRequest, (this.lookupRequest!= null));
        }
        {
            LookupItemSetResponse theLookupItemSetResponse;
            theLookupItemSetResponse = this.getLookupItemSetResponse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lookupItemSetResponse", theLookupItemSetResponse), currentHashCode, theLookupItemSetResponse, (this.lookupItemSetResponse!= null));
        }
        {
            LookupItemSet theLookupItemSet;
            theLookupItemSet = this.getLookupItemSet();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lookupItemSet", theLookupItemSet), currentHashCode, theLookupItemSet, (this.lookupItemSet!= null));
        }
        {
            LookupItemResponse theLookupItemResponse;
            theLookupItemResponse = this.getLookupItemResponse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lookupItemResponse", theLookupItemResponse), currentHashCode, theLookupItemResponse, (this.lookupItemResponse!= null));
        }
        {
            LookupItem theLookupItem;
            theLookupItem = this.getLookupItem();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lookupItem", theLookupItem), currentHashCode, theLookupItem, (this.lookupItem!= null));
        }
        {
            LookupAgencyResponse theLookupAgencyResponse;
            theLookupAgencyResponse = this.getLookupAgencyResponse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lookupAgencyResponse", theLookupAgencyResponse), currentHashCode, theLookupAgencyResponse, (this.lookupAgencyResponse!= null));
        }
        {
            LookupAgency theLookupAgency;
            theLookupAgency = this.getLookupAgency();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lookupAgency", theLookupAgency), currentHashCode, theLookupAgency, (this.lookupAgency!= null));
        }
        {
            ItemUpdatedResponse theItemUpdatedResponse;
            theItemUpdatedResponse = this.getItemUpdatedResponse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "itemUpdatedResponse", theItemUpdatedResponse), currentHashCode, theItemUpdatedResponse, (this.itemUpdatedResponse!= null));
        }
        {
            ItemUpdated theItemUpdated;
            theItemUpdated = this.getItemUpdated();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "itemUpdated", theItemUpdated), currentHashCode, theItemUpdated, (this.itemUpdated!= null));
        }
        {
            ItemShippedResponse theItemShippedResponse;
            theItemShippedResponse = this.getItemShippedResponse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "itemShippedResponse", theItemShippedResponse), currentHashCode, theItemShippedResponse, (this.itemShippedResponse!= null));
        }
        {
            ItemShipped theItemShipped;
            theItemShipped = this.getItemShipped();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "itemShipped", theItemShipped), currentHashCode, theItemShipped, (this.itemShipped!= null));
        }
        {
            ItemRequestedResponse theItemRequestedResponse;
            theItemRequestedResponse = this.getItemRequestedResponse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "itemRequestedResponse", theItemRequestedResponse), currentHashCode, theItemRequestedResponse, (this.itemRequestedResponse!= null));
        }
        {
            ItemRequested theItemRequested;
            theItemRequested = this.getItemRequested();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "itemRequested", theItemRequested), currentHashCode, theItemRequested, (this.itemRequested!= null));
        }
        {
            ItemRequestUpdatedResponse theItemRequestUpdatedResponse;
            theItemRequestUpdatedResponse = this.getItemRequestUpdatedResponse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "itemRequestUpdatedResponse", theItemRequestUpdatedResponse), currentHashCode, theItemRequestUpdatedResponse, (this.itemRequestUpdatedResponse!= null));
        }
        {
            ItemRequestUpdated theItemRequestUpdated;
            theItemRequestUpdated = this.getItemRequestUpdated();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "itemRequestUpdated", theItemRequestUpdated), currentHashCode, theItemRequestUpdated, (this.itemRequestUpdated!= null));
        }
        {
            ItemRequestCancelledResponse theItemRequestCancelledResponse;
            theItemRequestCancelledResponse = this.getItemRequestCancelledResponse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "itemRequestCancelledResponse", theItemRequestCancelledResponse), currentHashCode, theItemRequestCancelledResponse, (this.itemRequestCancelledResponse!= null));
        }
        {
            ItemRequestCancelled theItemRequestCancelled;
            theItemRequestCancelled = this.getItemRequestCancelled();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "itemRequestCancelled", theItemRequestCancelled), currentHashCode, theItemRequestCancelled, (this.itemRequestCancelled!= null));
        }
        {
            ItemRenewedResponse theItemRenewedResponse;
            theItemRenewedResponse = this.getItemRenewedResponse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "itemRenewedResponse", theItemRenewedResponse), currentHashCode, theItemRenewedResponse, (this.itemRenewedResponse!= null));
        }
        {
            ItemRenewed theItemRenewed;
            theItemRenewed = this.getItemRenewed();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "itemRenewed", theItemRenewed), currentHashCode, theItemRenewed, (this.itemRenewed!= null));
        }
        {
            ItemReceivedResponse theItemReceivedResponse;
            theItemReceivedResponse = this.getItemReceivedResponse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "itemReceivedResponse", theItemReceivedResponse), currentHashCode, theItemReceivedResponse, (this.itemReceivedResponse!= null));
        }
        {
            ItemReceived theItemReceived;
            theItemReceived = this.getItemReceived();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "itemReceived", theItemReceived), currentHashCode, theItemReceived, (this.itemReceived!= null));
        }
        {
            ItemRecalledResponse theItemRecalledResponse;
            theItemRecalledResponse = this.getItemRecalledResponse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "itemRecalledResponse", theItemRecalledResponse), currentHashCode, theItemRecalledResponse, (this.itemRecalledResponse!= null));
        }
        {
            ItemRecalled theItemRecalled;
            theItemRecalled = this.getItemRecalled();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "itemRecalled", theItemRecalled), currentHashCode, theItemRecalled, (this.itemRecalled!= null));
        }
        {
            ItemRecallCancelledResponse theItemRecallCancelledResponse;
            theItemRecallCancelledResponse = this.getItemRecallCancelledResponse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "itemRecallCancelledResponse", theItemRecallCancelledResponse), currentHashCode, theItemRecallCancelledResponse, (this.itemRecallCancelledResponse!= null));
        }
        {
            ItemRecallCancelled theItemRecallCancelled;
            theItemRecallCancelled = this.getItemRecallCancelled();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "itemRecallCancelled", theItemRecallCancelled), currentHashCode, theItemRecallCancelled, (this.itemRecallCancelled!= null));
        }
        {
            ItemCreatedResponse theItemCreatedResponse;
            theItemCreatedResponse = this.getItemCreatedResponse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "itemCreatedResponse", theItemCreatedResponse), currentHashCode, theItemCreatedResponse, (this.itemCreatedResponse!= null));
        }
        {
            ItemCreated theItemCreated;
            theItemCreated = this.getItemCreated();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "itemCreated", theItemCreated), currentHashCode, theItemCreated, (this.itemCreated!= null));
        }
        {
            ItemCheckedOutResponse theItemCheckedOutResponse;
            theItemCheckedOutResponse = this.getItemCheckedOutResponse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "itemCheckedOutResponse", theItemCheckedOutResponse), currentHashCode, theItemCheckedOutResponse, (this.itemCheckedOutResponse!= null));
        }
        {
            ItemCheckedOut theItemCheckedOut;
            theItemCheckedOut = this.getItemCheckedOut();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "itemCheckedOut", theItemCheckedOut), currentHashCode, theItemCheckedOut, (this.itemCheckedOut!= null));
        }
        {
            ItemCheckedInResponse theItemCheckedInResponse;
            theItemCheckedInResponse = this.getItemCheckedInResponse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "itemCheckedInResponse", theItemCheckedInResponse), currentHashCode, theItemCheckedInResponse, (this.itemCheckedInResponse!= null));
        }
        {
            ItemCheckedIn theItemCheckedIn;
            theItemCheckedIn = this.getItemCheckedIn();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "itemCheckedIn", theItemCheckedIn), currentHashCode, theItemCheckedIn, (this.itemCheckedIn!= null));
        }
        {
            DeleteUserResponse theDeleteUserResponse;
            theDeleteUserResponse = this.getDeleteUserResponse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "deleteUserResponse", theDeleteUserResponse), currentHashCode, theDeleteUserResponse, (this.deleteUserResponse!= null));
        }
        {
            DeleteUser theDeleteUser;
            theDeleteUser = this.getDeleteUser();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "deleteUser", theDeleteUser), currentHashCode, theDeleteUser, (this.deleteUser!= null));
        }
        {
            DeleteItemResponse theDeleteItemResponse;
            theDeleteItemResponse = this.getDeleteItemResponse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "deleteItemResponse", theDeleteItemResponse), currentHashCode, theDeleteItemResponse, (this.deleteItemResponse!= null));
        }
        {
            DeleteItem theDeleteItem;
            theDeleteItem = this.getDeleteItem();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "deleteItem", theDeleteItem), currentHashCode, theDeleteItem, (this.deleteItem!= null));
        }
        {
            CreateUserFiscalTransactionResponse theCreateUserFiscalTransactionResponse;
            theCreateUserFiscalTransactionResponse = this.getCreateUserFiscalTransactionResponse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "createUserFiscalTransactionResponse", theCreateUserFiscalTransactionResponse), currentHashCode, theCreateUserFiscalTransactionResponse, (this.createUserFiscalTransactionResponse!= null));
        }
        {
            CreateUserFiscalTransaction theCreateUserFiscalTransaction;
            theCreateUserFiscalTransaction = this.getCreateUserFiscalTransaction();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "createUserFiscalTransaction", theCreateUserFiscalTransaction), currentHashCode, theCreateUserFiscalTransaction, (this.createUserFiscalTransaction!= null));
        }
        {
            CreateUserResponse theCreateUserResponse;
            theCreateUserResponse = this.getCreateUserResponse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "createUserResponse", theCreateUserResponse), currentHashCode, theCreateUserResponse, (this.createUserResponse!= null));
        }
        {
            CreateUser theCreateUser;
            theCreateUser = this.getCreateUser();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "createUser", theCreateUser), currentHashCode, theCreateUser, (this.createUser!= null));
        }
        {
            CreateItemResponse theCreateItemResponse;
            theCreateItemResponse = this.getCreateItemResponse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "createItemResponse", theCreateItemResponse), currentHashCode, theCreateItemResponse, (this.createItemResponse!= null));
        }
        {
            CreateItem theCreateItem;
            theCreateItem = this.getCreateItem();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "createItem", theCreateItem), currentHashCode, theCreateItem, (this.createItem!= null));
        }
        {
            CreateAgencyResponse theCreateAgencyResponse;
            theCreateAgencyResponse = this.getCreateAgencyResponse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "createAgencyResponse", theCreateAgencyResponse), currentHashCode, theCreateAgencyResponse, (this.createAgencyResponse!= null));
        }
        {
            CreateAgency theCreateAgency;
            theCreateAgency = this.getCreateAgency();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "createAgency", theCreateAgency), currentHashCode, theCreateAgency, (this.createAgency!= null));
        }
        {
            CirculationStatusUpdatedResponse theCirculationStatusUpdatedResponse;
            theCirculationStatusUpdatedResponse = this.getCirculationStatusUpdatedResponse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "circulationStatusUpdatedResponse", theCirculationStatusUpdatedResponse), currentHashCode, theCirculationStatusUpdatedResponse, (this.circulationStatusUpdatedResponse!= null));
        }
        {
            CirculationStatusUpdated theCirculationStatusUpdated;
            theCirculationStatusUpdated = this.getCirculationStatusUpdated();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "circulationStatusUpdated", theCirculationStatusUpdated), currentHashCode, theCirculationStatusUpdated, (this.circulationStatusUpdated!= null));
        }
        {
            CirculationStatusChangeReportedResponse theCirculationStatusChangeReportedResponse;
            theCirculationStatusChangeReportedResponse = this.getCirculationStatusChangeReportedResponse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "circulationStatusChangeReportedResponse", theCirculationStatusChangeReportedResponse), currentHashCode, theCirculationStatusChangeReportedResponse, (this.circulationStatusChangeReportedResponse!= null));
        }
        {
            CirculationStatusChangeReported theCirculationStatusChangeReported;
            theCirculationStatusChangeReported = this.getCirculationStatusChangeReported();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "circulationStatusChangeReported", theCirculationStatusChangeReported), currentHashCode, theCirculationStatusChangeReported, (this.circulationStatusChangeReported!= null));
        }
        {
            CheckOutItemResponse theCheckOutItemResponse;
            theCheckOutItemResponse = this.getCheckOutItemResponse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "checkOutItemResponse", theCheckOutItemResponse), currentHashCode, theCheckOutItemResponse, (this.checkOutItemResponse!= null));
        }
        {
            CheckOutItem theCheckOutItem;
            theCheckOutItem = this.getCheckOutItem();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "checkOutItem", theCheckOutItem), currentHashCode, theCheckOutItem, (this.checkOutItem!= null));
        }
        {
            CheckInItemResponse theCheckInItemResponse;
            theCheckInItemResponse = this.getCheckInItemResponse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "checkInItemResponse", theCheckInItemResponse), currentHashCode, theCheckInItemResponse, (this.checkInItemResponse!= null));
        }
        {
            CheckInItem theCheckInItem;
            theCheckInItem = this.getCheckInItem();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "checkInItem", theCheckInItem), currentHashCode, theCheckInItem, (this.checkInItem!= null));
        }
        {
            CancelRequestItemResponse theCancelRequestItemResponse;
            theCancelRequestItemResponse = this.getCancelRequestItemResponse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cancelRequestItemResponse", theCancelRequestItemResponse), currentHashCode, theCancelRequestItemResponse, (this.cancelRequestItemResponse!= null));
        }
        {
            CancelRequestItem theCancelRequestItem;
            theCancelRequestItem = this.getCancelRequestItem();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cancelRequestItem", theCancelRequestItem), currentHashCode, theCancelRequestItem, (this.cancelRequestItem!= null));
        }
        {
            CancelRecallItemResponse theCancelRecallItemResponse;
            theCancelRecallItemResponse = this.getCancelRecallItemResponse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cancelRecallItemResponse", theCancelRecallItemResponse), currentHashCode, theCancelRecallItemResponse, (this.cancelRecallItemResponse!= null));
        }
        {
            CancelRecallItem theCancelRecallItem;
            theCancelRecallItem = this.getCancelRecallItem();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cancelRecallItem", theCancelRecallItem), currentHashCode, theCancelRecallItem, (this.cancelRecallItem!= null));
        }
        {
            AgencyUpdatedResponse theAgencyUpdatedResponse;
            theAgencyUpdatedResponse = this.getAgencyUpdatedResponse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "agencyUpdatedResponse", theAgencyUpdatedResponse), currentHashCode, theAgencyUpdatedResponse, (this.agencyUpdatedResponse!= null));
        }
        {
            AgencyUpdated theAgencyUpdated;
            theAgencyUpdated = this.getAgencyUpdated();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "agencyUpdated", theAgencyUpdated), currentHashCode, theAgencyUpdated, (this.agencyUpdated!= null));
        }
        {
            AgencyCreatedResponse theAgencyCreatedResponse;
            theAgencyCreatedResponse = this.getAgencyCreatedResponse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "agencyCreatedResponse", theAgencyCreatedResponse), currentHashCode, theAgencyCreatedResponse, (this.agencyCreatedResponse!= null));
        }
        {
            AgencyCreated theAgencyCreated;
            theAgencyCreated = this.getAgencyCreated();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "agencyCreated", theAgencyCreated), currentHashCode, theAgencyCreated, (this.agencyCreated!= null));
        }
        {
            AcceptItemResponse theAcceptItemResponse;
            theAcceptItemResponse = this.getAcceptItemResponse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "acceptItemResponse", theAcceptItemResponse), currentHashCode, theAcceptItemResponse, (this.acceptItemResponse!= null));
        }
        {
            AcceptItem theAcceptItem;
            theAcceptItem = this.getAcceptItem();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "acceptItem", theAcceptItem), currentHashCode, theAcceptItem, (this.acceptItem!= null));
        }
        {
            String theVersion;
            theVersion = this.getVersion();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "version", theVersion), currentHashCode, theVersion, (this.version!= null));
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy2 strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy2 strategy) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final NCIPMessage that = ((NCIPMessage) object);
        {
            Ext lhsExt;
            lhsExt = this.getExt();
            Ext rhsExt;
            rhsExt = that.getExt();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ext", lhsExt), LocatorUtils.property(thatLocator, "ext", rhsExt), lhsExt, rhsExt, (this.ext!= null), (that.ext!= null))) {
                return false;
            }
        }
        {
            List<Problem> lhsProblems;
            lhsProblems = (((this.problems!= null)&&(!this.problems.isEmpty()))?this.getProblems():null);
            List<Problem> rhsProblems;
            rhsProblems = (((that.problems!= null)&&(!that.problems.isEmpty()))?that.getProblems():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "problems", lhsProblems), LocatorUtils.property(thatLocator, "problems", rhsProblems), lhsProblems, rhsProblems, ((this.problems!= null)&&(!this.problems.isEmpty())), ((that.problems!= null)&&(!that.problems.isEmpty())))) {
                return false;
            }
        }
        {
            UserUpdatedResponse lhsUserUpdatedResponse;
            lhsUserUpdatedResponse = this.getUserUpdatedResponse();
            UserUpdatedResponse rhsUserUpdatedResponse;
            rhsUserUpdatedResponse = that.getUserUpdatedResponse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "userUpdatedResponse", lhsUserUpdatedResponse), LocatorUtils.property(thatLocator, "userUpdatedResponse", rhsUserUpdatedResponse), lhsUserUpdatedResponse, rhsUserUpdatedResponse, (this.userUpdatedResponse!= null), (that.userUpdatedResponse!= null))) {
                return false;
            }
        }
        {
            UserUpdated lhsUserUpdated;
            lhsUserUpdated = this.getUserUpdated();
            UserUpdated rhsUserUpdated;
            rhsUserUpdated = that.getUserUpdated();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "userUpdated", lhsUserUpdated), LocatorUtils.property(thatLocator, "userUpdated", rhsUserUpdated), lhsUserUpdated, rhsUserUpdated, (this.userUpdated!= null), (that.userUpdated!= null))) {
                return false;
            }
        }
        {
            UserNoticeSentResponse lhsUserNoticeSentResponse;
            lhsUserNoticeSentResponse = this.getUserNoticeSentResponse();
            UserNoticeSentResponse rhsUserNoticeSentResponse;
            rhsUserNoticeSentResponse = that.getUserNoticeSentResponse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "userNoticeSentResponse", lhsUserNoticeSentResponse), LocatorUtils.property(thatLocator, "userNoticeSentResponse", rhsUserNoticeSentResponse), lhsUserNoticeSentResponse, rhsUserNoticeSentResponse, (this.userNoticeSentResponse!= null), (that.userNoticeSentResponse!= null))) {
                return false;
            }
        }
        {
            UserNoticeSent lhsUserNoticeSent;
            lhsUserNoticeSent = this.getUserNoticeSent();
            UserNoticeSent rhsUserNoticeSent;
            rhsUserNoticeSent = that.getUserNoticeSent();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "userNoticeSent", lhsUserNoticeSent), LocatorUtils.property(thatLocator, "userNoticeSent", rhsUserNoticeSent), lhsUserNoticeSent, rhsUserNoticeSent, (this.userNoticeSent!= null), (that.userNoticeSent!= null))) {
                return false;
            }
        }
        {
            UserFiscalTransactionCreatedResponse lhsUserFiscalTransactionCreatedResponse;
            lhsUserFiscalTransactionCreatedResponse = this.getUserFiscalTransactionCreatedResponse();
            UserFiscalTransactionCreatedResponse rhsUserFiscalTransactionCreatedResponse;
            rhsUserFiscalTransactionCreatedResponse = that.getUserFiscalTransactionCreatedResponse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "userFiscalTransactionCreatedResponse", lhsUserFiscalTransactionCreatedResponse), LocatorUtils.property(thatLocator, "userFiscalTransactionCreatedResponse", rhsUserFiscalTransactionCreatedResponse), lhsUserFiscalTransactionCreatedResponse, rhsUserFiscalTransactionCreatedResponse, (this.userFiscalTransactionCreatedResponse!= null), (that.userFiscalTransactionCreatedResponse!= null))) {
                return false;
            }
        }
        {
            UserFiscalTransactionCreated lhsUserFiscalTransactionCreated;
            lhsUserFiscalTransactionCreated = this.getUserFiscalTransactionCreated();
            UserFiscalTransactionCreated rhsUserFiscalTransactionCreated;
            rhsUserFiscalTransactionCreated = that.getUserFiscalTransactionCreated();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "userFiscalTransactionCreated", lhsUserFiscalTransactionCreated), LocatorUtils.property(thatLocator, "userFiscalTransactionCreated", rhsUserFiscalTransactionCreated), lhsUserFiscalTransactionCreated, rhsUserFiscalTransactionCreated, (this.userFiscalTransactionCreated!= null), (that.userFiscalTransactionCreated!= null))) {
                return false;
            }
        }
        {
            UserCreatedResponse lhsUserCreatedResponse;
            lhsUserCreatedResponse = this.getUserCreatedResponse();
            UserCreatedResponse rhsUserCreatedResponse;
            rhsUserCreatedResponse = that.getUserCreatedResponse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "userCreatedResponse", lhsUserCreatedResponse), LocatorUtils.property(thatLocator, "userCreatedResponse", rhsUserCreatedResponse), lhsUserCreatedResponse, rhsUserCreatedResponse, (this.userCreatedResponse!= null), (that.userCreatedResponse!= null))) {
                return false;
            }
        }
        {
            UserCreated lhsUserCreated;
            lhsUserCreated = this.getUserCreated();
            UserCreated rhsUserCreated;
            rhsUserCreated = that.getUserCreated();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "userCreated", lhsUserCreated), LocatorUtils.property(thatLocator, "userCreated", rhsUserCreated), lhsUserCreated, rhsUserCreated, (this.userCreated!= null), (that.userCreated!= null))) {
                return false;
            }
        }
        {
            UpdateUserResponse lhsUpdateUserResponse;
            lhsUpdateUserResponse = this.getUpdateUserResponse();
            UpdateUserResponse rhsUpdateUserResponse;
            rhsUpdateUserResponse = that.getUpdateUserResponse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "updateUserResponse", lhsUpdateUserResponse), LocatorUtils.property(thatLocator, "updateUserResponse", rhsUpdateUserResponse), lhsUpdateUserResponse, rhsUpdateUserResponse, (this.updateUserResponse!= null), (that.updateUserResponse!= null))) {
                return false;
            }
        }
        {
            UpdateUser lhsUpdateUser;
            lhsUpdateUser = this.getUpdateUser();
            UpdateUser rhsUpdateUser;
            rhsUpdateUser = that.getUpdateUser();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "updateUser", lhsUpdateUser), LocatorUtils.property(thatLocator, "updateUser", rhsUpdateUser), lhsUpdateUser, rhsUpdateUser, (this.updateUser!= null), (that.updateUser!= null))) {
                return false;
            }
        }
        {
            UpdateRequestItemResponse lhsUpdateRequestItemResponse;
            lhsUpdateRequestItemResponse = this.getUpdateRequestItemResponse();
            UpdateRequestItemResponse rhsUpdateRequestItemResponse;
            rhsUpdateRequestItemResponse = that.getUpdateRequestItemResponse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "updateRequestItemResponse", lhsUpdateRequestItemResponse), LocatorUtils.property(thatLocator, "updateRequestItemResponse", rhsUpdateRequestItemResponse), lhsUpdateRequestItemResponse, rhsUpdateRequestItemResponse, (this.updateRequestItemResponse!= null), (that.updateRequestItemResponse!= null))) {
                return false;
            }
        }
        {
            UpdateRequestItem lhsUpdateRequestItem;
            lhsUpdateRequestItem = this.getUpdateRequestItem();
            UpdateRequestItem rhsUpdateRequestItem;
            rhsUpdateRequestItem = that.getUpdateRequestItem();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "updateRequestItem", lhsUpdateRequestItem), LocatorUtils.property(thatLocator, "updateRequestItem", rhsUpdateRequestItem), lhsUpdateRequestItem, rhsUpdateRequestItem, (this.updateRequestItem!= null), (that.updateRequestItem!= null))) {
                return false;
            }
        }
        {
            UpdateItemResponse lhsUpdateItemResponse;
            lhsUpdateItemResponse = this.getUpdateItemResponse();
            UpdateItemResponse rhsUpdateItemResponse;
            rhsUpdateItemResponse = that.getUpdateItemResponse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "updateItemResponse", lhsUpdateItemResponse), LocatorUtils.property(thatLocator, "updateItemResponse", rhsUpdateItemResponse), lhsUpdateItemResponse, rhsUpdateItemResponse, (this.updateItemResponse!= null), (that.updateItemResponse!= null))) {
                return false;
            }
        }
        {
            UpdateItem lhsUpdateItem;
            lhsUpdateItem = this.getUpdateItem();
            UpdateItem rhsUpdateItem;
            rhsUpdateItem = that.getUpdateItem();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "updateItem", lhsUpdateItem), LocatorUtils.property(thatLocator, "updateItem", rhsUpdateItem), lhsUpdateItem, rhsUpdateItem, (this.updateItem!= null), (that.updateItem!= null))) {
                return false;
            }
        }
        {
            UpdateCirculationStatusResponse lhsUpdateCirculationStatusResponse;
            lhsUpdateCirculationStatusResponse = this.getUpdateCirculationStatusResponse();
            UpdateCirculationStatusResponse rhsUpdateCirculationStatusResponse;
            rhsUpdateCirculationStatusResponse = that.getUpdateCirculationStatusResponse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "updateCirculationStatusResponse", lhsUpdateCirculationStatusResponse), LocatorUtils.property(thatLocator, "updateCirculationStatusResponse", rhsUpdateCirculationStatusResponse), lhsUpdateCirculationStatusResponse, rhsUpdateCirculationStatusResponse, (this.updateCirculationStatusResponse!= null), (that.updateCirculationStatusResponse!= null))) {
                return false;
            }
        }
        {
            UpdateCirculationStatus lhsUpdateCirculationStatus;
            lhsUpdateCirculationStatus = this.getUpdateCirculationStatus();
            UpdateCirculationStatus rhsUpdateCirculationStatus;
            rhsUpdateCirculationStatus = that.getUpdateCirculationStatus();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "updateCirculationStatus", lhsUpdateCirculationStatus), LocatorUtils.property(thatLocator, "updateCirculationStatus", rhsUpdateCirculationStatus), lhsUpdateCirculationStatus, rhsUpdateCirculationStatus, (this.updateCirculationStatus!= null), (that.updateCirculationStatus!= null))) {
                return false;
            }
        }
        {
            UpdateAgencyResponse lhsUpdateAgencyResponse;
            lhsUpdateAgencyResponse = this.getUpdateAgencyResponse();
            UpdateAgencyResponse rhsUpdateAgencyResponse;
            rhsUpdateAgencyResponse = that.getUpdateAgencyResponse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "updateAgencyResponse", lhsUpdateAgencyResponse), LocatorUtils.property(thatLocator, "updateAgencyResponse", rhsUpdateAgencyResponse), lhsUpdateAgencyResponse, rhsUpdateAgencyResponse, (this.updateAgencyResponse!= null), (that.updateAgencyResponse!= null))) {
                return false;
            }
        }
        {
            UpdateAgency lhsUpdateAgency;
            lhsUpdateAgency = this.getUpdateAgency();
            UpdateAgency rhsUpdateAgency;
            rhsUpdateAgency = that.getUpdateAgency();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "updateAgency", lhsUpdateAgency), LocatorUtils.property(thatLocator, "updateAgency", rhsUpdateAgency), lhsUpdateAgency, rhsUpdateAgency, (this.updateAgency!= null), (that.updateAgency!= null))) {
                return false;
            }
        }
        {
            UndoCheckOutItemResponse lhsUndoCheckOutItemResponse;
            lhsUndoCheckOutItemResponse = this.getUndoCheckOutItemResponse();
            UndoCheckOutItemResponse rhsUndoCheckOutItemResponse;
            rhsUndoCheckOutItemResponse = that.getUndoCheckOutItemResponse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "undoCheckOutItemResponse", lhsUndoCheckOutItemResponse), LocatorUtils.property(thatLocator, "undoCheckOutItemResponse", rhsUndoCheckOutItemResponse), lhsUndoCheckOutItemResponse, rhsUndoCheckOutItemResponse, (this.undoCheckOutItemResponse!= null), (that.undoCheckOutItemResponse!= null))) {
                return false;
            }
        }
        {
            UndoCheckOutItem lhsUndoCheckOutItem;
            lhsUndoCheckOutItem = this.getUndoCheckOutItem();
            UndoCheckOutItem rhsUndoCheckOutItem;
            rhsUndoCheckOutItem = that.getUndoCheckOutItem();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "undoCheckOutItem", lhsUndoCheckOutItem), LocatorUtils.property(thatLocator, "undoCheckOutItem", rhsUndoCheckOutItem), lhsUndoCheckOutItem, rhsUndoCheckOutItem, (this.undoCheckOutItem!= null), (that.undoCheckOutItem!= null))) {
                return false;
            }
        }
        {
            SendUserNoticeResponse lhsSendUserNoticeResponse;
            lhsSendUserNoticeResponse = this.getSendUserNoticeResponse();
            SendUserNoticeResponse rhsSendUserNoticeResponse;
            rhsSendUserNoticeResponse = that.getSendUserNoticeResponse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "sendUserNoticeResponse", lhsSendUserNoticeResponse), LocatorUtils.property(thatLocator, "sendUserNoticeResponse", rhsSendUserNoticeResponse), lhsSendUserNoticeResponse, rhsSendUserNoticeResponse, (this.sendUserNoticeResponse!= null), (that.sendUserNoticeResponse!= null))) {
                return false;
            }
        }
        {
            SendUserNotice lhsSendUserNotice;
            lhsSendUserNotice = this.getSendUserNotice();
            SendUserNotice rhsSendUserNotice;
            rhsSendUserNotice = that.getSendUserNotice();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "sendUserNotice", lhsSendUserNotice), LocatorUtils.property(thatLocator, "sendUserNotice", rhsSendUserNotice), lhsSendUserNotice, rhsSendUserNotice, (this.sendUserNotice!= null), (that.sendUserNotice!= null))) {
                return false;
            }
        }
        {
            RequestItemResponse lhsRequestItemResponse;
            lhsRequestItemResponse = this.getRequestItemResponse();
            RequestItemResponse rhsRequestItemResponse;
            rhsRequestItemResponse = that.getRequestItemResponse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "requestItemResponse", lhsRequestItemResponse), LocatorUtils.property(thatLocator, "requestItemResponse", rhsRequestItemResponse), lhsRequestItemResponse, rhsRequestItemResponse, (this.requestItemResponse!= null), (that.requestItemResponse!= null))) {
                return false;
            }
        }
        {
            RequestItem lhsRequestItem;
            lhsRequestItem = this.getRequestItem();
            RequestItem rhsRequestItem;
            rhsRequestItem = that.getRequestItem();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "requestItem", lhsRequestItem), LocatorUtils.property(thatLocator, "requestItem", rhsRequestItem), lhsRequestItem, rhsRequestItem, (this.requestItem!= null), (that.requestItem!= null))) {
                return false;
            }
        }
        {
            ReportCirculationStatusChangeResponse lhsReportCirculationStatusChangeResponse;
            lhsReportCirculationStatusChangeResponse = this.getReportCirculationStatusChangeResponse();
            ReportCirculationStatusChangeResponse rhsReportCirculationStatusChangeResponse;
            rhsReportCirculationStatusChangeResponse = that.getReportCirculationStatusChangeResponse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "reportCirculationStatusChangeResponse", lhsReportCirculationStatusChangeResponse), LocatorUtils.property(thatLocator, "reportCirculationStatusChangeResponse", rhsReportCirculationStatusChangeResponse), lhsReportCirculationStatusChangeResponse, rhsReportCirculationStatusChangeResponse, (this.reportCirculationStatusChangeResponse!= null), (that.reportCirculationStatusChangeResponse!= null))) {
                return false;
            }
        }
        {
            ReportCirculationStatusChange lhsReportCirculationStatusChange;
            lhsReportCirculationStatusChange = this.getReportCirculationStatusChange();
            ReportCirculationStatusChange rhsReportCirculationStatusChange;
            rhsReportCirculationStatusChange = that.getReportCirculationStatusChange();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "reportCirculationStatusChange", lhsReportCirculationStatusChange), LocatorUtils.property(thatLocator, "reportCirculationStatusChange", rhsReportCirculationStatusChange), lhsReportCirculationStatusChange, rhsReportCirculationStatusChange, (this.reportCirculationStatusChange!= null), (that.reportCirculationStatusChange!= null))) {
                return false;
            }
        }
        {
            RenewItemResponse lhsRenewItemResponse;
            lhsRenewItemResponse = this.getRenewItemResponse();
            RenewItemResponse rhsRenewItemResponse;
            rhsRenewItemResponse = that.getRenewItemResponse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "renewItemResponse", lhsRenewItemResponse), LocatorUtils.property(thatLocator, "renewItemResponse", rhsRenewItemResponse), lhsRenewItemResponse, rhsRenewItemResponse, (this.renewItemResponse!= null), (that.renewItemResponse!= null))) {
                return false;
            }
        }
        {
            RenewItem lhsRenewItem;
            lhsRenewItem = this.getRenewItem();
            RenewItem rhsRenewItem;
            rhsRenewItem = that.getRenewItem();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "renewItem", lhsRenewItem), LocatorUtils.property(thatLocator, "renewItem", rhsRenewItem), lhsRenewItem, rhsRenewItem, (this.renewItem!= null), (that.renewItem!= null))) {
                return false;
            }
        }
        {
            RecallItemResponse lhsRecallItemResponse;
            lhsRecallItemResponse = this.getRecallItemResponse();
            RecallItemResponse rhsRecallItemResponse;
            rhsRecallItemResponse = that.getRecallItemResponse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "recallItemResponse", lhsRecallItemResponse), LocatorUtils.property(thatLocator, "recallItemResponse", rhsRecallItemResponse), lhsRecallItemResponse, rhsRecallItemResponse, (this.recallItemResponse!= null), (that.recallItemResponse!= null))) {
                return false;
            }
        }
        {
            RecallItem lhsRecallItem;
            lhsRecallItem = this.getRecallItem();
            RecallItem rhsRecallItem;
            rhsRecallItem = that.getRecallItem();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "recallItem", lhsRecallItem), LocatorUtils.property(thatLocator, "recallItem", rhsRecallItem), lhsRecallItem, rhsRecallItem, (this.recallItem!= null), (that.recallItem!= null))) {
                return false;
            }
        }
        {
            LookupUserResponse lhsLookupUserResponse;
            lhsLookupUserResponse = this.getLookupUserResponse();
            LookupUserResponse rhsLookupUserResponse;
            rhsLookupUserResponse = that.getLookupUserResponse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lookupUserResponse", lhsLookupUserResponse), LocatorUtils.property(thatLocator, "lookupUserResponse", rhsLookupUserResponse), lhsLookupUserResponse, rhsLookupUserResponse, (this.lookupUserResponse!= null), (that.lookupUserResponse!= null))) {
                return false;
            }
        }
        {
            LookupUser lhsLookupUser;
            lhsLookupUser = this.getLookupUser();
            LookupUser rhsLookupUser;
            rhsLookupUser = that.getLookupUser();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lookupUser", lhsLookupUser), LocatorUtils.property(thatLocator, "lookupUser", rhsLookupUser), lhsLookupUser, rhsLookupUser, (this.lookupUser!= null), (that.lookupUser!= null))) {
                return false;
            }
        }
        {
            LookupRequestResponse lhsLookupRequestResponse;
            lhsLookupRequestResponse = this.getLookupRequestResponse();
            LookupRequestResponse rhsLookupRequestResponse;
            rhsLookupRequestResponse = that.getLookupRequestResponse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lookupRequestResponse", lhsLookupRequestResponse), LocatorUtils.property(thatLocator, "lookupRequestResponse", rhsLookupRequestResponse), lhsLookupRequestResponse, rhsLookupRequestResponse, (this.lookupRequestResponse!= null), (that.lookupRequestResponse!= null))) {
                return false;
            }
        }
        {
            LookupRequest lhsLookupRequest;
            lhsLookupRequest = this.getLookupRequest();
            LookupRequest rhsLookupRequest;
            rhsLookupRequest = that.getLookupRequest();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lookupRequest", lhsLookupRequest), LocatorUtils.property(thatLocator, "lookupRequest", rhsLookupRequest), lhsLookupRequest, rhsLookupRequest, (this.lookupRequest!= null), (that.lookupRequest!= null))) {
                return false;
            }
        }
        {
            LookupItemSetResponse lhsLookupItemSetResponse;
            lhsLookupItemSetResponse = this.getLookupItemSetResponse();
            LookupItemSetResponse rhsLookupItemSetResponse;
            rhsLookupItemSetResponse = that.getLookupItemSetResponse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lookupItemSetResponse", lhsLookupItemSetResponse), LocatorUtils.property(thatLocator, "lookupItemSetResponse", rhsLookupItemSetResponse), lhsLookupItemSetResponse, rhsLookupItemSetResponse, (this.lookupItemSetResponse!= null), (that.lookupItemSetResponse!= null))) {
                return false;
            }
        }
        {
            LookupItemSet lhsLookupItemSet;
            lhsLookupItemSet = this.getLookupItemSet();
            LookupItemSet rhsLookupItemSet;
            rhsLookupItemSet = that.getLookupItemSet();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lookupItemSet", lhsLookupItemSet), LocatorUtils.property(thatLocator, "lookupItemSet", rhsLookupItemSet), lhsLookupItemSet, rhsLookupItemSet, (this.lookupItemSet!= null), (that.lookupItemSet!= null))) {
                return false;
            }
        }
        {
            LookupItemResponse lhsLookupItemResponse;
            lhsLookupItemResponse = this.getLookupItemResponse();
            LookupItemResponse rhsLookupItemResponse;
            rhsLookupItemResponse = that.getLookupItemResponse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lookupItemResponse", lhsLookupItemResponse), LocatorUtils.property(thatLocator, "lookupItemResponse", rhsLookupItemResponse), lhsLookupItemResponse, rhsLookupItemResponse, (this.lookupItemResponse!= null), (that.lookupItemResponse!= null))) {
                return false;
            }
        }
        {
            LookupItem lhsLookupItem;
            lhsLookupItem = this.getLookupItem();
            LookupItem rhsLookupItem;
            rhsLookupItem = that.getLookupItem();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lookupItem", lhsLookupItem), LocatorUtils.property(thatLocator, "lookupItem", rhsLookupItem), lhsLookupItem, rhsLookupItem, (this.lookupItem!= null), (that.lookupItem!= null))) {
                return false;
            }
        }
        {
            LookupAgencyResponse lhsLookupAgencyResponse;
            lhsLookupAgencyResponse = this.getLookupAgencyResponse();
            LookupAgencyResponse rhsLookupAgencyResponse;
            rhsLookupAgencyResponse = that.getLookupAgencyResponse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lookupAgencyResponse", lhsLookupAgencyResponse), LocatorUtils.property(thatLocator, "lookupAgencyResponse", rhsLookupAgencyResponse), lhsLookupAgencyResponse, rhsLookupAgencyResponse, (this.lookupAgencyResponse!= null), (that.lookupAgencyResponse!= null))) {
                return false;
            }
        }
        {
            LookupAgency lhsLookupAgency;
            lhsLookupAgency = this.getLookupAgency();
            LookupAgency rhsLookupAgency;
            rhsLookupAgency = that.getLookupAgency();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lookupAgency", lhsLookupAgency), LocatorUtils.property(thatLocator, "lookupAgency", rhsLookupAgency), lhsLookupAgency, rhsLookupAgency, (this.lookupAgency!= null), (that.lookupAgency!= null))) {
                return false;
            }
        }
        {
            ItemUpdatedResponse lhsItemUpdatedResponse;
            lhsItemUpdatedResponse = this.getItemUpdatedResponse();
            ItemUpdatedResponse rhsItemUpdatedResponse;
            rhsItemUpdatedResponse = that.getItemUpdatedResponse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "itemUpdatedResponse", lhsItemUpdatedResponse), LocatorUtils.property(thatLocator, "itemUpdatedResponse", rhsItemUpdatedResponse), lhsItemUpdatedResponse, rhsItemUpdatedResponse, (this.itemUpdatedResponse!= null), (that.itemUpdatedResponse!= null))) {
                return false;
            }
        }
        {
            ItemUpdated lhsItemUpdated;
            lhsItemUpdated = this.getItemUpdated();
            ItemUpdated rhsItemUpdated;
            rhsItemUpdated = that.getItemUpdated();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "itemUpdated", lhsItemUpdated), LocatorUtils.property(thatLocator, "itemUpdated", rhsItemUpdated), lhsItemUpdated, rhsItemUpdated, (this.itemUpdated!= null), (that.itemUpdated!= null))) {
                return false;
            }
        }
        {
            ItemShippedResponse lhsItemShippedResponse;
            lhsItemShippedResponse = this.getItemShippedResponse();
            ItemShippedResponse rhsItemShippedResponse;
            rhsItemShippedResponse = that.getItemShippedResponse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "itemShippedResponse", lhsItemShippedResponse), LocatorUtils.property(thatLocator, "itemShippedResponse", rhsItemShippedResponse), lhsItemShippedResponse, rhsItemShippedResponse, (this.itemShippedResponse!= null), (that.itemShippedResponse!= null))) {
                return false;
            }
        }
        {
            ItemShipped lhsItemShipped;
            lhsItemShipped = this.getItemShipped();
            ItemShipped rhsItemShipped;
            rhsItemShipped = that.getItemShipped();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "itemShipped", lhsItemShipped), LocatorUtils.property(thatLocator, "itemShipped", rhsItemShipped), lhsItemShipped, rhsItemShipped, (this.itemShipped!= null), (that.itemShipped!= null))) {
                return false;
            }
        }
        {
            ItemRequestedResponse lhsItemRequestedResponse;
            lhsItemRequestedResponse = this.getItemRequestedResponse();
            ItemRequestedResponse rhsItemRequestedResponse;
            rhsItemRequestedResponse = that.getItemRequestedResponse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "itemRequestedResponse", lhsItemRequestedResponse), LocatorUtils.property(thatLocator, "itemRequestedResponse", rhsItemRequestedResponse), lhsItemRequestedResponse, rhsItemRequestedResponse, (this.itemRequestedResponse!= null), (that.itemRequestedResponse!= null))) {
                return false;
            }
        }
        {
            ItemRequested lhsItemRequested;
            lhsItemRequested = this.getItemRequested();
            ItemRequested rhsItemRequested;
            rhsItemRequested = that.getItemRequested();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "itemRequested", lhsItemRequested), LocatorUtils.property(thatLocator, "itemRequested", rhsItemRequested), lhsItemRequested, rhsItemRequested, (this.itemRequested!= null), (that.itemRequested!= null))) {
                return false;
            }
        }
        {
            ItemRequestUpdatedResponse lhsItemRequestUpdatedResponse;
            lhsItemRequestUpdatedResponse = this.getItemRequestUpdatedResponse();
            ItemRequestUpdatedResponse rhsItemRequestUpdatedResponse;
            rhsItemRequestUpdatedResponse = that.getItemRequestUpdatedResponse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "itemRequestUpdatedResponse", lhsItemRequestUpdatedResponse), LocatorUtils.property(thatLocator, "itemRequestUpdatedResponse", rhsItemRequestUpdatedResponse), lhsItemRequestUpdatedResponse, rhsItemRequestUpdatedResponse, (this.itemRequestUpdatedResponse!= null), (that.itemRequestUpdatedResponse!= null))) {
                return false;
            }
        }
        {
            ItemRequestUpdated lhsItemRequestUpdated;
            lhsItemRequestUpdated = this.getItemRequestUpdated();
            ItemRequestUpdated rhsItemRequestUpdated;
            rhsItemRequestUpdated = that.getItemRequestUpdated();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "itemRequestUpdated", lhsItemRequestUpdated), LocatorUtils.property(thatLocator, "itemRequestUpdated", rhsItemRequestUpdated), lhsItemRequestUpdated, rhsItemRequestUpdated, (this.itemRequestUpdated!= null), (that.itemRequestUpdated!= null))) {
                return false;
            }
        }
        {
            ItemRequestCancelledResponse lhsItemRequestCancelledResponse;
            lhsItemRequestCancelledResponse = this.getItemRequestCancelledResponse();
            ItemRequestCancelledResponse rhsItemRequestCancelledResponse;
            rhsItemRequestCancelledResponse = that.getItemRequestCancelledResponse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "itemRequestCancelledResponse", lhsItemRequestCancelledResponse), LocatorUtils.property(thatLocator, "itemRequestCancelledResponse", rhsItemRequestCancelledResponse), lhsItemRequestCancelledResponse, rhsItemRequestCancelledResponse, (this.itemRequestCancelledResponse!= null), (that.itemRequestCancelledResponse!= null))) {
                return false;
            }
        }
        {
            ItemRequestCancelled lhsItemRequestCancelled;
            lhsItemRequestCancelled = this.getItemRequestCancelled();
            ItemRequestCancelled rhsItemRequestCancelled;
            rhsItemRequestCancelled = that.getItemRequestCancelled();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "itemRequestCancelled", lhsItemRequestCancelled), LocatorUtils.property(thatLocator, "itemRequestCancelled", rhsItemRequestCancelled), lhsItemRequestCancelled, rhsItemRequestCancelled, (this.itemRequestCancelled!= null), (that.itemRequestCancelled!= null))) {
                return false;
            }
        }
        {
            ItemRenewedResponse lhsItemRenewedResponse;
            lhsItemRenewedResponse = this.getItemRenewedResponse();
            ItemRenewedResponse rhsItemRenewedResponse;
            rhsItemRenewedResponse = that.getItemRenewedResponse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "itemRenewedResponse", lhsItemRenewedResponse), LocatorUtils.property(thatLocator, "itemRenewedResponse", rhsItemRenewedResponse), lhsItemRenewedResponse, rhsItemRenewedResponse, (this.itemRenewedResponse!= null), (that.itemRenewedResponse!= null))) {
                return false;
            }
        }
        {
            ItemRenewed lhsItemRenewed;
            lhsItemRenewed = this.getItemRenewed();
            ItemRenewed rhsItemRenewed;
            rhsItemRenewed = that.getItemRenewed();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "itemRenewed", lhsItemRenewed), LocatorUtils.property(thatLocator, "itemRenewed", rhsItemRenewed), lhsItemRenewed, rhsItemRenewed, (this.itemRenewed!= null), (that.itemRenewed!= null))) {
                return false;
            }
        }
        {
            ItemReceivedResponse lhsItemReceivedResponse;
            lhsItemReceivedResponse = this.getItemReceivedResponse();
            ItemReceivedResponse rhsItemReceivedResponse;
            rhsItemReceivedResponse = that.getItemReceivedResponse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "itemReceivedResponse", lhsItemReceivedResponse), LocatorUtils.property(thatLocator, "itemReceivedResponse", rhsItemReceivedResponse), lhsItemReceivedResponse, rhsItemReceivedResponse, (this.itemReceivedResponse!= null), (that.itemReceivedResponse!= null))) {
                return false;
            }
        }
        {
            ItemReceived lhsItemReceived;
            lhsItemReceived = this.getItemReceived();
            ItemReceived rhsItemReceived;
            rhsItemReceived = that.getItemReceived();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "itemReceived", lhsItemReceived), LocatorUtils.property(thatLocator, "itemReceived", rhsItemReceived), lhsItemReceived, rhsItemReceived, (this.itemReceived!= null), (that.itemReceived!= null))) {
                return false;
            }
        }
        {
            ItemRecalledResponse lhsItemRecalledResponse;
            lhsItemRecalledResponse = this.getItemRecalledResponse();
            ItemRecalledResponse rhsItemRecalledResponse;
            rhsItemRecalledResponse = that.getItemRecalledResponse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "itemRecalledResponse", lhsItemRecalledResponse), LocatorUtils.property(thatLocator, "itemRecalledResponse", rhsItemRecalledResponse), lhsItemRecalledResponse, rhsItemRecalledResponse, (this.itemRecalledResponse!= null), (that.itemRecalledResponse!= null))) {
                return false;
            }
        }
        {
            ItemRecalled lhsItemRecalled;
            lhsItemRecalled = this.getItemRecalled();
            ItemRecalled rhsItemRecalled;
            rhsItemRecalled = that.getItemRecalled();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "itemRecalled", lhsItemRecalled), LocatorUtils.property(thatLocator, "itemRecalled", rhsItemRecalled), lhsItemRecalled, rhsItemRecalled, (this.itemRecalled!= null), (that.itemRecalled!= null))) {
                return false;
            }
        }
        {
            ItemRecallCancelledResponse lhsItemRecallCancelledResponse;
            lhsItemRecallCancelledResponse = this.getItemRecallCancelledResponse();
            ItemRecallCancelledResponse rhsItemRecallCancelledResponse;
            rhsItemRecallCancelledResponse = that.getItemRecallCancelledResponse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "itemRecallCancelledResponse", lhsItemRecallCancelledResponse), LocatorUtils.property(thatLocator, "itemRecallCancelledResponse", rhsItemRecallCancelledResponse), lhsItemRecallCancelledResponse, rhsItemRecallCancelledResponse, (this.itemRecallCancelledResponse!= null), (that.itemRecallCancelledResponse!= null))) {
                return false;
            }
        }
        {
            ItemRecallCancelled lhsItemRecallCancelled;
            lhsItemRecallCancelled = this.getItemRecallCancelled();
            ItemRecallCancelled rhsItemRecallCancelled;
            rhsItemRecallCancelled = that.getItemRecallCancelled();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "itemRecallCancelled", lhsItemRecallCancelled), LocatorUtils.property(thatLocator, "itemRecallCancelled", rhsItemRecallCancelled), lhsItemRecallCancelled, rhsItemRecallCancelled, (this.itemRecallCancelled!= null), (that.itemRecallCancelled!= null))) {
                return false;
            }
        }
        {
            ItemCreatedResponse lhsItemCreatedResponse;
            lhsItemCreatedResponse = this.getItemCreatedResponse();
            ItemCreatedResponse rhsItemCreatedResponse;
            rhsItemCreatedResponse = that.getItemCreatedResponse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "itemCreatedResponse", lhsItemCreatedResponse), LocatorUtils.property(thatLocator, "itemCreatedResponse", rhsItemCreatedResponse), lhsItemCreatedResponse, rhsItemCreatedResponse, (this.itemCreatedResponse!= null), (that.itemCreatedResponse!= null))) {
                return false;
            }
        }
        {
            ItemCreated lhsItemCreated;
            lhsItemCreated = this.getItemCreated();
            ItemCreated rhsItemCreated;
            rhsItemCreated = that.getItemCreated();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "itemCreated", lhsItemCreated), LocatorUtils.property(thatLocator, "itemCreated", rhsItemCreated), lhsItemCreated, rhsItemCreated, (this.itemCreated!= null), (that.itemCreated!= null))) {
                return false;
            }
        }
        {
            ItemCheckedOutResponse lhsItemCheckedOutResponse;
            lhsItemCheckedOutResponse = this.getItemCheckedOutResponse();
            ItemCheckedOutResponse rhsItemCheckedOutResponse;
            rhsItemCheckedOutResponse = that.getItemCheckedOutResponse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "itemCheckedOutResponse", lhsItemCheckedOutResponse), LocatorUtils.property(thatLocator, "itemCheckedOutResponse", rhsItemCheckedOutResponse), lhsItemCheckedOutResponse, rhsItemCheckedOutResponse, (this.itemCheckedOutResponse!= null), (that.itemCheckedOutResponse!= null))) {
                return false;
            }
        }
        {
            ItemCheckedOut lhsItemCheckedOut;
            lhsItemCheckedOut = this.getItemCheckedOut();
            ItemCheckedOut rhsItemCheckedOut;
            rhsItemCheckedOut = that.getItemCheckedOut();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "itemCheckedOut", lhsItemCheckedOut), LocatorUtils.property(thatLocator, "itemCheckedOut", rhsItemCheckedOut), lhsItemCheckedOut, rhsItemCheckedOut, (this.itemCheckedOut!= null), (that.itemCheckedOut!= null))) {
                return false;
            }
        }
        {
            ItemCheckedInResponse lhsItemCheckedInResponse;
            lhsItemCheckedInResponse = this.getItemCheckedInResponse();
            ItemCheckedInResponse rhsItemCheckedInResponse;
            rhsItemCheckedInResponse = that.getItemCheckedInResponse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "itemCheckedInResponse", lhsItemCheckedInResponse), LocatorUtils.property(thatLocator, "itemCheckedInResponse", rhsItemCheckedInResponse), lhsItemCheckedInResponse, rhsItemCheckedInResponse, (this.itemCheckedInResponse!= null), (that.itemCheckedInResponse!= null))) {
                return false;
            }
        }
        {
            ItemCheckedIn lhsItemCheckedIn;
            lhsItemCheckedIn = this.getItemCheckedIn();
            ItemCheckedIn rhsItemCheckedIn;
            rhsItemCheckedIn = that.getItemCheckedIn();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "itemCheckedIn", lhsItemCheckedIn), LocatorUtils.property(thatLocator, "itemCheckedIn", rhsItemCheckedIn), lhsItemCheckedIn, rhsItemCheckedIn, (this.itemCheckedIn!= null), (that.itemCheckedIn!= null))) {
                return false;
            }
        }
        {
            DeleteUserResponse lhsDeleteUserResponse;
            lhsDeleteUserResponse = this.getDeleteUserResponse();
            DeleteUserResponse rhsDeleteUserResponse;
            rhsDeleteUserResponse = that.getDeleteUserResponse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "deleteUserResponse", lhsDeleteUserResponse), LocatorUtils.property(thatLocator, "deleteUserResponse", rhsDeleteUserResponse), lhsDeleteUserResponse, rhsDeleteUserResponse, (this.deleteUserResponse!= null), (that.deleteUserResponse!= null))) {
                return false;
            }
        }
        {
            DeleteUser lhsDeleteUser;
            lhsDeleteUser = this.getDeleteUser();
            DeleteUser rhsDeleteUser;
            rhsDeleteUser = that.getDeleteUser();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "deleteUser", lhsDeleteUser), LocatorUtils.property(thatLocator, "deleteUser", rhsDeleteUser), lhsDeleteUser, rhsDeleteUser, (this.deleteUser!= null), (that.deleteUser!= null))) {
                return false;
            }
        }
        {
            DeleteItemResponse lhsDeleteItemResponse;
            lhsDeleteItemResponse = this.getDeleteItemResponse();
            DeleteItemResponse rhsDeleteItemResponse;
            rhsDeleteItemResponse = that.getDeleteItemResponse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "deleteItemResponse", lhsDeleteItemResponse), LocatorUtils.property(thatLocator, "deleteItemResponse", rhsDeleteItemResponse), lhsDeleteItemResponse, rhsDeleteItemResponse, (this.deleteItemResponse!= null), (that.deleteItemResponse!= null))) {
                return false;
            }
        }
        {
            DeleteItem lhsDeleteItem;
            lhsDeleteItem = this.getDeleteItem();
            DeleteItem rhsDeleteItem;
            rhsDeleteItem = that.getDeleteItem();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "deleteItem", lhsDeleteItem), LocatorUtils.property(thatLocator, "deleteItem", rhsDeleteItem), lhsDeleteItem, rhsDeleteItem, (this.deleteItem!= null), (that.deleteItem!= null))) {
                return false;
            }
        }
        {
            CreateUserFiscalTransactionResponse lhsCreateUserFiscalTransactionResponse;
            lhsCreateUserFiscalTransactionResponse = this.getCreateUserFiscalTransactionResponse();
            CreateUserFiscalTransactionResponse rhsCreateUserFiscalTransactionResponse;
            rhsCreateUserFiscalTransactionResponse = that.getCreateUserFiscalTransactionResponse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "createUserFiscalTransactionResponse", lhsCreateUserFiscalTransactionResponse), LocatorUtils.property(thatLocator, "createUserFiscalTransactionResponse", rhsCreateUserFiscalTransactionResponse), lhsCreateUserFiscalTransactionResponse, rhsCreateUserFiscalTransactionResponse, (this.createUserFiscalTransactionResponse!= null), (that.createUserFiscalTransactionResponse!= null))) {
                return false;
            }
        }
        {
            CreateUserFiscalTransaction lhsCreateUserFiscalTransaction;
            lhsCreateUserFiscalTransaction = this.getCreateUserFiscalTransaction();
            CreateUserFiscalTransaction rhsCreateUserFiscalTransaction;
            rhsCreateUserFiscalTransaction = that.getCreateUserFiscalTransaction();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "createUserFiscalTransaction", lhsCreateUserFiscalTransaction), LocatorUtils.property(thatLocator, "createUserFiscalTransaction", rhsCreateUserFiscalTransaction), lhsCreateUserFiscalTransaction, rhsCreateUserFiscalTransaction, (this.createUserFiscalTransaction!= null), (that.createUserFiscalTransaction!= null))) {
                return false;
            }
        }
        {
            CreateUserResponse lhsCreateUserResponse;
            lhsCreateUserResponse = this.getCreateUserResponse();
            CreateUserResponse rhsCreateUserResponse;
            rhsCreateUserResponse = that.getCreateUserResponse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "createUserResponse", lhsCreateUserResponse), LocatorUtils.property(thatLocator, "createUserResponse", rhsCreateUserResponse), lhsCreateUserResponse, rhsCreateUserResponse, (this.createUserResponse!= null), (that.createUserResponse!= null))) {
                return false;
            }
        }
        {
            CreateUser lhsCreateUser;
            lhsCreateUser = this.getCreateUser();
            CreateUser rhsCreateUser;
            rhsCreateUser = that.getCreateUser();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "createUser", lhsCreateUser), LocatorUtils.property(thatLocator, "createUser", rhsCreateUser), lhsCreateUser, rhsCreateUser, (this.createUser!= null), (that.createUser!= null))) {
                return false;
            }
        }
        {
            CreateItemResponse lhsCreateItemResponse;
            lhsCreateItemResponse = this.getCreateItemResponse();
            CreateItemResponse rhsCreateItemResponse;
            rhsCreateItemResponse = that.getCreateItemResponse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "createItemResponse", lhsCreateItemResponse), LocatorUtils.property(thatLocator, "createItemResponse", rhsCreateItemResponse), lhsCreateItemResponse, rhsCreateItemResponse, (this.createItemResponse!= null), (that.createItemResponse!= null))) {
                return false;
            }
        }
        {
            CreateItem lhsCreateItem;
            lhsCreateItem = this.getCreateItem();
            CreateItem rhsCreateItem;
            rhsCreateItem = that.getCreateItem();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "createItem", lhsCreateItem), LocatorUtils.property(thatLocator, "createItem", rhsCreateItem), lhsCreateItem, rhsCreateItem, (this.createItem!= null), (that.createItem!= null))) {
                return false;
            }
        }
        {
            CreateAgencyResponse lhsCreateAgencyResponse;
            lhsCreateAgencyResponse = this.getCreateAgencyResponse();
            CreateAgencyResponse rhsCreateAgencyResponse;
            rhsCreateAgencyResponse = that.getCreateAgencyResponse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "createAgencyResponse", lhsCreateAgencyResponse), LocatorUtils.property(thatLocator, "createAgencyResponse", rhsCreateAgencyResponse), lhsCreateAgencyResponse, rhsCreateAgencyResponse, (this.createAgencyResponse!= null), (that.createAgencyResponse!= null))) {
                return false;
            }
        }
        {
            CreateAgency lhsCreateAgency;
            lhsCreateAgency = this.getCreateAgency();
            CreateAgency rhsCreateAgency;
            rhsCreateAgency = that.getCreateAgency();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "createAgency", lhsCreateAgency), LocatorUtils.property(thatLocator, "createAgency", rhsCreateAgency), lhsCreateAgency, rhsCreateAgency, (this.createAgency!= null), (that.createAgency!= null))) {
                return false;
            }
        }
        {
            CirculationStatusUpdatedResponse lhsCirculationStatusUpdatedResponse;
            lhsCirculationStatusUpdatedResponse = this.getCirculationStatusUpdatedResponse();
            CirculationStatusUpdatedResponse rhsCirculationStatusUpdatedResponse;
            rhsCirculationStatusUpdatedResponse = that.getCirculationStatusUpdatedResponse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "circulationStatusUpdatedResponse", lhsCirculationStatusUpdatedResponse), LocatorUtils.property(thatLocator, "circulationStatusUpdatedResponse", rhsCirculationStatusUpdatedResponse), lhsCirculationStatusUpdatedResponse, rhsCirculationStatusUpdatedResponse, (this.circulationStatusUpdatedResponse!= null), (that.circulationStatusUpdatedResponse!= null))) {
                return false;
            }
        }
        {
            CirculationStatusUpdated lhsCirculationStatusUpdated;
            lhsCirculationStatusUpdated = this.getCirculationStatusUpdated();
            CirculationStatusUpdated rhsCirculationStatusUpdated;
            rhsCirculationStatusUpdated = that.getCirculationStatusUpdated();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "circulationStatusUpdated", lhsCirculationStatusUpdated), LocatorUtils.property(thatLocator, "circulationStatusUpdated", rhsCirculationStatusUpdated), lhsCirculationStatusUpdated, rhsCirculationStatusUpdated, (this.circulationStatusUpdated!= null), (that.circulationStatusUpdated!= null))) {
                return false;
            }
        }
        {
            CirculationStatusChangeReportedResponse lhsCirculationStatusChangeReportedResponse;
            lhsCirculationStatusChangeReportedResponse = this.getCirculationStatusChangeReportedResponse();
            CirculationStatusChangeReportedResponse rhsCirculationStatusChangeReportedResponse;
            rhsCirculationStatusChangeReportedResponse = that.getCirculationStatusChangeReportedResponse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "circulationStatusChangeReportedResponse", lhsCirculationStatusChangeReportedResponse), LocatorUtils.property(thatLocator, "circulationStatusChangeReportedResponse", rhsCirculationStatusChangeReportedResponse), lhsCirculationStatusChangeReportedResponse, rhsCirculationStatusChangeReportedResponse, (this.circulationStatusChangeReportedResponse!= null), (that.circulationStatusChangeReportedResponse!= null))) {
                return false;
            }
        }
        {
            CirculationStatusChangeReported lhsCirculationStatusChangeReported;
            lhsCirculationStatusChangeReported = this.getCirculationStatusChangeReported();
            CirculationStatusChangeReported rhsCirculationStatusChangeReported;
            rhsCirculationStatusChangeReported = that.getCirculationStatusChangeReported();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "circulationStatusChangeReported", lhsCirculationStatusChangeReported), LocatorUtils.property(thatLocator, "circulationStatusChangeReported", rhsCirculationStatusChangeReported), lhsCirculationStatusChangeReported, rhsCirculationStatusChangeReported, (this.circulationStatusChangeReported!= null), (that.circulationStatusChangeReported!= null))) {
                return false;
            }
        }
        {
            CheckOutItemResponse lhsCheckOutItemResponse;
            lhsCheckOutItemResponse = this.getCheckOutItemResponse();
            CheckOutItemResponse rhsCheckOutItemResponse;
            rhsCheckOutItemResponse = that.getCheckOutItemResponse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "checkOutItemResponse", lhsCheckOutItemResponse), LocatorUtils.property(thatLocator, "checkOutItemResponse", rhsCheckOutItemResponse), lhsCheckOutItemResponse, rhsCheckOutItemResponse, (this.checkOutItemResponse!= null), (that.checkOutItemResponse!= null))) {
                return false;
            }
        }
        {
            CheckOutItem lhsCheckOutItem;
            lhsCheckOutItem = this.getCheckOutItem();
            CheckOutItem rhsCheckOutItem;
            rhsCheckOutItem = that.getCheckOutItem();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "checkOutItem", lhsCheckOutItem), LocatorUtils.property(thatLocator, "checkOutItem", rhsCheckOutItem), lhsCheckOutItem, rhsCheckOutItem, (this.checkOutItem!= null), (that.checkOutItem!= null))) {
                return false;
            }
        }
        {
            CheckInItemResponse lhsCheckInItemResponse;
            lhsCheckInItemResponse = this.getCheckInItemResponse();
            CheckInItemResponse rhsCheckInItemResponse;
            rhsCheckInItemResponse = that.getCheckInItemResponse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "checkInItemResponse", lhsCheckInItemResponse), LocatorUtils.property(thatLocator, "checkInItemResponse", rhsCheckInItemResponse), lhsCheckInItemResponse, rhsCheckInItemResponse, (this.checkInItemResponse!= null), (that.checkInItemResponse!= null))) {
                return false;
            }
        }
        {
            CheckInItem lhsCheckInItem;
            lhsCheckInItem = this.getCheckInItem();
            CheckInItem rhsCheckInItem;
            rhsCheckInItem = that.getCheckInItem();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "checkInItem", lhsCheckInItem), LocatorUtils.property(thatLocator, "checkInItem", rhsCheckInItem), lhsCheckInItem, rhsCheckInItem, (this.checkInItem!= null), (that.checkInItem!= null))) {
                return false;
            }
        }
        {
            CancelRequestItemResponse lhsCancelRequestItemResponse;
            lhsCancelRequestItemResponse = this.getCancelRequestItemResponse();
            CancelRequestItemResponse rhsCancelRequestItemResponse;
            rhsCancelRequestItemResponse = that.getCancelRequestItemResponse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "cancelRequestItemResponse", lhsCancelRequestItemResponse), LocatorUtils.property(thatLocator, "cancelRequestItemResponse", rhsCancelRequestItemResponse), lhsCancelRequestItemResponse, rhsCancelRequestItemResponse, (this.cancelRequestItemResponse!= null), (that.cancelRequestItemResponse!= null))) {
                return false;
            }
        }
        {
            CancelRequestItem lhsCancelRequestItem;
            lhsCancelRequestItem = this.getCancelRequestItem();
            CancelRequestItem rhsCancelRequestItem;
            rhsCancelRequestItem = that.getCancelRequestItem();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "cancelRequestItem", lhsCancelRequestItem), LocatorUtils.property(thatLocator, "cancelRequestItem", rhsCancelRequestItem), lhsCancelRequestItem, rhsCancelRequestItem, (this.cancelRequestItem!= null), (that.cancelRequestItem!= null))) {
                return false;
            }
        }
        {
            CancelRecallItemResponse lhsCancelRecallItemResponse;
            lhsCancelRecallItemResponse = this.getCancelRecallItemResponse();
            CancelRecallItemResponse rhsCancelRecallItemResponse;
            rhsCancelRecallItemResponse = that.getCancelRecallItemResponse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "cancelRecallItemResponse", lhsCancelRecallItemResponse), LocatorUtils.property(thatLocator, "cancelRecallItemResponse", rhsCancelRecallItemResponse), lhsCancelRecallItemResponse, rhsCancelRecallItemResponse, (this.cancelRecallItemResponse!= null), (that.cancelRecallItemResponse!= null))) {
                return false;
            }
        }
        {
            CancelRecallItem lhsCancelRecallItem;
            lhsCancelRecallItem = this.getCancelRecallItem();
            CancelRecallItem rhsCancelRecallItem;
            rhsCancelRecallItem = that.getCancelRecallItem();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "cancelRecallItem", lhsCancelRecallItem), LocatorUtils.property(thatLocator, "cancelRecallItem", rhsCancelRecallItem), lhsCancelRecallItem, rhsCancelRecallItem, (this.cancelRecallItem!= null), (that.cancelRecallItem!= null))) {
                return false;
            }
        }
        {
            AgencyUpdatedResponse lhsAgencyUpdatedResponse;
            lhsAgencyUpdatedResponse = this.getAgencyUpdatedResponse();
            AgencyUpdatedResponse rhsAgencyUpdatedResponse;
            rhsAgencyUpdatedResponse = that.getAgencyUpdatedResponse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "agencyUpdatedResponse", lhsAgencyUpdatedResponse), LocatorUtils.property(thatLocator, "agencyUpdatedResponse", rhsAgencyUpdatedResponse), lhsAgencyUpdatedResponse, rhsAgencyUpdatedResponse, (this.agencyUpdatedResponse!= null), (that.agencyUpdatedResponse!= null))) {
                return false;
            }
        }
        {
            AgencyUpdated lhsAgencyUpdated;
            lhsAgencyUpdated = this.getAgencyUpdated();
            AgencyUpdated rhsAgencyUpdated;
            rhsAgencyUpdated = that.getAgencyUpdated();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "agencyUpdated", lhsAgencyUpdated), LocatorUtils.property(thatLocator, "agencyUpdated", rhsAgencyUpdated), lhsAgencyUpdated, rhsAgencyUpdated, (this.agencyUpdated!= null), (that.agencyUpdated!= null))) {
                return false;
            }
        }
        {
            AgencyCreatedResponse lhsAgencyCreatedResponse;
            lhsAgencyCreatedResponse = this.getAgencyCreatedResponse();
            AgencyCreatedResponse rhsAgencyCreatedResponse;
            rhsAgencyCreatedResponse = that.getAgencyCreatedResponse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "agencyCreatedResponse", lhsAgencyCreatedResponse), LocatorUtils.property(thatLocator, "agencyCreatedResponse", rhsAgencyCreatedResponse), lhsAgencyCreatedResponse, rhsAgencyCreatedResponse, (this.agencyCreatedResponse!= null), (that.agencyCreatedResponse!= null))) {
                return false;
            }
        }
        {
            AgencyCreated lhsAgencyCreated;
            lhsAgencyCreated = this.getAgencyCreated();
            AgencyCreated rhsAgencyCreated;
            rhsAgencyCreated = that.getAgencyCreated();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "agencyCreated", lhsAgencyCreated), LocatorUtils.property(thatLocator, "agencyCreated", rhsAgencyCreated), lhsAgencyCreated, rhsAgencyCreated, (this.agencyCreated!= null), (that.agencyCreated!= null))) {
                return false;
            }
        }
        {
            AcceptItemResponse lhsAcceptItemResponse;
            lhsAcceptItemResponse = this.getAcceptItemResponse();
            AcceptItemResponse rhsAcceptItemResponse;
            rhsAcceptItemResponse = that.getAcceptItemResponse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "acceptItemResponse", lhsAcceptItemResponse), LocatorUtils.property(thatLocator, "acceptItemResponse", rhsAcceptItemResponse), lhsAcceptItemResponse, rhsAcceptItemResponse, (this.acceptItemResponse!= null), (that.acceptItemResponse!= null))) {
                return false;
            }
        }
        {
            AcceptItem lhsAcceptItem;
            lhsAcceptItem = this.getAcceptItem();
            AcceptItem rhsAcceptItem;
            rhsAcceptItem = that.getAcceptItem();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "acceptItem", lhsAcceptItem), LocatorUtils.property(thatLocator, "acceptItem", rhsAcceptItem), lhsAcceptItem, rhsAcceptItem, (this.acceptItem!= null), (that.acceptItem!= null))) {
                return false;
            }
        }
        {
            String lhsVersion;
            lhsVersion = this.getVersion();
            String rhsVersion;
            rhsVersion = that.getVersion();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "version", lhsVersion), LocatorUtils.property(thatLocator, "version", rhsVersion), lhsVersion, rhsVersion, (this.version!= null), (that.version!= null))) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy2 strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public String toString() {
        final ToStringStrategy2 strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        {
            Ext theExt;
            theExt = this.getExt();
            strategy.appendField(locator, this, "ext", buffer, theExt, (this.ext!= null));
        }
        {
            List<Problem> theProblems;
            theProblems = (((this.problems!= null)&&(!this.problems.isEmpty()))?this.getProblems():null);
            strategy.appendField(locator, this, "problems", buffer, theProblems, ((this.problems!= null)&&(!this.problems.isEmpty())));
        }
        {
            UserUpdatedResponse theUserUpdatedResponse;
            theUserUpdatedResponse = this.getUserUpdatedResponse();
            strategy.appendField(locator, this, "userUpdatedResponse", buffer, theUserUpdatedResponse, (this.userUpdatedResponse!= null));
        }
        {
            UserUpdated theUserUpdated;
            theUserUpdated = this.getUserUpdated();
            strategy.appendField(locator, this, "userUpdated", buffer, theUserUpdated, (this.userUpdated!= null));
        }
        {
            UserNoticeSentResponse theUserNoticeSentResponse;
            theUserNoticeSentResponse = this.getUserNoticeSentResponse();
            strategy.appendField(locator, this, "userNoticeSentResponse", buffer, theUserNoticeSentResponse, (this.userNoticeSentResponse!= null));
        }
        {
            UserNoticeSent theUserNoticeSent;
            theUserNoticeSent = this.getUserNoticeSent();
            strategy.appendField(locator, this, "userNoticeSent", buffer, theUserNoticeSent, (this.userNoticeSent!= null));
        }
        {
            UserFiscalTransactionCreatedResponse theUserFiscalTransactionCreatedResponse;
            theUserFiscalTransactionCreatedResponse = this.getUserFiscalTransactionCreatedResponse();
            strategy.appendField(locator, this, "userFiscalTransactionCreatedResponse", buffer, theUserFiscalTransactionCreatedResponse, (this.userFiscalTransactionCreatedResponse!= null));
        }
        {
            UserFiscalTransactionCreated theUserFiscalTransactionCreated;
            theUserFiscalTransactionCreated = this.getUserFiscalTransactionCreated();
            strategy.appendField(locator, this, "userFiscalTransactionCreated", buffer, theUserFiscalTransactionCreated, (this.userFiscalTransactionCreated!= null));
        }
        {
            UserCreatedResponse theUserCreatedResponse;
            theUserCreatedResponse = this.getUserCreatedResponse();
            strategy.appendField(locator, this, "userCreatedResponse", buffer, theUserCreatedResponse, (this.userCreatedResponse!= null));
        }
        {
            UserCreated theUserCreated;
            theUserCreated = this.getUserCreated();
            strategy.appendField(locator, this, "userCreated", buffer, theUserCreated, (this.userCreated!= null));
        }
        {
            UpdateUserResponse theUpdateUserResponse;
            theUpdateUserResponse = this.getUpdateUserResponse();
            strategy.appendField(locator, this, "updateUserResponse", buffer, theUpdateUserResponse, (this.updateUserResponse!= null));
        }
        {
            UpdateUser theUpdateUser;
            theUpdateUser = this.getUpdateUser();
            strategy.appendField(locator, this, "updateUser", buffer, theUpdateUser, (this.updateUser!= null));
        }
        {
            UpdateRequestItemResponse theUpdateRequestItemResponse;
            theUpdateRequestItemResponse = this.getUpdateRequestItemResponse();
            strategy.appendField(locator, this, "updateRequestItemResponse", buffer, theUpdateRequestItemResponse, (this.updateRequestItemResponse!= null));
        }
        {
            UpdateRequestItem theUpdateRequestItem;
            theUpdateRequestItem = this.getUpdateRequestItem();
            strategy.appendField(locator, this, "updateRequestItem", buffer, theUpdateRequestItem, (this.updateRequestItem!= null));
        }
        {
            UpdateItemResponse theUpdateItemResponse;
            theUpdateItemResponse = this.getUpdateItemResponse();
            strategy.appendField(locator, this, "updateItemResponse", buffer, theUpdateItemResponse, (this.updateItemResponse!= null));
        }
        {
            UpdateItem theUpdateItem;
            theUpdateItem = this.getUpdateItem();
            strategy.appendField(locator, this, "updateItem", buffer, theUpdateItem, (this.updateItem!= null));
        }
        {
            UpdateCirculationStatusResponse theUpdateCirculationStatusResponse;
            theUpdateCirculationStatusResponse = this.getUpdateCirculationStatusResponse();
            strategy.appendField(locator, this, "updateCirculationStatusResponse", buffer, theUpdateCirculationStatusResponse, (this.updateCirculationStatusResponse!= null));
        }
        {
            UpdateCirculationStatus theUpdateCirculationStatus;
            theUpdateCirculationStatus = this.getUpdateCirculationStatus();
            strategy.appendField(locator, this, "updateCirculationStatus", buffer, theUpdateCirculationStatus, (this.updateCirculationStatus!= null));
        }
        {
            UpdateAgencyResponse theUpdateAgencyResponse;
            theUpdateAgencyResponse = this.getUpdateAgencyResponse();
            strategy.appendField(locator, this, "updateAgencyResponse", buffer, theUpdateAgencyResponse, (this.updateAgencyResponse!= null));
        }
        {
            UpdateAgency theUpdateAgency;
            theUpdateAgency = this.getUpdateAgency();
            strategy.appendField(locator, this, "updateAgency", buffer, theUpdateAgency, (this.updateAgency!= null));
        }
        {
            UndoCheckOutItemResponse theUndoCheckOutItemResponse;
            theUndoCheckOutItemResponse = this.getUndoCheckOutItemResponse();
            strategy.appendField(locator, this, "undoCheckOutItemResponse", buffer, theUndoCheckOutItemResponse, (this.undoCheckOutItemResponse!= null));
        }
        {
            UndoCheckOutItem theUndoCheckOutItem;
            theUndoCheckOutItem = this.getUndoCheckOutItem();
            strategy.appendField(locator, this, "undoCheckOutItem", buffer, theUndoCheckOutItem, (this.undoCheckOutItem!= null));
        }
        {
            SendUserNoticeResponse theSendUserNoticeResponse;
            theSendUserNoticeResponse = this.getSendUserNoticeResponse();
            strategy.appendField(locator, this, "sendUserNoticeResponse", buffer, theSendUserNoticeResponse, (this.sendUserNoticeResponse!= null));
        }
        {
            SendUserNotice theSendUserNotice;
            theSendUserNotice = this.getSendUserNotice();
            strategy.appendField(locator, this, "sendUserNotice", buffer, theSendUserNotice, (this.sendUserNotice!= null));
        }
        {
            RequestItemResponse theRequestItemResponse;
            theRequestItemResponse = this.getRequestItemResponse();
            strategy.appendField(locator, this, "requestItemResponse", buffer, theRequestItemResponse, (this.requestItemResponse!= null));
        }
        {
            RequestItem theRequestItem;
            theRequestItem = this.getRequestItem();
            strategy.appendField(locator, this, "requestItem", buffer, theRequestItem, (this.requestItem!= null));
        }
        {
            ReportCirculationStatusChangeResponse theReportCirculationStatusChangeResponse;
            theReportCirculationStatusChangeResponse = this.getReportCirculationStatusChangeResponse();
            strategy.appendField(locator, this, "reportCirculationStatusChangeResponse", buffer, theReportCirculationStatusChangeResponse, (this.reportCirculationStatusChangeResponse!= null));
        }
        {
            ReportCirculationStatusChange theReportCirculationStatusChange;
            theReportCirculationStatusChange = this.getReportCirculationStatusChange();
            strategy.appendField(locator, this, "reportCirculationStatusChange", buffer, theReportCirculationStatusChange, (this.reportCirculationStatusChange!= null));
        }
        {
            RenewItemResponse theRenewItemResponse;
            theRenewItemResponse = this.getRenewItemResponse();
            strategy.appendField(locator, this, "renewItemResponse", buffer, theRenewItemResponse, (this.renewItemResponse!= null));
        }
        {
            RenewItem theRenewItem;
            theRenewItem = this.getRenewItem();
            strategy.appendField(locator, this, "renewItem", buffer, theRenewItem, (this.renewItem!= null));
        }
        {
            RecallItemResponse theRecallItemResponse;
            theRecallItemResponse = this.getRecallItemResponse();
            strategy.appendField(locator, this, "recallItemResponse", buffer, theRecallItemResponse, (this.recallItemResponse!= null));
        }
        {
            RecallItem theRecallItem;
            theRecallItem = this.getRecallItem();
            strategy.appendField(locator, this, "recallItem", buffer, theRecallItem, (this.recallItem!= null));
        }
        {
            LookupUserResponse theLookupUserResponse;
            theLookupUserResponse = this.getLookupUserResponse();
            strategy.appendField(locator, this, "lookupUserResponse", buffer, theLookupUserResponse, (this.lookupUserResponse!= null));
        }
        {
            LookupUser theLookupUser;
            theLookupUser = this.getLookupUser();
            strategy.appendField(locator, this, "lookupUser", buffer, theLookupUser, (this.lookupUser!= null));
        }
        {
            LookupRequestResponse theLookupRequestResponse;
            theLookupRequestResponse = this.getLookupRequestResponse();
            strategy.appendField(locator, this, "lookupRequestResponse", buffer, theLookupRequestResponse, (this.lookupRequestResponse!= null));
        }
        {
            LookupRequest theLookupRequest;
            theLookupRequest = this.getLookupRequest();
            strategy.appendField(locator, this, "lookupRequest", buffer, theLookupRequest, (this.lookupRequest!= null));
        }
        {
            LookupItemSetResponse theLookupItemSetResponse;
            theLookupItemSetResponse = this.getLookupItemSetResponse();
            strategy.appendField(locator, this, "lookupItemSetResponse", buffer, theLookupItemSetResponse, (this.lookupItemSetResponse!= null));
        }
        {
            LookupItemSet theLookupItemSet;
            theLookupItemSet = this.getLookupItemSet();
            strategy.appendField(locator, this, "lookupItemSet", buffer, theLookupItemSet, (this.lookupItemSet!= null));
        }
        {
            LookupItemResponse theLookupItemResponse;
            theLookupItemResponse = this.getLookupItemResponse();
            strategy.appendField(locator, this, "lookupItemResponse", buffer, theLookupItemResponse, (this.lookupItemResponse!= null));
        }
        {
            LookupItem theLookupItem;
            theLookupItem = this.getLookupItem();
            strategy.appendField(locator, this, "lookupItem", buffer, theLookupItem, (this.lookupItem!= null));
        }
        {
            LookupAgencyResponse theLookupAgencyResponse;
            theLookupAgencyResponse = this.getLookupAgencyResponse();
            strategy.appendField(locator, this, "lookupAgencyResponse", buffer, theLookupAgencyResponse, (this.lookupAgencyResponse!= null));
        }
        {
            LookupAgency theLookupAgency;
            theLookupAgency = this.getLookupAgency();
            strategy.appendField(locator, this, "lookupAgency", buffer, theLookupAgency, (this.lookupAgency!= null));
        }
        {
            ItemUpdatedResponse theItemUpdatedResponse;
            theItemUpdatedResponse = this.getItemUpdatedResponse();
            strategy.appendField(locator, this, "itemUpdatedResponse", buffer, theItemUpdatedResponse, (this.itemUpdatedResponse!= null));
        }
        {
            ItemUpdated theItemUpdated;
            theItemUpdated = this.getItemUpdated();
            strategy.appendField(locator, this, "itemUpdated", buffer, theItemUpdated, (this.itemUpdated!= null));
        }
        {
            ItemShippedResponse theItemShippedResponse;
            theItemShippedResponse = this.getItemShippedResponse();
            strategy.appendField(locator, this, "itemShippedResponse", buffer, theItemShippedResponse, (this.itemShippedResponse!= null));
        }
        {
            ItemShipped theItemShipped;
            theItemShipped = this.getItemShipped();
            strategy.appendField(locator, this, "itemShipped", buffer, theItemShipped, (this.itemShipped!= null));
        }
        {
            ItemRequestedResponse theItemRequestedResponse;
            theItemRequestedResponse = this.getItemRequestedResponse();
            strategy.appendField(locator, this, "itemRequestedResponse", buffer, theItemRequestedResponse, (this.itemRequestedResponse!= null));
        }
        {
            ItemRequested theItemRequested;
            theItemRequested = this.getItemRequested();
            strategy.appendField(locator, this, "itemRequested", buffer, theItemRequested, (this.itemRequested!= null));
        }
        {
            ItemRequestUpdatedResponse theItemRequestUpdatedResponse;
            theItemRequestUpdatedResponse = this.getItemRequestUpdatedResponse();
            strategy.appendField(locator, this, "itemRequestUpdatedResponse", buffer, theItemRequestUpdatedResponse, (this.itemRequestUpdatedResponse!= null));
        }
        {
            ItemRequestUpdated theItemRequestUpdated;
            theItemRequestUpdated = this.getItemRequestUpdated();
            strategy.appendField(locator, this, "itemRequestUpdated", buffer, theItemRequestUpdated, (this.itemRequestUpdated!= null));
        }
        {
            ItemRequestCancelledResponse theItemRequestCancelledResponse;
            theItemRequestCancelledResponse = this.getItemRequestCancelledResponse();
            strategy.appendField(locator, this, "itemRequestCancelledResponse", buffer, theItemRequestCancelledResponse, (this.itemRequestCancelledResponse!= null));
        }
        {
            ItemRequestCancelled theItemRequestCancelled;
            theItemRequestCancelled = this.getItemRequestCancelled();
            strategy.appendField(locator, this, "itemRequestCancelled", buffer, theItemRequestCancelled, (this.itemRequestCancelled!= null));
        }
        {
            ItemRenewedResponse theItemRenewedResponse;
            theItemRenewedResponse = this.getItemRenewedResponse();
            strategy.appendField(locator, this, "itemRenewedResponse", buffer, theItemRenewedResponse, (this.itemRenewedResponse!= null));
        }
        {
            ItemRenewed theItemRenewed;
            theItemRenewed = this.getItemRenewed();
            strategy.appendField(locator, this, "itemRenewed", buffer, theItemRenewed, (this.itemRenewed!= null));
        }
        {
            ItemReceivedResponse theItemReceivedResponse;
            theItemReceivedResponse = this.getItemReceivedResponse();
            strategy.appendField(locator, this, "itemReceivedResponse", buffer, theItemReceivedResponse, (this.itemReceivedResponse!= null));
        }
        {
            ItemReceived theItemReceived;
            theItemReceived = this.getItemReceived();
            strategy.appendField(locator, this, "itemReceived", buffer, theItemReceived, (this.itemReceived!= null));
        }
        {
            ItemRecalledResponse theItemRecalledResponse;
            theItemRecalledResponse = this.getItemRecalledResponse();
            strategy.appendField(locator, this, "itemRecalledResponse", buffer, theItemRecalledResponse, (this.itemRecalledResponse!= null));
        }
        {
            ItemRecalled theItemRecalled;
            theItemRecalled = this.getItemRecalled();
            strategy.appendField(locator, this, "itemRecalled", buffer, theItemRecalled, (this.itemRecalled!= null));
        }
        {
            ItemRecallCancelledResponse theItemRecallCancelledResponse;
            theItemRecallCancelledResponse = this.getItemRecallCancelledResponse();
            strategy.appendField(locator, this, "itemRecallCancelledResponse", buffer, theItemRecallCancelledResponse, (this.itemRecallCancelledResponse!= null));
        }
        {
            ItemRecallCancelled theItemRecallCancelled;
            theItemRecallCancelled = this.getItemRecallCancelled();
            strategy.appendField(locator, this, "itemRecallCancelled", buffer, theItemRecallCancelled, (this.itemRecallCancelled!= null));
        }
        {
            ItemCreatedResponse theItemCreatedResponse;
            theItemCreatedResponse = this.getItemCreatedResponse();
            strategy.appendField(locator, this, "itemCreatedResponse", buffer, theItemCreatedResponse, (this.itemCreatedResponse!= null));
        }
        {
            ItemCreated theItemCreated;
            theItemCreated = this.getItemCreated();
            strategy.appendField(locator, this, "itemCreated", buffer, theItemCreated, (this.itemCreated!= null));
        }
        {
            ItemCheckedOutResponse theItemCheckedOutResponse;
            theItemCheckedOutResponse = this.getItemCheckedOutResponse();
            strategy.appendField(locator, this, "itemCheckedOutResponse", buffer, theItemCheckedOutResponse, (this.itemCheckedOutResponse!= null));
        }
        {
            ItemCheckedOut theItemCheckedOut;
            theItemCheckedOut = this.getItemCheckedOut();
            strategy.appendField(locator, this, "itemCheckedOut", buffer, theItemCheckedOut, (this.itemCheckedOut!= null));
        }
        {
            ItemCheckedInResponse theItemCheckedInResponse;
            theItemCheckedInResponse = this.getItemCheckedInResponse();
            strategy.appendField(locator, this, "itemCheckedInResponse", buffer, theItemCheckedInResponse, (this.itemCheckedInResponse!= null));
        }
        {
            ItemCheckedIn theItemCheckedIn;
            theItemCheckedIn = this.getItemCheckedIn();
            strategy.appendField(locator, this, "itemCheckedIn", buffer, theItemCheckedIn, (this.itemCheckedIn!= null));
        }
        {
            DeleteUserResponse theDeleteUserResponse;
            theDeleteUserResponse = this.getDeleteUserResponse();
            strategy.appendField(locator, this, "deleteUserResponse", buffer, theDeleteUserResponse, (this.deleteUserResponse!= null));
        }
        {
            DeleteUser theDeleteUser;
            theDeleteUser = this.getDeleteUser();
            strategy.appendField(locator, this, "deleteUser", buffer, theDeleteUser, (this.deleteUser!= null));
        }
        {
            DeleteItemResponse theDeleteItemResponse;
            theDeleteItemResponse = this.getDeleteItemResponse();
            strategy.appendField(locator, this, "deleteItemResponse", buffer, theDeleteItemResponse, (this.deleteItemResponse!= null));
        }
        {
            DeleteItem theDeleteItem;
            theDeleteItem = this.getDeleteItem();
            strategy.appendField(locator, this, "deleteItem", buffer, theDeleteItem, (this.deleteItem!= null));
        }
        {
            CreateUserFiscalTransactionResponse theCreateUserFiscalTransactionResponse;
            theCreateUserFiscalTransactionResponse = this.getCreateUserFiscalTransactionResponse();
            strategy.appendField(locator, this, "createUserFiscalTransactionResponse", buffer, theCreateUserFiscalTransactionResponse, (this.createUserFiscalTransactionResponse!= null));
        }
        {
            CreateUserFiscalTransaction theCreateUserFiscalTransaction;
            theCreateUserFiscalTransaction = this.getCreateUserFiscalTransaction();
            strategy.appendField(locator, this, "createUserFiscalTransaction", buffer, theCreateUserFiscalTransaction, (this.createUserFiscalTransaction!= null));
        }
        {
            CreateUserResponse theCreateUserResponse;
            theCreateUserResponse = this.getCreateUserResponse();
            strategy.appendField(locator, this, "createUserResponse", buffer, theCreateUserResponse, (this.createUserResponse!= null));
        }
        {
            CreateUser theCreateUser;
            theCreateUser = this.getCreateUser();
            strategy.appendField(locator, this, "createUser", buffer, theCreateUser, (this.createUser!= null));
        }
        {
            CreateItemResponse theCreateItemResponse;
            theCreateItemResponse = this.getCreateItemResponse();
            strategy.appendField(locator, this, "createItemResponse", buffer, theCreateItemResponse, (this.createItemResponse!= null));
        }
        {
            CreateItem theCreateItem;
            theCreateItem = this.getCreateItem();
            strategy.appendField(locator, this, "createItem", buffer, theCreateItem, (this.createItem!= null));
        }
        {
            CreateAgencyResponse theCreateAgencyResponse;
            theCreateAgencyResponse = this.getCreateAgencyResponse();
            strategy.appendField(locator, this, "createAgencyResponse", buffer, theCreateAgencyResponse, (this.createAgencyResponse!= null));
        }
        {
            CreateAgency theCreateAgency;
            theCreateAgency = this.getCreateAgency();
            strategy.appendField(locator, this, "createAgency", buffer, theCreateAgency, (this.createAgency!= null));
        }
        {
            CirculationStatusUpdatedResponse theCirculationStatusUpdatedResponse;
            theCirculationStatusUpdatedResponse = this.getCirculationStatusUpdatedResponse();
            strategy.appendField(locator, this, "circulationStatusUpdatedResponse", buffer, theCirculationStatusUpdatedResponse, (this.circulationStatusUpdatedResponse!= null));
        }
        {
            CirculationStatusUpdated theCirculationStatusUpdated;
            theCirculationStatusUpdated = this.getCirculationStatusUpdated();
            strategy.appendField(locator, this, "circulationStatusUpdated", buffer, theCirculationStatusUpdated, (this.circulationStatusUpdated!= null));
        }
        {
            CirculationStatusChangeReportedResponse theCirculationStatusChangeReportedResponse;
            theCirculationStatusChangeReportedResponse = this.getCirculationStatusChangeReportedResponse();
            strategy.appendField(locator, this, "circulationStatusChangeReportedResponse", buffer, theCirculationStatusChangeReportedResponse, (this.circulationStatusChangeReportedResponse!= null));
        }
        {
            CirculationStatusChangeReported theCirculationStatusChangeReported;
            theCirculationStatusChangeReported = this.getCirculationStatusChangeReported();
            strategy.appendField(locator, this, "circulationStatusChangeReported", buffer, theCirculationStatusChangeReported, (this.circulationStatusChangeReported!= null));
        }
        {
            CheckOutItemResponse theCheckOutItemResponse;
            theCheckOutItemResponse = this.getCheckOutItemResponse();
            strategy.appendField(locator, this, "checkOutItemResponse", buffer, theCheckOutItemResponse, (this.checkOutItemResponse!= null));
        }
        {
            CheckOutItem theCheckOutItem;
            theCheckOutItem = this.getCheckOutItem();
            strategy.appendField(locator, this, "checkOutItem", buffer, theCheckOutItem, (this.checkOutItem!= null));
        }
        {
            CheckInItemResponse theCheckInItemResponse;
            theCheckInItemResponse = this.getCheckInItemResponse();
            strategy.appendField(locator, this, "checkInItemResponse", buffer, theCheckInItemResponse, (this.checkInItemResponse!= null));
        }
        {
            CheckInItem theCheckInItem;
            theCheckInItem = this.getCheckInItem();
            strategy.appendField(locator, this, "checkInItem", buffer, theCheckInItem, (this.checkInItem!= null));
        }
        {
            CancelRequestItemResponse theCancelRequestItemResponse;
            theCancelRequestItemResponse = this.getCancelRequestItemResponse();
            strategy.appendField(locator, this, "cancelRequestItemResponse", buffer, theCancelRequestItemResponse, (this.cancelRequestItemResponse!= null));
        }
        {
            CancelRequestItem theCancelRequestItem;
            theCancelRequestItem = this.getCancelRequestItem();
            strategy.appendField(locator, this, "cancelRequestItem", buffer, theCancelRequestItem, (this.cancelRequestItem!= null));
        }
        {
            CancelRecallItemResponse theCancelRecallItemResponse;
            theCancelRecallItemResponse = this.getCancelRecallItemResponse();
            strategy.appendField(locator, this, "cancelRecallItemResponse", buffer, theCancelRecallItemResponse, (this.cancelRecallItemResponse!= null));
        }
        {
            CancelRecallItem theCancelRecallItem;
            theCancelRecallItem = this.getCancelRecallItem();
            strategy.appendField(locator, this, "cancelRecallItem", buffer, theCancelRecallItem, (this.cancelRecallItem!= null));
        }
        {
            AgencyUpdatedResponse theAgencyUpdatedResponse;
            theAgencyUpdatedResponse = this.getAgencyUpdatedResponse();
            strategy.appendField(locator, this, "agencyUpdatedResponse", buffer, theAgencyUpdatedResponse, (this.agencyUpdatedResponse!= null));
        }
        {
            AgencyUpdated theAgencyUpdated;
            theAgencyUpdated = this.getAgencyUpdated();
            strategy.appendField(locator, this, "agencyUpdated", buffer, theAgencyUpdated, (this.agencyUpdated!= null));
        }
        {
            AgencyCreatedResponse theAgencyCreatedResponse;
            theAgencyCreatedResponse = this.getAgencyCreatedResponse();
            strategy.appendField(locator, this, "agencyCreatedResponse", buffer, theAgencyCreatedResponse, (this.agencyCreatedResponse!= null));
        }
        {
            AgencyCreated theAgencyCreated;
            theAgencyCreated = this.getAgencyCreated();
            strategy.appendField(locator, this, "agencyCreated", buffer, theAgencyCreated, (this.agencyCreated!= null));
        }
        {
            AcceptItemResponse theAcceptItemResponse;
            theAcceptItemResponse = this.getAcceptItemResponse();
            strategy.appendField(locator, this, "acceptItemResponse", buffer, theAcceptItemResponse, (this.acceptItemResponse!= null));
        }
        {
            AcceptItem theAcceptItem;
            theAcceptItem = this.getAcceptItem();
            strategy.appendField(locator, this, "acceptItem", buffer, theAcceptItem, (this.acceptItem!= null));
        }
        {
            String theVersion;
            theVersion = this.getVersion();
            strategy.appendField(locator, this, "version", buffer, theVersion, (this.version!= null));
        }
        return buffer;
    }

}
