//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.03.12 at 09:54:26 AM CET 
//


package no.bibsys.alma.rest.ncip;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;
import org.jvnet.jaxb2_commons.lang.Equals2;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy2;
import org.jvnet.jaxb2_commons.lang.HashCode2;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy2;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString2;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy2;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}ResponseHeader" minOccurs="0"/&gt;
 *         &lt;choice&gt;
 *           &lt;element ref="{http://www.niso.org/2008/ncip}Problem" maxOccurs="unbounded"/&gt;
 *           &lt;sequence&gt;
 *             &lt;choice&gt;
 *               &lt;element ref="{http://www.niso.org/2008/ncip}ItemId"/&gt;
 *               &lt;sequence&gt;
 *                 &lt;element ref="{http://www.niso.org/2008/ncip}RequestId"/&gt;
 *                 &lt;element ref="{http://www.niso.org/2008/ncip}ItemId" minOccurs="0"/&gt;
 *               &lt;/sequence&gt;
 *             &lt;/choice&gt;
 *             &lt;element ref="{http://www.niso.org/2008/ncip}UserId" minOccurs="0"/&gt;
 *             &lt;element ref="{http://www.niso.org/2008/ncip}RequestType" minOccurs="0"/&gt;
 *             &lt;element ref="{http://www.niso.org/2008/ncip}RequestScopeType" minOccurs="0"/&gt;
 *             &lt;element ref="{http://www.niso.org/2008/ncip}RequestStatusType" minOccurs="0"/&gt;
 *             &lt;element ref="{http://www.niso.org/2008/ncip}HoldQueuePosition" minOccurs="0"/&gt;
 *             &lt;element ref="{http://www.niso.org/2008/ncip}ShippingInformation" minOccurs="0"/&gt;
 *             &lt;element ref="{http://www.niso.org/2008/ncip}EarliestDateNeeded" minOccurs="0"/&gt;
 *             &lt;element ref="{http://www.niso.org/2008/ncip}NeedBeforeDate" minOccurs="0"/&gt;
 *             &lt;element ref="{http://www.niso.org/2008/ncip}PickupDate" minOccurs="0"/&gt;
 *             &lt;element ref="{http://www.niso.org/2008/ncip}PickupLocation" minOccurs="0"/&gt;
 *             &lt;element ref="{http://www.niso.org/2008/ncip}PickupExpiryDate" minOccurs="0"/&gt;
 *             &lt;element ref="{http://www.niso.org/2008/ncip}DateOfUserRequest" minOccurs="0"/&gt;
 *             &lt;element ref="{http://www.niso.org/2008/ncip}DateAvailable" minOccurs="0"/&gt;
 *             &lt;element ref="{http://www.niso.org/2008/ncip}AcknowledgedFeeAmount" minOccurs="0"/&gt;
 *             &lt;element ref="{http://www.niso.org/2008/ncip}PaidFeeAmount" minOccurs="0"/&gt;
 *             &lt;element ref="{http://www.niso.org/2008/ncip}ItemOptionalFields" minOccurs="0"/&gt;
 *             &lt;element ref="{http://www.niso.org/2008/ncip}UserOptionalFields" minOccurs="0"/&gt;
 *           &lt;/sequence&gt;
 *         &lt;/choice&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}Ext" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "responseHeader",
    "requestId",
    "itemId",
    "userId",
    "requestType",
    "requestScopeType",
    "requestStatusType",
    "holdQueuePosition",
    "shippingInformation",
    "earliestDateNeeded",
    "needBeforeDate",
    "pickupDate",
    "pickupLocation",
    "pickupExpiryDate",
    "dateOfUserRequest",
    "dateAvailable",
    "acknowledgedFeeAmount",
    "paidFeeAmount",
    "itemOptionalFields",
    "userOptionalFields",
    "problems",
    "ext"
})
@XmlRootElement(name = "LookupRequestResponse")
public class LookupRequestResponse implements Equals2, HashCode2, ToString2
{

    @XmlElement(name = "ResponseHeader")
    protected ResponseHeader responseHeader;
    @XmlElement(name = "RequestId")
    protected RequestId requestId;
    @XmlElement(name = "ItemId")
    protected ItemId itemId;
    @XmlElement(name = "UserId")
    protected UserId userId;
    @XmlElement(name = "RequestType")
    protected SchemeValuePair requestType;
    @XmlElement(name = "RequestScopeType")
    protected SchemeValuePair requestScopeType;
    @XmlElement(name = "RequestStatusType")
    protected SchemeValuePair requestStatusType;
    @XmlElement(name = "HoldQueuePosition")
    @XmlSchemaType(name = "positiveInteger")
    protected BigInteger holdQueuePosition;
    @XmlElement(name = "ShippingInformation")
    protected ShippingInformation shippingInformation;
    @XmlElement(name = "EarliestDateNeeded")
    @XmlSchemaType(name = "dateTime")
    protected XMLGregorianCalendar earliestDateNeeded;
    @XmlElement(name = "NeedBeforeDate")
    @XmlSchemaType(name = "dateTime")
    protected XMLGregorianCalendar needBeforeDate;
    @XmlElement(name = "PickupDate")
    @XmlSchemaType(name = "dateTime")
    protected XMLGregorianCalendar pickupDate;
    @XmlElement(name = "PickupLocation")
    protected SchemeValuePair pickupLocation;
    @XmlElement(name = "PickupExpiryDate")
    @XmlSchemaType(name = "dateTime")
    protected XMLGregorianCalendar pickupExpiryDate;
    @XmlElement(name = "DateOfUserRequest")
    @XmlSchemaType(name = "dateTime")
    protected XMLGregorianCalendar dateOfUserRequest;
    @XmlElement(name = "DateAvailable")
    @XmlSchemaType(name = "dateTime")
    protected XMLGregorianCalendar dateAvailable;
    @XmlElement(name = "AcknowledgedFeeAmount")
    protected AcknowledgedFeeAmount acknowledgedFeeAmount;
    @XmlElement(name = "PaidFeeAmount")
    protected PaidFeeAmount paidFeeAmount;
    @XmlElement(name = "ItemOptionalFields")
    protected ItemOptionalFields itemOptionalFields;
    @XmlElement(name = "UserOptionalFields")
    protected UserOptionalFields userOptionalFields;
    @XmlElement(name = "Problem")
    protected List<Problem> problems;
    @XmlElement(name = "Ext")
    protected Ext ext;

    /**
     * Gets the value of the responseHeader property.
     * 
     * @return
     *     possible object is
     *     {@link ResponseHeader }
     *     
     */
    public ResponseHeader getResponseHeader() {
        return responseHeader;
    }

    /**
     * Sets the value of the responseHeader property.
     * 
     * @param value
     *     allowed object is
     *     {@link ResponseHeader }
     *     
     */
    public void setResponseHeader(ResponseHeader value) {
        this.responseHeader = value;
    }

    /**
     * Gets the value of the requestId property.
     * 
     * @return
     *     possible object is
     *     {@link RequestId }
     *     
     */
    public RequestId getRequestId() {
        return requestId;
    }

    /**
     * Sets the value of the requestId property.
     * 
     * @param value
     *     allowed object is
     *     {@link RequestId }
     *     
     */
    public void setRequestId(RequestId value) {
        this.requestId = value;
    }

    /**
     * Gets the value of the itemId property.
     * 
     * @return
     *     possible object is
     *     {@link ItemId }
     *     
     */
    public ItemId getItemId() {
        return itemId;
    }

    /**
     * Sets the value of the itemId property.
     * 
     * @param value
     *     allowed object is
     *     {@link ItemId }
     *     
     */
    public void setItemId(ItemId value) {
        this.itemId = value;
    }

    /**
     * Gets the value of the userId property.
     * 
     * @return
     *     possible object is
     *     {@link UserId }
     *     
     */
    public UserId getUserId() {
        return userId;
    }

    /**
     * Sets the value of the userId property.
     * 
     * @param value
     *     allowed object is
     *     {@link UserId }
     *     
     */
    public void setUserId(UserId value) {
        this.userId = value;
    }

    /**
     * Gets the value of the requestType property.
     * 
     * @return
     *     possible object is
     *     {@link SchemeValuePair }
     *     
     */
    public SchemeValuePair getRequestType() {
        return requestType;
    }

    /**
     * Sets the value of the requestType property.
     * 
     * @param value
     *     allowed object is
     *     {@link SchemeValuePair }
     *     
     */
    public void setRequestType(SchemeValuePair value) {
        this.requestType = value;
    }

    /**
     * Gets the value of the requestScopeType property.
     * 
     * @return
     *     possible object is
     *     {@link SchemeValuePair }
     *     
     */
    public SchemeValuePair getRequestScopeType() {
        return requestScopeType;
    }

    /**
     * Sets the value of the requestScopeType property.
     * 
     * @param value
     *     allowed object is
     *     {@link SchemeValuePair }
     *     
     */
    public void setRequestScopeType(SchemeValuePair value) {
        this.requestScopeType = value;
    }

    /**
     * Gets the value of the requestStatusType property.
     * 
     * @return
     *     possible object is
     *     {@link SchemeValuePair }
     *     
     */
    public SchemeValuePair getRequestStatusType() {
        return requestStatusType;
    }

    /**
     * Sets the value of the requestStatusType property.
     * 
     * @param value
     *     allowed object is
     *     {@link SchemeValuePair }
     *     
     */
    public void setRequestStatusType(SchemeValuePair value) {
        this.requestStatusType = value;
    }

    /**
     * Gets the value of the holdQueuePosition property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getHoldQueuePosition() {
        return holdQueuePosition;
    }

    /**
     * Sets the value of the holdQueuePosition property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setHoldQueuePosition(BigInteger value) {
        this.holdQueuePosition = value;
    }

    /**
     * Gets the value of the shippingInformation property.
     * 
     * @return
     *     possible object is
     *     {@link ShippingInformation }
     *     
     */
    public ShippingInformation getShippingInformation() {
        return shippingInformation;
    }

    /**
     * Sets the value of the shippingInformation property.
     * 
     * @param value
     *     allowed object is
     *     {@link ShippingInformation }
     *     
     */
    public void setShippingInformation(ShippingInformation value) {
        this.shippingInformation = value;
    }

    /**
     * Gets the value of the earliestDateNeeded property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getEarliestDateNeeded() {
        return earliestDateNeeded;
    }

    /**
     * Sets the value of the earliestDateNeeded property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setEarliestDateNeeded(XMLGregorianCalendar value) {
        this.earliestDateNeeded = value;
    }

    /**
     * Gets the value of the needBeforeDate property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getNeedBeforeDate() {
        return needBeforeDate;
    }

    /**
     * Sets the value of the needBeforeDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setNeedBeforeDate(XMLGregorianCalendar value) {
        this.needBeforeDate = value;
    }

    /**
     * Gets the value of the pickupDate property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getPickupDate() {
        return pickupDate;
    }

    /**
     * Sets the value of the pickupDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setPickupDate(XMLGregorianCalendar value) {
        this.pickupDate = value;
    }

    /**
     * Gets the value of the pickupLocation property.
     * 
     * @return
     *     possible object is
     *     {@link SchemeValuePair }
     *     
     */
    public SchemeValuePair getPickupLocation() {
        return pickupLocation;
    }

    /**
     * Sets the value of the pickupLocation property.
     * 
     * @param value
     *     allowed object is
     *     {@link SchemeValuePair }
     *     
     */
    public void setPickupLocation(SchemeValuePair value) {
        this.pickupLocation = value;
    }

    /**
     * Gets the value of the pickupExpiryDate property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getPickupExpiryDate() {
        return pickupExpiryDate;
    }

    /**
     * Sets the value of the pickupExpiryDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setPickupExpiryDate(XMLGregorianCalendar value) {
        this.pickupExpiryDate = value;
    }

    /**
     * Gets the value of the dateOfUserRequest property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getDateOfUserRequest() {
        return dateOfUserRequest;
    }

    /**
     * Sets the value of the dateOfUserRequest property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setDateOfUserRequest(XMLGregorianCalendar value) {
        this.dateOfUserRequest = value;
    }

    /**
     * Gets the value of the dateAvailable property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getDateAvailable() {
        return dateAvailable;
    }

    /**
     * Sets the value of the dateAvailable property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setDateAvailable(XMLGregorianCalendar value) {
        this.dateAvailable = value;
    }

    /**
     * Gets the value of the acknowledgedFeeAmount property.
     * 
     * @return
     *     possible object is
     *     {@link AcknowledgedFeeAmount }
     *     
     */
    public AcknowledgedFeeAmount getAcknowledgedFeeAmount() {
        return acknowledgedFeeAmount;
    }

    /**
     * Sets the value of the acknowledgedFeeAmount property.
     * 
     * @param value
     *     allowed object is
     *     {@link AcknowledgedFeeAmount }
     *     
     */
    public void setAcknowledgedFeeAmount(AcknowledgedFeeAmount value) {
        this.acknowledgedFeeAmount = value;
    }

    /**
     * Gets the value of the paidFeeAmount property.
     * 
     * @return
     *     possible object is
     *     {@link PaidFeeAmount }
     *     
     */
    public PaidFeeAmount getPaidFeeAmount() {
        return paidFeeAmount;
    }

    /**
     * Sets the value of the paidFeeAmount property.
     * 
     * @param value
     *     allowed object is
     *     {@link PaidFeeAmount }
     *     
     */
    public void setPaidFeeAmount(PaidFeeAmount value) {
        this.paidFeeAmount = value;
    }

    /**
     * Gets the value of the itemOptionalFields property.
     * 
     * @return
     *     possible object is
     *     {@link ItemOptionalFields }
     *     
     */
    public ItemOptionalFields getItemOptionalFields() {
        return itemOptionalFields;
    }

    /**
     * Sets the value of the itemOptionalFields property.
     * 
     * @param value
     *     allowed object is
     *     {@link ItemOptionalFields }
     *     
     */
    public void setItemOptionalFields(ItemOptionalFields value) {
        this.itemOptionalFields = value;
    }

    /**
     * Gets the value of the userOptionalFields property.
     * 
     * @return
     *     possible object is
     *     {@link UserOptionalFields }
     *     
     */
    public UserOptionalFields getUserOptionalFields() {
        return userOptionalFields;
    }

    /**
     * Sets the value of the userOptionalFields property.
     * 
     * @param value
     *     allowed object is
     *     {@link UserOptionalFields }
     *     
     */
    public void setUserOptionalFields(UserOptionalFields value) {
        this.userOptionalFields = value;
    }

    /**
     * Gets the value of the problems property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the problems property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getProblems().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Problem }
     * 
     * 
     */
    public List<Problem> getProblems() {
        if (problems == null) {
            problems = new ArrayList<Problem>();
        }
        return this.problems;
    }

    /**
     * Gets the value of the ext property.
     * 
     * @return
     *     possible object is
     *     {@link Ext }
     *     
     */
    public Ext getExt() {
        return ext;
    }

    /**
     * Sets the value of the ext property.
     * 
     * @param value
     *     allowed object is
     *     {@link Ext }
     *     
     */
    public void setExt(Ext value) {
        this.ext = value;
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy2 strategy) {
        int currentHashCode = 1;
        {
            ResponseHeader theResponseHeader;
            theResponseHeader = this.getResponseHeader();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "responseHeader", theResponseHeader), currentHashCode, theResponseHeader, (this.responseHeader!= null));
        }
        {
            RequestId theRequestId;
            theRequestId = this.getRequestId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "requestId", theRequestId), currentHashCode, theRequestId, (this.requestId!= null));
        }
        {
            ItemId theItemId;
            theItemId = this.getItemId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "itemId", theItemId), currentHashCode, theItemId, (this.itemId!= null));
        }
        {
            UserId theUserId;
            theUserId = this.getUserId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "userId", theUserId), currentHashCode, theUserId, (this.userId!= null));
        }
        {
            SchemeValuePair theRequestType;
            theRequestType = this.getRequestType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "requestType", theRequestType), currentHashCode, theRequestType, (this.requestType!= null));
        }
        {
            SchemeValuePair theRequestScopeType;
            theRequestScopeType = this.getRequestScopeType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "requestScopeType", theRequestScopeType), currentHashCode, theRequestScopeType, (this.requestScopeType!= null));
        }
        {
            SchemeValuePair theRequestStatusType;
            theRequestStatusType = this.getRequestStatusType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "requestStatusType", theRequestStatusType), currentHashCode, theRequestStatusType, (this.requestStatusType!= null));
        }
        {
            BigInteger theHoldQueuePosition;
            theHoldQueuePosition = this.getHoldQueuePosition();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "holdQueuePosition", theHoldQueuePosition), currentHashCode, theHoldQueuePosition, (this.holdQueuePosition!= null));
        }
        {
            ShippingInformation theShippingInformation;
            theShippingInformation = this.getShippingInformation();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "shippingInformation", theShippingInformation), currentHashCode, theShippingInformation, (this.shippingInformation!= null));
        }
        {
            XMLGregorianCalendar theEarliestDateNeeded;
            theEarliestDateNeeded = this.getEarliestDateNeeded();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "earliestDateNeeded", theEarliestDateNeeded), currentHashCode, theEarliestDateNeeded, (this.earliestDateNeeded!= null));
        }
        {
            XMLGregorianCalendar theNeedBeforeDate;
            theNeedBeforeDate = this.getNeedBeforeDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "needBeforeDate", theNeedBeforeDate), currentHashCode, theNeedBeforeDate, (this.needBeforeDate!= null));
        }
        {
            XMLGregorianCalendar thePickupDate;
            thePickupDate = this.getPickupDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "pickupDate", thePickupDate), currentHashCode, thePickupDate, (this.pickupDate!= null));
        }
        {
            SchemeValuePair thePickupLocation;
            thePickupLocation = this.getPickupLocation();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "pickupLocation", thePickupLocation), currentHashCode, thePickupLocation, (this.pickupLocation!= null));
        }
        {
            XMLGregorianCalendar thePickupExpiryDate;
            thePickupExpiryDate = this.getPickupExpiryDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "pickupExpiryDate", thePickupExpiryDate), currentHashCode, thePickupExpiryDate, (this.pickupExpiryDate!= null));
        }
        {
            XMLGregorianCalendar theDateOfUserRequest;
            theDateOfUserRequest = this.getDateOfUserRequest();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dateOfUserRequest", theDateOfUserRequest), currentHashCode, theDateOfUserRequest, (this.dateOfUserRequest!= null));
        }
        {
            XMLGregorianCalendar theDateAvailable;
            theDateAvailable = this.getDateAvailable();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dateAvailable", theDateAvailable), currentHashCode, theDateAvailable, (this.dateAvailable!= null));
        }
        {
            AcknowledgedFeeAmount theAcknowledgedFeeAmount;
            theAcknowledgedFeeAmount = this.getAcknowledgedFeeAmount();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "acknowledgedFeeAmount", theAcknowledgedFeeAmount), currentHashCode, theAcknowledgedFeeAmount, (this.acknowledgedFeeAmount!= null));
        }
        {
            PaidFeeAmount thePaidFeeAmount;
            thePaidFeeAmount = this.getPaidFeeAmount();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "paidFeeAmount", thePaidFeeAmount), currentHashCode, thePaidFeeAmount, (this.paidFeeAmount!= null));
        }
        {
            ItemOptionalFields theItemOptionalFields;
            theItemOptionalFields = this.getItemOptionalFields();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "itemOptionalFields", theItemOptionalFields), currentHashCode, theItemOptionalFields, (this.itemOptionalFields!= null));
        }
        {
            UserOptionalFields theUserOptionalFields;
            theUserOptionalFields = this.getUserOptionalFields();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "userOptionalFields", theUserOptionalFields), currentHashCode, theUserOptionalFields, (this.userOptionalFields!= null));
        }
        {
            List<Problem> theProblems;
            theProblems = (((this.problems!= null)&&(!this.problems.isEmpty()))?this.getProblems():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "problems", theProblems), currentHashCode, theProblems, ((this.problems!= null)&&(!this.problems.isEmpty())));
        }
        {
            Ext theExt;
            theExt = this.getExt();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ext", theExt), currentHashCode, theExt, (this.ext!= null));
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy2 strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy2 strategy) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final LookupRequestResponse that = ((LookupRequestResponse) object);
        {
            ResponseHeader lhsResponseHeader;
            lhsResponseHeader = this.getResponseHeader();
            ResponseHeader rhsResponseHeader;
            rhsResponseHeader = that.getResponseHeader();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "responseHeader", lhsResponseHeader), LocatorUtils.property(thatLocator, "responseHeader", rhsResponseHeader), lhsResponseHeader, rhsResponseHeader, (this.responseHeader!= null), (that.responseHeader!= null))) {
                return false;
            }
        }
        {
            RequestId lhsRequestId;
            lhsRequestId = this.getRequestId();
            RequestId rhsRequestId;
            rhsRequestId = that.getRequestId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "requestId", lhsRequestId), LocatorUtils.property(thatLocator, "requestId", rhsRequestId), lhsRequestId, rhsRequestId, (this.requestId!= null), (that.requestId!= null))) {
                return false;
            }
        }
        {
            ItemId lhsItemId;
            lhsItemId = this.getItemId();
            ItemId rhsItemId;
            rhsItemId = that.getItemId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "itemId", lhsItemId), LocatorUtils.property(thatLocator, "itemId", rhsItemId), lhsItemId, rhsItemId, (this.itemId!= null), (that.itemId!= null))) {
                return false;
            }
        }
        {
            UserId lhsUserId;
            lhsUserId = this.getUserId();
            UserId rhsUserId;
            rhsUserId = that.getUserId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "userId", lhsUserId), LocatorUtils.property(thatLocator, "userId", rhsUserId), lhsUserId, rhsUserId, (this.userId!= null), (that.userId!= null))) {
                return false;
            }
        }
        {
            SchemeValuePair lhsRequestType;
            lhsRequestType = this.getRequestType();
            SchemeValuePair rhsRequestType;
            rhsRequestType = that.getRequestType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "requestType", lhsRequestType), LocatorUtils.property(thatLocator, "requestType", rhsRequestType), lhsRequestType, rhsRequestType, (this.requestType!= null), (that.requestType!= null))) {
                return false;
            }
        }
        {
            SchemeValuePair lhsRequestScopeType;
            lhsRequestScopeType = this.getRequestScopeType();
            SchemeValuePair rhsRequestScopeType;
            rhsRequestScopeType = that.getRequestScopeType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "requestScopeType", lhsRequestScopeType), LocatorUtils.property(thatLocator, "requestScopeType", rhsRequestScopeType), lhsRequestScopeType, rhsRequestScopeType, (this.requestScopeType!= null), (that.requestScopeType!= null))) {
                return false;
            }
        }
        {
            SchemeValuePair lhsRequestStatusType;
            lhsRequestStatusType = this.getRequestStatusType();
            SchemeValuePair rhsRequestStatusType;
            rhsRequestStatusType = that.getRequestStatusType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "requestStatusType", lhsRequestStatusType), LocatorUtils.property(thatLocator, "requestStatusType", rhsRequestStatusType), lhsRequestStatusType, rhsRequestStatusType, (this.requestStatusType!= null), (that.requestStatusType!= null))) {
                return false;
            }
        }
        {
            BigInteger lhsHoldQueuePosition;
            lhsHoldQueuePosition = this.getHoldQueuePosition();
            BigInteger rhsHoldQueuePosition;
            rhsHoldQueuePosition = that.getHoldQueuePosition();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "holdQueuePosition", lhsHoldQueuePosition), LocatorUtils.property(thatLocator, "holdQueuePosition", rhsHoldQueuePosition), lhsHoldQueuePosition, rhsHoldQueuePosition, (this.holdQueuePosition!= null), (that.holdQueuePosition!= null))) {
                return false;
            }
        }
        {
            ShippingInformation lhsShippingInformation;
            lhsShippingInformation = this.getShippingInformation();
            ShippingInformation rhsShippingInformation;
            rhsShippingInformation = that.getShippingInformation();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "shippingInformation", lhsShippingInformation), LocatorUtils.property(thatLocator, "shippingInformation", rhsShippingInformation), lhsShippingInformation, rhsShippingInformation, (this.shippingInformation!= null), (that.shippingInformation!= null))) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsEarliestDateNeeded;
            lhsEarliestDateNeeded = this.getEarliestDateNeeded();
            XMLGregorianCalendar rhsEarliestDateNeeded;
            rhsEarliestDateNeeded = that.getEarliestDateNeeded();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "earliestDateNeeded", lhsEarliestDateNeeded), LocatorUtils.property(thatLocator, "earliestDateNeeded", rhsEarliestDateNeeded), lhsEarliestDateNeeded, rhsEarliestDateNeeded, (this.earliestDateNeeded!= null), (that.earliestDateNeeded!= null))) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsNeedBeforeDate;
            lhsNeedBeforeDate = this.getNeedBeforeDate();
            XMLGregorianCalendar rhsNeedBeforeDate;
            rhsNeedBeforeDate = that.getNeedBeforeDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "needBeforeDate", lhsNeedBeforeDate), LocatorUtils.property(thatLocator, "needBeforeDate", rhsNeedBeforeDate), lhsNeedBeforeDate, rhsNeedBeforeDate, (this.needBeforeDate!= null), (that.needBeforeDate!= null))) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsPickupDate;
            lhsPickupDate = this.getPickupDate();
            XMLGregorianCalendar rhsPickupDate;
            rhsPickupDate = that.getPickupDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "pickupDate", lhsPickupDate), LocatorUtils.property(thatLocator, "pickupDate", rhsPickupDate), lhsPickupDate, rhsPickupDate, (this.pickupDate!= null), (that.pickupDate!= null))) {
                return false;
            }
        }
        {
            SchemeValuePair lhsPickupLocation;
            lhsPickupLocation = this.getPickupLocation();
            SchemeValuePair rhsPickupLocation;
            rhsPickupLocation = that.getPickupLocation();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "pickupLocation", lhsPickupLocation), LocatorUtils.property(thatLocator, "pickupLocation", rhsPickupLocation), lhsPickupLocation, rhsPickupLocation, (this.pickupLocation!= null), (that.pickupLocation!= null))) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsPickupExpiryDate;
            lhsPickupExpiryDate = this.getPickupExpiryDate();
            XMLGregorianCalendar rhsPickupExpiryDate;
            rhsPickupExpiryDate = that.getPickupExpiryDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "pickupExpiryDate", lhsPickupExpiryDate), LocatorUtils.property(thatLocator, "pickupExpiryDate", rhsPickupExpiryDate), lhsPickupExpiryDate, rhsPickupExpiryDate, (this.pickupExpiryDate!= null), (that.pickupExpiryDate!= null))) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsDateOfUserRequest;
            lhsDateOfUserRequest = this.getDateOfUserRequest();
            XMLGregorianCalendar rhsDateOfUserRequest;
            rhsDateOfUserRequest = that.getDateOfUserRequest();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dateOfUserRequest", lhsDateOfUserRequest), LocatorUtils.property(thatLocator, "dateOfUserRequest", rhsDateOfUserRequest), lhsDateOfUserRequest, rhsDateOfUserRequest, (this.dateOfUserRequest!= null), (that.dateOfUserRequest!= null))) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsDateAvailable;
            lhsDateAvailable = this.getDateAvailable();
            XMLGregorianCalendar rhsDateAvailable;
            rhsDateAvailable = that.getDateAvailable();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dateAvailable", lhsDateAvailable), LocatorUtils.property(thatLocator, "dateAvailable", rhsDateAvailable), lhsDateAvailable, rhsDateAvailable, (this.dateAvailable!= null), (that.dateAvailable!= null))) {
                return false;
            }
        }
        {
            AcknowledgedFeeAmount lhsAcknowledgedFeeAmount;
            lhsAcknowledgedFeeAmount = this.getAcknowledgedFeeAmount();
            AcknowledgedFeeAmount rhsAcknowledgedFeeAmount;
            rhsAcknowledgedFeeAmount = that.getAcknowledgedFeeAmount();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "acknowledgedFeeAmount", lhsAcknowledgedFeeAmount), LocatorUtils.property(thatLocator, "acknowledgedFeeAmount", rhsAcknowledgedFeeAmount), lhsAcknowledgedFeeAmount, rhsAcknowledgedFeeAmount, (this.acknowledgedFeeAmount!= null), (that.acknowledgedFeeAmount!= null))) {
                return false;
            }
        }
        {
            PaidFeeAmount lhsPaidFeeAmount;
            lhsPaidFeeAmount = this.getPaidFeeAmount();
            PaidFeeAmount rhsPaidFeeAmount;
            rhsPaidFeeAmount = that.getPaidFeeAmount();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "paidFeeAmount", lhsPaidFeeAmount), LocatorUtils.property(thatLocator, "paidFeeAmount", rhsPaidFeeAmount), lhsPaidFeeAmount, rhsPaidFeeAmount, (this.paidFeeAmount!= null), (that.paidFeeAmount!= null))) {
                return false;
            }
        }
        {
            ItemOptionalFields lhsItemOptionalFields;
            lhsItemOptionalFields = this.getItemOptionalFields();
            ItemOptionalFields rhsItemOptionalFields;
            rhsItemOptionalFields = that.getItemOptionalFields();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "itemOptionalFields", lhsItemOptionalFields), LocatorUtils.property(thatLocator, "itemOptionalFields", rhsItemOptionalFields), lhsItemOptionalFields, rhsItemOptionalFields, (this.itemOptionalFields!= null), (that.itemOptionalFields!= null))) {
                return false;
            }
        }
        {
            UserOptionalFields lhsUserOptionalFields;
            lhsUserOptionalFields = this.getUserOptionalFields();
            UserOptionalFields rhsUserOptionalFields;
            rhsUserOptionalFields = that.getUserOptionalFields();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "userOptionalFields", lhsUserOptionalFields), LocatorUtils.property(thatLocator, "userOptionalFields", rhsUserOptionalFields), lhsUserOptionalFields, rhsUserOptionalFields, (this.userOptionalFields!= null), (that.userOptionalFields!= null))) {
                return false;
            }
        }
        {
            List<Problem> lhsProblems;
            lhsProblems = (((this.problems!= null)&&(!this.problems.isEmpty()))?this.getProblems():null);
            List<Problem> rhsProblems;
            rhsProblems = (((that.problems!= null)&&(!that.problems.isEmpty()))?that.getProblems():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "problems", lhsProblems), LocatorUtils.property(thatLocator, "problems", rhsProblems), lhsProblems, rhsProblems, ((this.problems!= null)&&(!this.problems.isEmpty())), ((that.problems!= null)&&(!that.problems.isEmpty())))) {
                return false;
            }
        }
        {
            Ext lhsExt;
            lhsExt = this.getExt();
            Ext rhsExt;
            rhsExt = that.getExt();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ext", lhsExt), LocatorUtils.property(thatLocator, "ext", rhsExt), lhsExt, rhsExt, (this.ext!= null), (that.ext!= null))) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy2 strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public String toString() {
        final ToStringStrategy2 strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        {
            ResponseHeader theResponseHeader;
            theResponseHeader = this.getResponseHeader();
            strategy.appendField(locator, this, "responseHeader", buffer, theResponseHeader, (this.responseHeader!= null));
        }
        {
            RequestId theRequestId;
            theRequestId = this.getRequestId();
            strategy.appendField(locator, this, "requestId", buffer, theRequestId, (this.requestId!= null));
        }
        {
            ItemId theItemId;
            theItemId = this.getItemId();
            strategy.appendField(locator, this, "itemId", buffer, theItemId, (this.itemId!= null));
        }
        {
            UserId theUserId;
            theUserId = this.getUserId();
            strategy.appendField(locator, this, "userId", buffer, theUserId, (this.userId!= null));
        }
        {
            SchemeValuePair theRequestType;
            theRequestType = this.getRequestType();
            strategy.appendField(locator, this, "requestType", buffer, theRequestType, (this.requestType!= null));
        }
        {
            SchemeValuePair theRequestScopeType;
            theRequestScopeType = this.getRequestScopeType();
            strategy.appendField(locator, this, "requestScopeType", buffer, theRequestScopeType, (this.requestScopeType!= null));
        }
        {
            SchemeValuePair theRequestStatusType;
            theRequestStatusType = this.getRequestStatusType();
            strategy.appendField(locator, this, "requestStatusType", buffer, theRequestStatusType, (this.requestStatusType!= null));
        }
        {
            BigInteger theHoldQueuePosition;
            theHoldQueuePosition = this.getHoldQueuePosition();
            strategy.appendField(locator, this, "holdQueuePosition", buffer, theHoldQueuePosition, (this.holdQueuePosition!= null));
        }
        {
            ShippingInformation theShippingInformation;
            theShippingInformation = this.getShippingInformation();
            strategy.appendField(locator, this, "shippingInformation", buffer, theShippingInformation, (this.shippingInformation!= null));
        }
        {
            XMLGregorianCalendar theEarliestDateNeeded;
            theEarliestDateNeeded = this.getEarliestDateNeeded();
            strategy.appendField(locator, this, "earliestDateNeeded", buffer, theEarliestDateNeeded, (this.earliestDateNeeded!= null));
        }
        {
            XMLGregorianCalendar theNeedBeforeDate;
            theNeedBeforeDate = this.getNeedBeforeDate();
            strategy.appendField(locator, this, "needBeforeDate", buffer, theNeedBeforeDate, (this.needBeforeDate!= null));
        }
        {
            XMLGregorianCalendar thePickupDate;
            thePickupDate = this.getPickupDate();
            strategy.appendField(locator, this, "pickupDate", buffer, thePickupDate, (this.pickupDate!= null));
        }
        {
            SchemeValuePair thePickupLocation;
            thePickupLocation = this.getPickupLocation();
            strategy.appendField(locator, this, "pickupLocation", buffer, thePickupLocation, (this.pickupLocation!= null));
        }
        {
            XMLGregorianCalendar thePickupExpiryDate;
            thePickupExpiryDate = this.getPickupExpiryDate();
            strategy.appendField(locator, this, "pickupExpiryDate", buffer, thePickupExpiryDate, (this.pickupExpiryDate!= null));
        }
        {
            XMLGregorianCalendar theDateOfUserRequest;
            theDateOfUserRequest = this.getDateOfUserRequest();
            strategy.appendField(locator, this, "dateOfUserRequest", buffer, theDateOfUserRequest, (this.dateOfUserRequest!= null));
        }
        {
            XMLGregorianCalendar theDateAvailable;
            theDateAvailable = this.getDateAvailable();
            strategy.appendField(locator, this, "dateAvailable", buffer, theDateAvailable, (this.dateAvailable!= null));
        }
        {
            AcknowledgedFeeAmount theAcknowledgedFeeAmount;
            theAcknowledgedFeeAmount = this.getAcknowledgedFeeAmount();
            strategy.appendField(locator, this, "acknowledgedFeeAmount", buffer, theAcknowledgedFeeAmount, (this.acknowledgedFeeAmount!= null));
        }
        {
            PaidFeeAmount thePaidFeeAmount;
            thePaidFeeAmount = this.getPaidFeeAmount();
            strategy.appendField(locator, this, "paidFeeAmount", buffer, thePaidFeeAmount, (this.paidFeeAmount!= null));
        }
        {
            ItemOptionalFields theItemOptionalFields;
            theItemOptionalFields = this.getItemOptionalFields();
            strategy.appendField(locator, this, "itemOptionalFields", buffer, theItemOptionalFields, (this.itemOptionalFields!= null));
        }
        {
            UserOptionalFields theUserOptionalFields;
            theUserOptionalFields = this.getUserOptionalFields();
            strategy.appendField(locator, this, "userOptionalFields", buffer, theUserOptionalFields, (this.userOptionalFields!= null));
        }
        {
            List<Problem> theProblems;
            theProblems = (((this.problems!= null)&&(!this.problems.isEmpty()))?this.getProblems():null);
            strategy.appendField(locator, this, "problems", buffer, theProblems, ((this.problems!= null)&&(!this.problems.isEmpty())));
        }
        {
            Ext theExt;
            theExt = this.getExt();
            strategy.appendField(locator, this, "ext", buffer, theExt, (this.ext!= null));
        }
        return buffer;
    }

}
