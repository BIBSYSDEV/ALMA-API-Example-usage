//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.03.12 at 09:54:26 AM CET 
//


package no.bibsys.alma.rest.ncip;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;
import org.jvnet.jaxb2_commons.lang.Equals2;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy2;
import org.jvnet.jaxb2_commons.lang.HashCode2;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy2;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString2;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy2;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}InitiationHeader" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}MandatedAction" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}ItemId"/&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}DesiredDateDue" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}ShippingInformation" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}ItemElementType" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}UserElementType" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.niso.org/2008/ncip}Ext" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "initiationHeader",
    "mandatedAction",
    "itemId",
    "desiredDateDue",
    "shippingInformation",
    "itemElementTypes",
    "userElementTypes",
    "ext"
})
@XmlRootElement(name = "RecallItem")
public class RecallItem implements Equals2, HashCode2, ToString2
{

    @XmlElement(name = "InitiationHeader")
    protected InitiationHeader initiationHeader;
    @XmlElement(name = "MandatedAction")
    protected MandatedAction mandatedAction;
    @XmlElement(name = "ItemId", required = true)
    protected ItemId itemId;
    @XmlElement(name = "DesiredDateDue")
    @XmlSchemaType(name = "dateTime")
    protected XMLGregorianCalendar desiredDateDue;
    @XmlElement(name = "ShippingInformation")
    protected ShippingInformation shippingInformation;
    @XmlElement(name = "ItemElementType")
    protected List<SchemeValuePair> itemElementTypes;
    @XmlElement(name = "UserElementType")
    protected List<SchemeValuePair> userElementTypes;
    @XmlElement(name = "Ext")
    protected Ext ext;

    /**
     * Gets the value of the initiationHeader property.
     * 
     * @return
     *     possible object is
     *     {@link InitiationHeader }
     *     
     */
    public InitiationHeader getInitiationHeader() {
        return initiationHeader;
    }

    /**
     * Sets the value of the initiationHeader property.
     * 
     * @param value
     *     allowed object is
     *     {@link InitiationHeader }
     *     
     */
    public void setInitiationHeader(InitiationHeader value) {
        this.initiationHeader = value;
    }

    /**
     * Gets the value of the mandatedAction property.
     * 
     * @return
     *     possible object is
     *     {@link MandatedAction }
     *     
     */
    public MandatedAction getMandatedAction() {
        return mandatedAction;
    }

    /**
     * Sets the value of the mandatedAction property.
     * 
     * @param value
     *     allowed object is
     *     {@link MandatedAction }
     *     
     */
    public void setMandatedAction(MandatedAction value) {
        this.mandatedAction = value;
    }

    /**
     * Gets the value of the itemId property.
     * 
     * @return
     *     possible object is
     *     {@link ItemId }
     *     
     */
    public ItemId getItemId() {
        return itemId;
    }

    /**
     * Sets the value of the itemId property.
     * 
     * @param value
     *     allowed object is
     *     {@link ItemId }
     *     
     */
    public void setItemId(ItemId value) {
        this.itemId = value;
    }

    /**
     * Gets the value of the desiredDateDue property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getDesiredDateDue() {
        return desiredDateDue;
    }

    /**
     * Sets the value of the desiredDateDue property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setDesiredDateDue(XMLGregorianCalendar value) {
        this.desiredDateDue = value;
    }

    /**
     * Gets the value of the shippingInformation property.
     * 
     * @return
     *     possible object is
     *     {@link ShippingInformation }
     *     
     */
    public ShippingInformation getShippingInformation() {
        return shippingInformation;
    }

    /**
     * Sets the value of the shippingInformation property.
     * 
     * @param value
     *     allowed object is
     *     {@link ShippingInformation }
     *     
     */
    public void setShippingInformation(ShippingInformation value) {
        this.shippingInformation = value;
    }

    /**
     * Gets the value of the itemElementTypes property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the itemElementTypes property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getItemElementTypes().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SchemeValuePair }
     * 
     * 
     */
    public List<SchemeValuePair> getItemElementTypes() {
        if (itemElementTypes == null) {
            itemElementTypes = new ArrayList<SchemeValuePair>();
        }
        return this.itemElementTypes;
    }

    /**
     * Gets the value of the userElementTypes property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the userElementTypes property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getUserElementTypes().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SchemeValuePair }
     * 
     * 
     */
    public List<SchemeValuePair> getUserElementTypes() {
        if (userElementTypes == null) {
            userElementTypes = new ArrayList<SchemeValuePair>();
        }
        return this.userElementTypes;
    }

    /**
     * Gets the value of the ext property.
     * 
     * @return
     *     possible object is
     *     {@link Ext }
     *     
     */
    public Ext getExt() {
        return ext;
    }

    /**
     * Sets the value of the ext property.
     * 
     * @param value
     *     allowed object is
     *     {@link Ext }
     *     
     */
    public void setExt(Ext value) {
        this.ext = value;
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy2 strategy) {
        int currentHashCode = 1;
        {
            InitiationHeader theInitiationHeader;
            theInitiationHeader = this.getInitiationHeader();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "initiationHeader", theInitiationHeader), currentHashCode, theInitiationHeader, (this.initiationHeader!= null));
        }
        {
            MandatedAction theMandatedAction;
            theMandatedAction = this.getMandatedAction();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "mandatedAction", theMandatedAction), currentHashCode, theMandatedAction, (this.mandatedAction!= null));
        }
        {
            ItemId theItemId;
            theItemId = this.getItemId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "itemId", theItemId), currentHashCode, theItemId, (this.itemId!= null));
        }
        {
            XMLGregorianCalendar theDesiredDateDue;
            theDesiredDateDue = this.getDesiredDateDue();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "desiredDateDue", theDesiredDateDue), currentHashCode, theDesiredDateDue, (this.desiredDateDue!= null));
        }
        {
            ShippingInformation theShippingInformation;
            theShippingInformation = this.getShippingInformation();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "shippingInformation", theShippingInformation), currentHashCode, theShippingInformation, (this.shippingInformation!= null));
        }
        {
            List<SchemeValuePair> theItemElementTypes;
            theItemElementTypes = (((this.itemElementTypes!= null)&&(!this.itemElementTypes.isEmpty()))?this.getItemElementTypes():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "itemElementTypes", theItemElementTypes), currentHashCode, theItemElementTypes, ((this.itemElementTypes!= null)&&(!this.itemElementTypes.isEmpty())));
        }
        {
            List<SchemeValuePair> theUserElementTypes;
            theUserElementTypes = (((this.userElementTypes!= null)&&(!this.userElementTypes.isEmpty()))?this.getUserElementTypes():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "userElementTypes", theUserElementTypes), currentHashCode, theUserElementTypes, ((this.userElementTypes!= null)&&(!this.userElementTypes.isEmpty())));
        }
        {
            Ext theExt;
            theExt = this.getExt();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ext", theExt), currentHashCode, theExt, (this.ext!= null));
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy2 strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy2 strategy) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final RecallItem that = ((RecallItem) object);
        {
            InitiationHeader lhsInitiationHeader;
            lhsInitiationHeader = this.getInitiationHeader();
            InitiationHeader rhsInitiationHeader;
            rhsInitiationHeader = that.getInitiationHeader();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "initiationHeader", lhsInitiationHeader), LocatorUtils.property(thatLocator, "initiationHeader", rhsInitiationHeader), lhsInitiationHeader, rhsInitiationHeader, (this.initiationHeader!= null), (that.initiationHeader!= null))) {
                return false;
            }
        }
        {
            MandatedAction lhsMandatedAction;
            lhsMandatedAction = this.getMandatedAction();
            MandatedAction rhsMandatedAction;
            rhsMandatedAction = that.getMandatedAction();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "mandatedAction", lhsMandatedAction), LocatorUtils.property(thatLocator, "mandatedAction", rhsMandatedAction), lhsMandatedAction, rhsMandatedAction, (this.mandatedAction!= null), (that.mandatedAction!= null))) {
                return false;
            }
        }
        {
            ItemId lhsItemId;
            lhsItemId = this.getItemId();
            ItemId rhsItemId;
            rhsItemId = that.getItemId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "itemId", lhsItemId), LocatorUtils.property(thatLocator, "itemId", rhsItemId), lhsItemId, rhsItemId, (this.itemId!= null), (that.itemId!= null))) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsDesiredDateDue;
            lhsDesiredDateDue = this.getDesiredDateDue();
            XMLGregorianCalendar rhsDesiredDateDue;
            rhsDesiredDateDue = that.getDesiredDateDue();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "desiredDateDue", lhsDesiredDateDue), LocatorUtils.property(thatLocator, "desiredDateDue", rhsDesiredDateDue), lhsDesiredDateDue, rhsDesiredDateDue, (this.desiredDateDue!= null), (that.desiredDateDue!= null))) {
                return false;
            }
        }
        {
            ShippingInformation lhsShippingInformation;
            lhsShippingInformation = this.getShippingInformation();
            ShippingInformation rhsShippingInformation;
            rhsShippingInformation = that.getShippingInformation();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "shippingInformation", lhsShippingInformation), LocatorUtils.property(thatLocator, "shippingInformation", rhsShippingInformation), lhsShippingInformation, rhsShippingInformation, (this.shippingInformation!= null), (that.shippingInformation!= null))) {
                return false;
            }
        }
        {
            List<SchemeValuePair> lhsItemElementTypes;
            lhsItemElementTypes = (((this.itemElementTypes!= null)&&(!this.itemElementTypes.isEmpty()))?this.getItemElementTypes():null);
            List<SchemeValuePair> rhsItemElementTypes;
            rhsItemElementTypes = (((that.itemElementTypes!= null)&&(!that.itemElementTypes.isEmpty()))?that.getItemElementTypes():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "itemElementTypes", lhsItemElementTypes), LocatorUtils.property(thatLocator, "itemElementTypes", rhsItemElementTypes), lhsItemElementTypes, rhsItemElementTypes, ((this.itemElementTypes!= null)&&(!this.itemElementTypes.isEmpty())), ((that.itemElementTypes!= null)&&(!that.itemElementTypes.isEmpty())))) {
                return false;
            }
        }
        {
            List<SchemeValuePair> lhsUserElementTypes;
            lhsUserElementTypes = (((this.userElementTypes!= null)&&(!this.userElementTypes.isEmpty()))?this.getUserElementTypes():null);
            List<SchemeValuePair> rhsUserElementTypes;
            rhsUserElementTypes = (((that.userElementTypes!= null)&&(!that.userElementTypes.isEmpty()))?that.getUserElementTypes():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "userElementTypes", lhsUserElementTypes), LocatorUtils.property(thatLocator, "userElementTypes", rhsUserElementTypes), lhsUserElementTypes, rhsUserElementTypes, ((this.userElementTypes!= null)&&(!this.userElementTypes.isEmpty())), ((that.userElementTypes!= null)&&(!that.userElementTypes.isEmpty())))) {
                return false;
            }
        }
        {
            Ext lhsExt;
            lhsExt = this.getExt();
            Ext rhsExt;
            rhsExt = that.getExt();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ext", lhsExt), LocatorUtils.property(thatLocator, "ext", rhsExt), lhsExt, rhsExt, (this.ext!= null), (that.ext!= null))) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy2 strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public String toString() {
        final ToStringStrategy2 strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        {
            InitiationHeader theInitiationHeader;
            theInitiationHeader = this.getInitiationHeader();
            strategy.appendField(locator, this, "initiationHeader", buffer, theInitiationHeader, (this.initiationHeader!= null));
        }
        {
            MandatedAction theMandatedAction;
            theMandatedAction = this.getMandatedAction();
            strategy.appendField(locator, this, "mandatedAction", buffer, theMandatedAction, (this.mandatedAction!= null));
        }
        {
            ItemId theItemId;
            theItemId = this.getItemId();
            strategy.appendField(locator, this, "itemId", buffer, theItemId, (this.itemId!= null));
        }
        {
            XMLGregorianCalendar theDesiredDateDue;
            theDesiredDateDue = this.getDesiredDateDue();
            strategy.appendField(locator, this, "desiredDateDue", buffer, theDesiredDateDue, (this.desiredDateDue!= null));
        }
        {
            ShippingInformation theShippingInformation;
            theShippingInformation = this.getShippingInformation();
            strategy.appendField(locator, this, "shippingInformation", buffer, theShippingInformation, (this.shippingInformation!= null));
        }
        {
            List<SchemeValuePair> theItemElementTypes;
            theItemElementTypes = (((this.itemElementTypes!= null)&&(!this.itemElementTypes.isEmpty()))?this.getItemElementTypes():null);
            strategy.appendField(locator, this, "itemElementTypes", buffer, theItemElementTypes, ((this.itemElementTypes!= null)&&(!this.itemElementTypes.isEmpty())));
        }
        {
            List<SchemeValuePair> theUserElementTypes;
            theUserElementTypes = (((this.userElementTypes!= null)&&(!this.userElementTypes.isEmpty()))?this.getUserElementTypes():null);
            strategy.appendField(locator, this, "userElementTypes", buffer, theUserElementTypes, ((this.userElementTypes!= null)&&(!this.userElementTypes.isEmpty())));
        }
        {
            Ext theExt;
            theExt = this.getExt();
            strategy.appendField(locator, this, "ext", buffer, theExt, (this.ext!= null));
        }
        return buffer;
    }

}
