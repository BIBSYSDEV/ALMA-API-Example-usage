//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.03.12 at 09:28:10 AM CET 
//


package no.bibsys.alma.rest.poLine;

import java.io.Serializable;
import java.util.Calendar;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlValue;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import org.jvnet.jaxb2_commons.lang.Equals2;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy2;
import org.jvnet.jaxb2_commons.lang.HashCode2;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy2;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString2;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy2;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;
import org.w3._2001.xmlschema.Adapter2;


/**
 * Specific copy of item in a specific location. 
 * 			
 * 
 * <p>Java class for copy complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="copy"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;all&gt;
 *         &lt;element name="pid" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="holding_id" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="barcode" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="item_policy" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;simpleContent&gt;
 *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
 *                 &lt;attribute name="desc" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *               &lt;/extension&gt;
 *             &lt;/simpleContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *         &lt;element name="receive_date" type="{http://www.w3.org/2001/XMLSchema}date" minOccurs="0"/&gt;
 *         &lt;element name="expected_arrival_date" type="{http://www.w3.org/2001/XMLSchema}date" minOccurs="0"/&gt;
 *         &lt;element name="enumeration_a" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="enumeration_b" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="enumeration_c" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="chronology_i" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="chronology_j" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="chronology_k" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="description" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="storage_location_id" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="is_temp_location" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/&gt;
 *         &lt;element name="permanent_library" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;simpleContent&gt;
 *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
 *                 &lt;attribute name="desc" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *               &lt;/extension&gt;
 *             &lt;/simpleContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *         &lt;element name="permanent_shelving_location" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *       &lt;/all&gt;
 *       &lt;attribute name="link" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "copy", propOrder = {

})
public class Copy implements Serializable, Equals2, HashCode2, ToString2
{

    protected String pid;
    @XmlElement(name = "holding_id")
    protected String holdingId;
    protected String barcode;
    @XmlElement(name = "item_policy")
    protected ItemPolicy itemPolicy;
    @XmlElement(name = "receive_date", type = String.class)
    @XmlJavaTypeAdapter(Adapter2 .class)
    @XmlSchemaType(name = "date")
    protected Calendar receiveDate;
    @XmlElement(name = "expected_arrival_date", type = String.class)
    @XmlJavaTypeAdapter(Adapter2 .class)
    @XmlSchemaType(name = "date")
    protected Calendar expectedArrivalDate;
    @XmlElement(name = "enumeration_a")
    protected String enumerationA;
    @XmlElement(name = "enumeration_b")
    protected String enumerationB;
    @XmlElement(name = "enumeration_c")
    protected String enumerationC;
    @XmlElement(name = "chronology_i")
    protected String chronologyI;
    @XmlElement(name = "chronology_j")
    protected String chronologyJ;
    @XmlElement(name = "chronology_k")
    protected String chronologyK;
    protected String description;
    @XmlElement(name = "storage_location_id")
    protected String storageLocationId;
    @XmlElement(name = "is_temp_location")
    protected Boolean isTempLocation;
    @XmlElement(name = "permanent_library")
    protected PermanentLibrary permanentLibrary;
    @XmlElement(name = "permanent_shelving_location")
    protected String permanentShelvingLocation;
    @XmlAttribute(name = "link")
    protected String link;

    /**
     * Gets the value of the pid property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPid() {
        return pid;
    }

    /**
     * Sets the value of the pid property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPid(String value) {
        this.pid = value;
    }

    /**
     * Gets the value of the holdingId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getHoldingId() {
        return holdingId;
    }

    /**
     * Sets the value of the holdingId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setHoldingId(String value) {
        this.holdingId = value;
    }

    /**
     * Gets the value of the barcode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getBarcode() {
        return barcode;
    }

    /**
     * Sets the value of the barcode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setBarcode(String value) {
        this.barcode = value;
    }

    /**
     * Gets the value of the itemPolicy property.
     * 
     * @return
     *     possible object is
     *     {@link ItemPolicy }
     *     
     */
    public ItemPolicy getItemPolicy() {
        return itemPolicy;
    }

    /**
     * Sets the value of the itemPolicy property.
     * 
     * @param value
     *     allowed object is
     *     {@link ItemPolicy }
     *     
     */
    public void setItemPolicy(ItemPolicy value) {
        this.itemPolicy = value;
    }

    /**
     * Gets the value of the receiveDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public Calendar getReceiveDate() {
        return receiveDate;
    }

    /**
     * Sets the value of the receiveDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setReceiveDate(Calendar value) {
        this.receiveDate = value;
    }

    /**
     * Gets the value of the expectedArrivalDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public Calendar getExpectedArrivalDate() {
        return expectedArrivalDate;
    }

    /**
     * Sets the value of the expectedArrivalDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setExpectedArrivalDate(Calendar value) {
        this.expectedArrivalDate = value;
    }

    /**
     * Gets the value of the enumerationA property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEnumerationA() {
        return enumerationA;
    }

    /**
     * Sets the value of the enumerationA property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEnumerationA(String value) {
        this.enumerationA = value;
    }

    /**
     * Gets the value of the enumerationB property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEnumerationB() {
        return enumerationB;
    }

    /**
     * Sets the value of the enumerationB property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEnumerationB(String value) {
        this.enumerationB = value;
    }

    /**
     * Gets the value of the enumerationC property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEnumerationC() {
        return enumerationC;
    }

    /**
     * Sets the value of the enumerationC property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEnumerationC(String value) {
        this.enumerationC = value;
    }

    /**
     * Gets the value of the chronologyI property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getChronologyI() {
        return chronologyI;
    }

    /**
     * Sets the value of the chronologyI property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setChronologyI(String value) {
        this.chronologyI = value;
    }

    /**
     * Gets the value of the chronologyJ property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getChronologyJ() {
        return chronologyJ;
    }

    /**
     * Sets the value of the chronologyJ property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setChronologyJ(String value) {
        this.chronologyJ = value;
    }

    /**
     * Gets the value of the chronologyK property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getChronologyK() {
        return chronologyK;
    }

    /**
     * Sets the value of the chronologyK property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setChronologyK(String value) {
        this.chronologyK = value;
    }

    /**
     * Gets the value of the description property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDescription() {
        return description;
    }

    /**
     * Sets the value of the description property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDescription(String value) {
        this.description = value;
    }

    /**
     * Gets the value of the storageLocationId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getStorageLocationId() {
        return storageLocationId;
    }

    /**
     * Sets the value of the storageLocationId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setStorageLocationId(String value) {
        this.storageLocationId = value;
    }

    /**
     * Gets the value of the isTempLocation property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isIsTempLocation() {
        return isTempLocation;
    }

    /**
     * Sets the value of the isTempLocation property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setIsTempLocation(Boolean value) {
        this.isTempLocation = value;
    }

    /**
     * Gets the value of the permanentLibrary property.
     * 
     * @return
     *     possible object is
     *     {@link PermanentLibrary }
     *     
     */
    public PermanentLibrary getPermanentLibrary() {
        return permanentLibrary;
    }

    /**
     * Sets the value of the permanentLibrary property.
     * 
     * @param value
     *     allowed object is
     *     {@link PermanentLibrary }
     *     
     */
    public void setPermanentLibrary(PermanentLibrary value) {
        this.permanentLibrary = value;
    }

    /**
     * Gets the value of the permanentShelvingLocation property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPermanentShelvingLocation() {
        return permanentShelvingLocation;
    }

    /**
     * Sets the value of the permanentShelvingLocation property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPermanentShelvingLocation(String value) {
        this.permanentShelvingLocation = value;
    }

    /**
     * Gets the value of the link property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLink() {
        return link;
    }

    /**
     * Sets the value of the link property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLink(String value) {
        this.link = value;
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy2 strategy) {
        int currentHashCode = 1;
        {
            String thePid;
            thePid = this.getPid();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "pid", thePid), currentHashCode, thePid, (this.pid!= null));
        }
        {
            String theHoldingId;
            theHoldingId = this.getHoldingId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "holdingId", theHoldingId), currentHashCode, theHoldingId, (this.holdingId!= null));
        }
        {
            String theBarcode;
            theBarcode = this.getBarcode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "barcode", theBarcode), currentHashCode, theBarcode, (this.barcode!= null));
        }
        {
            ItemPolicy theItemPolicy;
            theItemPolicy = this.getItemPolicy();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "itemPolicy", theItemPolicy), currentHashCode, theItemPolicy, (this.itemPolicy!= null));
        }
        {
            Calendar theReceiveDate;
            theReceiveDate = this.getReceiveDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "receiveDate", theReceiveDate), currentHashCode, theReceiveDate, (this.receiveDate!= null));
        }
        {
            Calendar theExpectedArrivalDate;
            theExpectedArrivalDate = this.getExpectedArrivalDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "expectedArrivalDate", theExpectedArrivalDate), currentHashCode, theExpectedArrivalDate, (this.expectedArrivalDate!= null));
        }
        {
            String theEnumerationA;
            theEnumerationA = this.getEnumerationA();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "enumerationA", theEnumerationA), currentHashCode, theEnumerationA, (this.enumerationA!= null));
        }
        {
            String theEnumerationB;
            theEnumerationB = this.getEnumerationB();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "enumerationB", theEnumerationB), currentHashCode, theEnumerationB, (this.enumerationB!= null));
        }
        {
            String theEnumerationC;
            theEnumerationC = this.getEnumerationC();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "enumerationC", theEnumerationC), currentHashCode, theEnumerationC, (this.enumerationC!= null));
        }
        {
            String theChronologyI;
            theChronologyI = this.getChronologyI();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "chronologyI", theChronologyI), currentHashCode, theChronologyI, (this.chronologyI!= null));
        }
        {
            String theChronologyJ;
            theChronologyJ = this.getChronologyJ();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "chronologyJ", theChronologyJ), currentHashCode, theChronologyJ, (this.chronologyJ!= null));
        }
        {
            String theChronologyK;
            theChronologyK = this.getChronologyK();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "chronologyK", theChronologyK), currentHashCode, theChronologyK, (this.chronologyK!= null));
        }
        {
            String theDescription;
            theDescription = this.getDescription();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "description", theDescription), currentHashCode, theDescription, (this.description!= null));
        }
        {
            String theStorageLocationId;
            theStorageLocationId = this.getStorageLocationId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "storageLocationId", theStorageLocationId), currentHashCode, theStorageLocationId, (this.storageLocationId!= null));
        }
        {
            Boolean theIsTempLocation;
            theIsTempLocation = this.isIsTempLocation();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "isTempLocation", theIsTempLocation), currentHashCode, theIsTempLocation, (this.isTempLocation!= null));
        }
        {
            PermanentLibrary thePermanentLibrary;
            thePermanentLibrary = this.getPermanentLibrary();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "permanentLibrary", thePermanentLibrary), currentHashCode, thePermanentLibrary, (this.permanentLibrary!= null));
        }
        {
            String thePermanentShelvingLocation;
            thePermanentShelvingLocation = this.getPermanentShelvingLocation();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "permanentShelvingLocation", thePermanentShelvingLocation), currentHashCode, thePermanentShelvingLocation, (this.permanentShelvingLocation!= null));
        }
        {
            String theLink;
            theLink = this.getLink();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "link", theLink), currentHashCode, theLink, (this.link!= null));
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy2 strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy2 strategy) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final Copy that = ((Copy) object);
        {
            String lhsPid;
            lhsPid = this.getPid();
            String rhsPid;
            rhsPid = that.getPid();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "pid", lhsPid), LocatorUtils.property(thatLocator, "pid", rhsPid), lhsPid, rhsPid, (this.pid!= null), (that.pid!= null))) {
                return false;
            }
        }
        {
            String lhsHoldingId;
            lhsHoldingId = this.getHoldingId();
            String rhsHoldingId;
            rhsHoldingId = that.getHoldingId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "holdingId", lhsHoldingId), LocatorUtils.property(thatLocator, "holdingId", rhsHoldingId), lhsHoldingId, rhsHoldingId, (this.holdingId!= null), (that.holdingId!= null))) {
                return false;
            }
        }
        {
            String lhsBarcode;
            lhsBarcode = this.getBarcode();
            String rhsBarcode;
            rhsBarcode = that.getBarcode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "barcode", lhsBarcode), LocatorUtils.property(thatLocator, "barcode", rhsBarcode), lhsBarcode, rhsBarcode, (this.barcode!= null), (that.barcode!= null))) {
                return false;
            }
        }
        {
            ItemPolicy lhsItemPolicy;
            lhsItemPolicy = this.getItemPolicy();
            ItemPolicy rhsItemPolicy;
            rhsItemPolicy = that.getItemPolicy();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "itemPolicy", lhsItemPolicy), LocatorUtils.property(thatLocator, "itemPolicy", rhsItemPolicy), lhsItemPolicy, rhsItemPolicy, (this.itemPolicy!= null), (that.itemPolicy!= null))) {
                return false;
            }
        }
        {
            Calendar lhsReceiveDate;
            lhsReceiveDate = this.getReceiveDate();
            Calendar rhsReceiveDate;
            rhsReceiveDate = that.getReceiveDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "receiveDate", lhsReceiveDate), LocatorUtils.property(thatLocator, "receiveDate", rhsReceiveDate), lhsReceiveDate, rhsReceiveDate, (this.receiveDate!= null), (that.receiveDate!= null))) {
                return false;
            }
        }
        {
            Calendar lhsExpectedArrivalDate;
            lhsExpectedArrivalDate = this.getExpectedArrivalDate();
            Calendar rhsExpectedArrivalDate;
            rhsExpectedArrivalDate = that.getExpectedArrivalDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "expectedArrivalDate", lhsExpectedArrivalDate), LocatorUtils.property(thatLocator, "expectedArrivalDate", rhsExpectedArrivalDate), lhsExpectedArrivalDate, rhsExpectedArrivalDate, (this.expectedArrivalDate!= null), (that.expectedArrivalDate!= null))) {
                return false;
            }
        }
        {
            String lhsEnumerationA;
            lhsEnumerationA = this.getEnumerationA();
            String rhsEnumerationA;
            rhsEnumerationA = that.getEnumerationA();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "enumerationA", lhsEnumerationA), LocatorUtils.property(thatLocator, "enumerationA", rhsEnumerationA), lhsEnumerationA, rhsEnumerationA, (this.enumerationA!= null), (that.enumerationA!= null))) {
                return false;
            }
        }
        {
            String lhsEnumerationB;
            lhsEnumerationB = this.getEnumerationB();
            String rhsEnumerationB;
            rhsEnumerationB = that.getEnumerationB();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "enumerationB", lhsEnumerationB), LocatorUtils.property(thatLocator, "enumerationB", rhsEnumerationB), lhsEnumerationB, rhsEnumerationB, (this.enumerationB!= null), (that.enumerationB!= null))) {
                return false;
            }
        }
        {
            String lhsEnumerationC;
            lhsEnumerationC = this.getEnumerationC();
            String rhsEnumerationC;
            rhsEnumerationC = that.getEnumerationC();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "enumerationC", lhsEnumerationC), LocatorUtils.property(thatLocator, "enumerationC", rhsEnumerationC), lhsEnumerationC, rhsEnumerationC, (this.enumerationC!= null), (that.enumerationC!= null))) {
                return false;
            }
        }
        {
            String lhsChronologyI;
            lhsChronologyI = this.getChronologyI();
            String rhsChronologyI;
            rhsChronologyI = that.getChronologyI();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "chronologyI", lhsChronologyI), LocatorUtils.property(thatLocator, "chronologyI", rhsChronologyI), lhsChronologyI, rhsChronologyI, (this.chronologyI!= null), (that.chronologyI!= null))) {
                return false;
            }
        }
        {
            String lhsChronologyJ;
            lhsChronologyJ = this.getChronologyJ();
            String rhsChronologyJ;
            rhsChronologyJ = that.getChronologyJ();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "chronologyJ", lhsChronologyJ), LocatorUtils.property(thatLocator, "chronologyJ", rhsChronologyJ), lhsChronologyJ, rhsChronologyJ, (this.chronologyJ!= null), (that.chronologyJ!= null))) {
                return false;
            }
        }
        {
            String lhsChronologyK;
            lhsChronologyK = this.getChronologyK();
            String rhsChronologyK;
            rhsChronologyK = that.getChronologyK();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "chronologyK", lhsChronologyK), LocatorUtils.property(thatLocator, "chronologyK", rhsChronologyK), lhsChronologyK, rhsChronologyK, (this.chronologyK!= null), (that.chronologyK!= null))) {
                return false;
            }
        }
        {
            String lhsDescription;
            lhsDescription = this.getDescription();
            String rhsDescription;
            rhsDescription = that.getDescription();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "description", lhsDescription), LocatorUtils.property(thatLocator, "description", rhsDescription), lhsDescription, rhsDescription, (this.description!= null), (that.description!= null))) {
                return false;
            }
        }
        {
            String lhsStorageLocationId;
            lhsStorageLocationId = this.getStorageLocationId();
            String rhsStorageLocationId;
            rhsStorageLocationId = that.getStorageLocationId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "storageLocationId", lhsStorageLocationId), LocatorUtils.property(thatLocator, "storageLocationId", rhsStorageLocationId), lhsStorageLocationId, rhsStorageLocationId, (this.storageLocationId!= null), (that.storageLocationId!= null))) {
                return false;
            }
        }
        {
            Boolean lhsIsTempLocation;
            lhsIsTempLocation = this.isIsTempLocation();
            Boolean rhsIsTempLocation;
            rhsIsTempLocation = that.isIsTempLocation();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "isTempLocation", lhsIsTempLocation), LocatorUtils.property(thatLocator, "isTempLocation", rhsIsTempLocation), lhsIsTempLocation, rhsIsTempLocation, (this.isTempLocation!= null), (that.isTempLocation!= null))) {
                return false;
            }
        }
        {
            PermanentLibrary lhsPermanentLibrary;
            lhsPermanentLibrary = this.getPermanentLibrary();
            PermanentLibrary rhsPermanentLibrary;
            rhsPermanentLibrary = that.getPermanentLibrary();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "permanentLibrary", lhsPermanentLibrary), LocatorUtils.property(thatLocator, "permanentLibrary", rhsPermanentLibrary), lhsPermanentLibrary, rhsPermanentLibrary, (this.permanentLibrary!= null), (that.permanentLibrary!= null))) {
                return false;
            }
        }
        {
            String lhsPermanentShelvingLocation;
            lhsPermanentShelvingLocation = this.getPermanentShelvingLocation();
            String rhsPermanentShelvingLocation;
            rhsPermanentShelvingLocation = that.getPermanentShelvingLocation();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "permanentShelvingLocation", lhsPermanentShelvingLocation), LocatorUtils.property(thatLocator, "permanentShelvingLocation", rhsPermanentShelvingLocation), lhsPermanentShelvingLocation, rhsPermanentShelvingLocation, (this.permanentShelvingLocation!= null), (that.permanentShelvingLocation!= null))) {
                return false;
            }
        }
        {
            String lhsLink;
            lhsLink = this.getLink();
            String rhsLink;
            rhsLink = that.getLink();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "link", lhsLink), LocatorUtils.property(thatLocator, "link", rhsLink), lhsLink, rhsLink, (this.link!= null), (that.link!= null))) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy2 strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public String toString() {
        final ToStringStrategy2 strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        {
            String thePid;
            thePid = this.getPid();
            strategy.appendField(locator, this, "pid", buffer, thePid, (this.pid!= null));
        }
        {
            String theHoldingId;
            theHoldingId = this.getHoldingId();
            strategy.appendField(locator, this, "holdingId", buffer, theHoldingId, (this.holdingId!= null));
        }
        {
            String theBarcode;
            theBarcode = this.getBarcode();
            strategy.appendField(locator, this, "barcode", buffer, theBarcode, (this.barcode!= null));
        }
        {
            ItemPolicy theItemPolicy;
            theItemPolicy = this.getItemPolicy();
            strategy.appendField(locator, this, "itemPolicy", buffer, theItemPolicy, (this.itemPolicy!= null));
        }
        {
            Calendar theReceiveDate;
            theReceiveDate = this.getReceiveDate();
            strategy.appendField(locator, this, "receiveDate", buffer, theReceiveDate, (this.receiveDate!= null));
        }
        {
            Calendar theExpectedArrivalDate;
            theExpectedArrivalDate = this.getExpectedArrivalDate();
            strategy.appendField(locator, this, "expectedArrivalDate", buffer, theExpectedArrivalDate, (this.expectedArrivalDate!= null));
        }
        {
            String theEnumerationA;
            theEnumerationA = this.getEnumerationA();
            strategy.appendField(locator, this, "enumerationA", buffer, theEnumerationA, (this.enumerationA!= null));
        }
        {
            String theEnumerationB;
            theEnumerationB = this.getEnumerationB();
            strategy.appendField(locator, this, "enumerationB", buffer, theEnumerationB, (this.enumerationB!= null));
        }
        {
            String theEnumerationC;
            theEnumerationC = this.getEnumerationC();
            strategy.appendField(locator, this, "enumerationC", buffer, theEnumerationC, (this.enumerationC!= null));
        }
        {
            String theChronologyI;
            theChronologyI = this.getChronologyI();
            strategy.appendField(locator, this, "chronologyI", buffer, theChronologyI, (this.chronologyI!= null));
        }
        {
            String theChronologyJ;
            theChronologyJ = this.getChronologyJ();
            strategy.appendField(locator, this, "chronologyJ", buffer, theChronologyJ, (this.chronologyJ!= null));
        }
        {
            String theChronologyK;
            theChronologyK = this.getChronologyK();
            strategy.appendField(locator, this, "chronologyK", buffer, theChronologyK, (this.chronologyK!= null));
        }
        {
            String theDescription;
            theDescription = this.getDescription();
            strategy.appendField(locator, this, "description", buffer, theDescription, (this.description!= null));
        }
        {
            String theStorageLocationId;
            theStorageLocationId = this.getStorageLocationId();
            strategy.appendField(locator, this, "storageLocationId", buffer, theStorageLocationId, (this.storageLocationId!= null));
        }
        {
            Boolean theIsTempLocation;
            theIsTempLocation = this.isIsTempLocation();
            strategy.appendField(locator, this, "isTempLocation", buffer, theIsTempLocation, (this.isTempLocation!= null));
        }
        {
            PermanentLibrary thePermanentLibrary;
            thePermanentLibrary = this.getPermanentLibrary();
            strategy.appendField(locator, this, "permanentLibrary", buffer, thePermanentLibrary, (this.permanentLibrary!= null));
        }
        {
            String thePermanentShelvingLocation;
            thePermanentShelvingLocation = this.getPermanentShelvingLocation();
            strategy.appendField(locator, this, "permanentShelvingLocation", buffer, thePermanentShelvingLocation, (this.permanentShelvingLocation!= null));
        }
        {
            String theLink;
            theLink = this.getLink();
            strategy.appendField(locator, this, "link", buffer, theLink, (this.link!= null));
        }
        return buffer;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;simpleContent&gt;
     *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
     *       &lt;attribute name="desc" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
     *     &lt;/extension&gt;
     *   &lt;/simpleContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "value"
    })
    public static class ItemPolicy implements Serializable, Equals2, HashCode2, ToString2
    {

        @XmlValue
        protected String value;
        @XmlAttribute(name = "desc")
        protected String desc;

        /**
         * Gets the value of the value property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getValue() {
            return value;
        }

        /**
         * Sets the value of the value property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setValue(String value) {
            this.value = value;
        }

        /**
         * Gets the value of the desc property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getDesc() {
            return desc;
        }

        /**
         * Sets the value of the desc property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setDesc(String value) {
            this.desc = value;
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy2 strategy) {
            int currentHashCode = 1;
            {
                String theValue;
                theValue = this.getValue();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "value", theValue), currentHashCode, theValue, (this.value!= null));
            }
            {
                String theDesc;
                theDesc = this.getDesc();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "desc", theDesc), currentHashCode, theDesc, (this.desc!= null));
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy2 strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy2 strategy) {
            if ((object == null)||(this.getClass()!= object.getClass())) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final ItemPolicy that = ((ItemPolicy) object);
            {
                String lhsValue;
                lhsValue = this.getValue();
                String rhsValue;
                rhsValue = that.getValue();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "value", lhsValue), LocatorUtils.property(thatLocator, "value", rhsValue), lhsValue, rhsValue, (this.value!= null), (that.value!= null))) {
                    return false;
                }
            }
            {
                String lhsDesc;
                lhsDesc = this.getDesc();
                String rhsDesc;
                rhsDesc = that.getDesc();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "desc", lhsDesc), LocatorUtils.property(thatLocator, "desc", rhsDesc), lhsDesc, rhsDesc, (this.desc!= null), (that.desc!= null))) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy2 strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public String toString() {
            final ToStringStrategy2 strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            {
                String theValue;
                theValue = this.getValue();
                strategy.appendField(locator, this, "value", buffer, theValue, (this.value!= null));
            }
            {
                String theDesc;
                theDesc = this.getDesc();
                strategy.appendField(locator, this, "desc", buffer, theDesc, (this.desc!= null));
            }
            return buffer;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;simpleContent&gt;
     *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
     *       &lt;attribute name="desc" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
     *     &lt;/extension&gt;
     *   &lt;/simpleContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "value"
    })
    public static class PermanentLibrary implements Serializable, Equals2, HashCode2, ToString2
    {

        @XmlValue
        protected String value;
        @XmlAttribute(name = "desc")
        protected String desc;

        /**
         * Gets the value of the value property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getValue() {
            return value;
        }

        /**
         * Sets the value of the value property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setValue(String value) {
            this.value = value;
        }

        /**
         * Gets the value of the desc property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getDesc() {
            return desc;
        }

        /**
         * Sets the value of the desc property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setDesc(String value) {
            this.desc = value;
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy2 strategy) {
            int currentHashCode = 1;
            {
                String theValue;
                theValue = this.getValue();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "value", theValue), currentHashCode, theValue, (this.value!= null));
            }
            {
                String theDesc;
                theDesc = this.getDesc();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "desc", theDesc), currentHashCode, theDesc, (this.desc!= null));
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy2 strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy2 strategy) {
            if ((object == null)||(this.getClass()!= object.getClass())) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final PermanentLibrary that = ((PermanentLibrary) object);
            {
                String lhsValue;
                lhsValue = this.getValue();
                String rhsValue;
                rhsValue = that.getValue();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "value", lhsValue), LocatorUtils.property(thatLocator, "value", rhsValue), lhsValue, rhsValue, (this.value!= null), (that.value!= null))) {
                    return false;
                }
            }
            {
                String lhsDesc;
                lhsDesc = this.getDesc();
                String rhsDesc;
                rhsDesc = that.getDesc();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "desc", lhsDesc), LocatorUtils.property(thatLocator, "desc", rhsDesc), lhsDesc, rhsDesc, (this.desc!= null), (that.desc!= null))) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy2 strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public String toString() {
            final ToStringStrategy2 strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            {
                String theValue;
                theValue = this.getValue();
                strategy.appendField(locator, this, "value", buffer, theValue, (this.value!= null));
            }
            {
                String theDesc;
                theDesc = this.getDesc();
                strategy.appendField(locator, this, "desc", buffer, theDesc, (this.desc!= null));
            }
            return buffer;
        }

    }

}
