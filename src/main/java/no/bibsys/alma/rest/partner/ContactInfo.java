//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.03.12 at 09:28:09 AM CET 
//


package no.bibsys.alma.rest.partner;

import java.io.Serializable;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals2;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy2;
import org.jvnet.jaxb2_commons.lang.HashCode2;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy2;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString2;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy2;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * List of the contact information. In the PUT action, this list will replace the existing contacts.
 * 
 * <p>Java class for contact_info complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="contact_info"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;all&gt;
 *         &lt;element name="addresses" type="{}addresses" minOccurs="0"/&gt;
 *         &lt;element name="phones" type="{}phones" minOccurs="0"/&gt;
 *         &lt;element name="emails" type="{}emails" minOccurs="0"/&gt;
 *       &lt;/all&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "contact_info", propOrder = {

})
public class ContactInfo implements Serializable, Equals2, HashCode2, ToString2
{

    protected Addresses addresses;
    protected Phones phones;
    protected Emails emails;

    /**
     * Gets the value of the addresses property.
     * 
     * @return
     *     possible object is
     *     {@link Addresses }
     *     
     */
    public Addresses getAddresses() {
        return addresses;
    }

    /**
     * Sets the value of the addresses property.
     * 
     * @param value
     *     allowed object is
     *     {@link Addresses }
     *     
     */
    public void setAddresses(Addresses value) {
        this.addresses = value;
    }

    /**
     * Gets the value of the phones property.
     * 
     * @return
     *     possible object is
     *     {@link Phones }
     *     
     */
    public Phones getPhones() {
        return phones;
    }

    /**
     * Sets the value of the phones property.
     * 
     * @param value
     *     allowed object is
     *     {@link Phones }
     *     
     */
    public void setPhones(Phones value) {
        this.phones = value;
    }

    /**
     * Gets the value of the emails property.
     * 
     * @return
     *     possible object is
     *     {@link Emails }
     *     
     */
    public Emails getEmails() {
        return emails;
    }

    /**
     * Sets the value of the emails property.
     * 
     * @param value
     *     allowed object is
     *     {@link Emails }
     *     
     */
    public void setEmails(Emails value) {
        this.emails = value;
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy2 strategy) {
        int currentHashCode = 1;
        {
            Addresses theAddresses;
            theAddresses = this.getAddresses();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "addresses", theAddresses), currentHashCode, theAddresses, (this.addresses!= null));
        }
        {
            Phones thePhones;
            thePhones = this.getPhones();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "phones", thePhones), currentHashCode, thePhones, (this.phones!= null));
        }
        {
            Emails theEmails;
            theEmails = this.getEmails();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "emails", theEmails), currentHashCode, theEmails, (this.emails!= null));
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy2 strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy2 strategy) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final ContactInfo that = ((ContactInfo) object);
        {
            Addresses lhsAddresses;
            lhsAddresses = this.getAddresses();
            Addresses rhsAddresses;
            rhsAddresses = that.getAddresses();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "addresses", lhsAddresses), LocatorUtils.property(thatLocator, "addresses", rhsAddresses), lhsAddresses, rhsAddresses, (this.addresses!= null), (that.addresses!= null))) {
                return false;
            }
        }
        {
            Phones lhsPhones;
            lhsPhones = this.getPhones();
            Phones rhsPhones;
            rhsPhones = that.getPhones();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "phones", lhsPhones), LocatorUtils.property(thatLocator, "phones", rhsPhones), lhsPhones, rhsPhones, (this.phones!= null), (that.phones!= null))) {
                return false;
            }
        }
        {
            Emails lhsEmails;
            lhsEmails = this.getEmails();
            Emails rhsEmails;
            rhsEmails = that.getEmails();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "emails", lhsEmails), LocatorUtils.property(thatLocator, "emails", rhsEmails), lhsEmails, rhsEmails, (this.emails!= null), (that.emails!= null))) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy2 strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public String toString() {
        final ToStringStrategy2 strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        {
            Addresses theAddresses;
            theAddresses = this.getAddresses();
            strategy.appendField(locator, this, "addresses", buffer, theAddresses, (this.addresses!= null));
        }
        {
            Phones thePhones;
            thePhones = this.getPhones();
            strategy.appendField(locator, this, "phones", buffer, thePhones, (this.phones!= null));
        }
        {
            Emails theEmails;
            theEmails = this.getEmails();
            strategy.appendField(locator, this, "emails", buffer, theEmails, (this.emails!= null));
        }
        return buffer;
    }

}
