//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.03.12 at 09:28:09 AM CET 
//


package no.bibsys.alma.rest.partner;

import java.io.Serializable;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals2;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy2;
import org.jvnet.jaxb2_commons.lang.HashCode2;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy2;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString2;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy2;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * RapidILL related details. Relevant and mandatory only if profile_type = RapidILL.
 * 
 * <p>Java class for rapid_details complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="rapid_details"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;all&gt;
 *         &lt;element name="rapid_url" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="rapid_user_name" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="rapid_password" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="requesting_rapid_code" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="rapid_requesting_branch_name" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="send_requester_info" type="{http://www.w3.org/2001/XMLSchema}boolean"/&gt;
 *         &lt;element name="alternative_document_delivery" type="{http://www.w3.org/2001/XMLSchema}boolean"/&gt;
 *         &lt;element name="close_request_on_export" type="{http://www.w3.org/2001/XMLSchema}boolean"/&gt;
 *       &lt;/all&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "rapid_details", propOrder = {

})
public class RapidDetails implements Serializable, Equals2, HashCode2, ToString2
{

    @XmlElement(name = "rapid_url", required = true)
    protected String rapidUrl;
    @XmlElement(name = "rapid_user_name", required = true)
    protected String rapidUserName;
    @XmlElement(name = "rapid_password", required = true)
    protected String rapidPassword;
    @XmlElement(name = "requesting_rapid_code", required = true)
    protected String requestingRapidCode;
    @XmlElement(name = "rapid_requesting_branch_name", required = true)
    protected String rapidRequestingBranchName;
    @XmlElement(name = "send_requester_info", defaultValue = "false")
    protected boolean sendRequesterInfo;
    @XmlElement(name = "alternative_document_delivery", defaultValue = "false")
    protected boolean alternativeDocumentDelivery;
    @XmlElement(name = "close_request_on_export", defaultValue = "true")
    protected boolean closeRequestOnExport;

    /**
     * Gets the value of the rapidUrl property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRapidUrl() {
        return rapidUrl;
    }

    /**
     * Sets the value of the rapidUrl property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRapidUrl(String value) {
        this.rapidUrl = value;
    }

    /**
     * Gets the value of the rapidUserName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRapidUserName() {
        return rapidUserName;
    }

    /**
     * Sets the value of the rapidUserName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRapidUserName(String value) {
        this.rapidUserName = value;
    }

    /**
     * Gets the value of the rapidPassword property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRapidPassword() {
        return rapidPassword;
    }

    /**
     * Sets the value of the rapidPassword property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRapidPassword(String value) {
        this.rapidPassword = value;
    }

    /**
     * Gets the value of the requestingRapidCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRequestingRapidCode() {
        return requestingRapidCode;
    }

    /**
     * Sets the value of the requestingRapidCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRequestingRapidCode(String value) {
        this.requestingRapidCode = value;
    }

    /**
     * Gets the value of the rapidRequestingBranchName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRapidRequestingBranchName() {
        return rapidRequestingBranchName;
    }

    /**
     * Sets the value of the rapidRequestingBranchName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRapidRequestingBranchName(String value) {
        this.rapidRequestingBranchName = value;
    }

    /**
     * Gets the value of the sendRequesterInfo property.
     * 
     */
    public boolean isSendRequesterInfo() {
        return sendRequesterInfo;
    }

    /**
     * Sets the value of the sendRequesterInfo property.
     * 
     */
    public void setSendRequesterInfo(boolean value) {
        this.sendRequesterInfo = value;
    }

    /**
     * Gets the value of the alternativeDocumentDelivery property.
     * 
     */
    public boolean isAlternativeDocumentDelivery() {
        return alternativeDocumentDelivery;
    }

    /**
     * Sets the value of the alternativeDocumentDelivery property.
     * 
     */
    public void setAlternativeDocumentDelivery(boolean value) {
        this.alternativeDocumentDelivery = value;
    }

    /**
     * Gets the value of the closeRequestOnExport property.
     * 
     */
    public boolean isCloseRequestOnExport() {
        return closeRequestOnExport;
    }

    /**
     * Sets the value of the closeRequestOnExport property.
     * 
     */
    public void setCloseRequestOnExport(boolean value) {
        this.closeRequestOnExport = value;
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy2 strategy) {
        int currentHashCode = 1;
        {
            String theRapidUrl;
            theRapidUrl = this.getRapidUrl();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "rapidUrl", theRapidUrl), currentHashCode, theRapidUrl, (this.rapidUrl!= null));
        }
        {
            String theRapidUserName;
            theRapidUserName = this.getRapidUserName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "rapidUserName", theRapidUserName), currentHashCode, theRapidUserName, (this.rapidUserName!= null));
        }
        {
            String theRapidPassword;
            theRapidPassword = this.getRapidPassword();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "rapidPassword", theRapidPassword), currentHashCode, theRapidPassword, (this.rapidPassword!= null));
        }
        {
            String theRequestingRapidCode;
            theRequestingRapidCode = this.getRequestingRapidCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "requestingRapidCode", theRequestingRapidCode), currentHashCode, theRequestingRapidCode, (this.requestingRapidCode!= null));
        }
        {
            String theRapidRequestingBranchName;
            theRapidRequestingBranchName = this.getRapidRequestingBranchName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "rapidRequestingBranchName", theRapidRequestingBranchName), currentHashCode, theRapidRequestingBranchName, (this.rapidRequestingBranchName!= null));
        }
        {
            boolean theSendRequesterInfo;
            theSendRequesterInfo = this.isSendRequesterInfo();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "sendRequesterInfo", theSendRequesterInfo), currentHashCode, theSendRequesterInfo, true);
        }
        {
            boolean theAlternativeDocumentDelivery;
            theAlternativeDocumentDelivery = this.isAlternativeDocumentDelivery();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "alternativeDocumentDelivery", theAlternativeDocumentDelivery), currentHashCode, theAlternativeDocumentDelivery, true);
        }
        {
            boolean theCloseRequestOnExport;
            theCloseRequestOnExport = this.isCloseRequestOnExport();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "closeRequestOnExport", theCloseRequestOnExport), currentHashCode, theCloseRequestOnExport, true);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy2 strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy2 strategy) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final RapidDetails that = ((RapidDetails) object);
        {
            String lhsRapidUrl;
            lhsRapidUrl = this.getRapidUrl();
            String rhsRapidUrl;
            rhsRapidUrl = that.getRapidUrl();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "rapidUrl", lhsRapidUrl), LocatorUtils.property(thatLocator, "rapidUrl", rhsRapidUrl), lhsRapidUrl, rhsRapidUrl, (this.rapidUrl!= null), (that.rapidUrl!= null))) {
                return false;
            }
        }
        {
            String lhsRapidUserName;
            lhsRapidUserName = this.getRapidUserName();
            String rhsRapidUserName;
            rhsRapidUserName = that.getRapidUserName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "rapidUserName", lhsRapidUserName), LocatorUtils.property(thatLocator, "rapidUserName", rhsRapidUserName), lhsRapidUserName, rhsRapidUserName, (this.rapidUserName!= null), (that.rapidUserName!= null))) {
                return false;
            }
        }
        {
            String lhsRapidPassword;
            lhsRapidPassword = this.getRapidPassword();
            String rhsRapidPassword;
            rhsRapidPassword = that.getRapidPassword();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "rapidPassword", lhsRapidPassword), LocatorUtils.property(thatLocator, "rapidPassword", rhsRapidPassword), lhsRapidPassword, rhsRapidPassword, (this.rapidPassword!= null), (that.rapidPassword!= null))) {
                return false;
            }
        }
        {
            String lhsRequestingRapidCode;
            lhsRequestingRapidCode = this.getRequestingRapidCode();
            String rhsRequestingRapidCode;
            rhsRequestingRapidCode = that.getRequestingRapidCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "requestingRapidCode", lhsRequestingRapidCode), LocatorUtils.property(thatLocator, "requestingRapidCode", rhsRequestingRapidCode), lhsRequestingRapidCode, rhsRequestingRapidCode, (this.requestingRapidCode!= null), (that.requestingRapidCode!= null))) {
                return false;
            }
        }
        {
            String lhsRapidRequestingBranchName;
            lhsRapidRequestingBranchName = this.getRapidRequestingBranchName();
            String rhsRapidRequestingBranchName;
            rhsRapidRequestingBranchName = that.getRapidRequestingBranchName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "rapidRequestingBranchName", lhsRapidRequestingBranchName), LocatorUtils.property(thatLocator, "rapidRequestingBranchName", rhsRapidRequestingBranchName), lhsRapidRequestingBranchName, rhsRapidRequestingBranchName, (this.rapidRequestingBranchName!= null), (that.rapidRequestingBranchName!= null))) {
                return false;
            }
        }
        {
            boolean lhsSendRequesterInfo;
            lhsSendRequesterInfo = this.isSendRequesterInfo();
            boolean rhsSendRequesterInfo;
            rhsSendRequesterInfo = that.isSendRequesterInfo();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "sendRequesterInfo", lhsSendRequesterInfo), LocatorUtils.property(thatLocator, "sendRequesterInfo", rhsSendRequesterInfo), lhsSendRequesterInfo, rhsSendRequesterInfo, true, true)) {
                return false;
            }
        }
        {
            boolean lhsAlternativeDocumentDelivery;
            lhsAlternativeDocumentDelivery = this.isAlternativeDocumentDelivery();
            boolean rhsAlternativeDocumentDelivery;
            rhsAlternativeDocumentDelivery = that.isAlternativeDocumentDelivery();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "alternativeDocumentDelivery", lhsAlternativeDocumentDelivery), LocatorUtils.property(thatLocator, "alternativeDocumentDelivery", rhsAlternativeDocumentDelivery), lhsAlternativeDocumentDelivery, rhsAlternativeDocumentDelivery, true, true)) {
                return false;
            }
        }
        {
            boolean lhsCloseRequestOnExport;
            lhsCloseRequestOnExport = this.isCloseRequestOnExport();
            boolean rhsCloseRequestOnExport;
            rhsCloseRequestOnExport = that.isCloseRequestOnExport();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "closeRequestOnExport", lhsCloseRequestOnExport), LocatorUtils.property(thatLocator, "closeRequestOnExport", rhsCloseRequestOnExport), lhsCloseRequestOnExport, rhsCloseRequestOnExport, true, true)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy2 strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public String toString() {
        final ToStringStrategy2 strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        {
            String theRapidUrl;
            theRapidUrl = this.getRapidUrl();
            strategy.appendField(locator, this, "rapidUrl", buffer, theRapidUrl, (this.rapidUrl!= null));
        }
        {
            String theRapidUserName;
            theRapidUserName = this.getRapidUserName();
            strategy.appendField(locator, this, "rapidUserName", buffer, theRapidUserName, (this.rapidUserName!= null));
        }
        {
            String theRapidPassword;
            theRapidPassword = this.getRapidPassword();
            strategy.appendField(locator, this, "rapidPassword", buffer, theRapidPassword, (this.rapidPassword!= null));
        }
        {
            String theRequestingRapidCode;
            theRequestingRapidCode = this.getRequestingRapidCode();
            strategy.appendField(locator, this, "requestingRapidCode", buffer, theRequestingRapidCode, (this.requestingRapidCode!= null));
        }
        {
            String theRapidRequestingBranchName;
            theRapidRequestingBranchName = this.getRapidRequestingBranchName();
            strategy.appendField(locator, this, "rapidRequestingBranchName", buffer, theRapidRequestingBranchName, (this.rapidRequestingBranchName!= null));
        }
        {
            boolean theSendRequesterInfo;
            theSendRequesterInfo = this.isSendRequesterInfo();
            strategy.appendField(locator, this, "sendRequesterInfo", buffer, theSendRequesterInfo, true);
        }
        {
            boolean theAlternativeDocumentDelivery;
            theAlternativeDocumentDelivery = this.isAlternativeDocumentDelivery();
            strategy.appendField(locator, this, "alternativeDocumentDelivery", buffer, theAlternativeDocumentDelivery, true);
        }
        {
            boolean theCloseRequestOnExport;
            theCloseRequestOnExport = this.isCloseRequestOnExport();
            strategy.appendField(locator, this, "closeRequestOnExport", buffer, theCloseRequestOnExport, true);
        }
        return buffer;
    }

}
