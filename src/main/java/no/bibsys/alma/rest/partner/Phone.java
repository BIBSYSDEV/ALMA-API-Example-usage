//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.03.12 at 09:28:09 AM CET 
//


package no.bibsys.alma.rest.partner;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals2;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy2;
import org.jvnet.jaxb2_commons.lang.HashCode2;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy2;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString2;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy2;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * A contact's specific phone number.
 * 
 * <p>Java class for phone complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="phone"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;all&gt;
 *         &lt;element name="phone_number" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="phone_types"&gt;
 *           &lt;complexType&gt;
 *             &lt;complexContent&gt;
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                 &lt;choice maxOccurs="unbounded"&gt;
 *                   &lt;element name="phone_type"&gt;
 *                     &lt;simpleType&gt;
 *                       &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *                         &lt;enumeration value="order_phone"/&gt;
 *                         &lt;enumeration value="claim_phone"/&gt;
 *                         &lt;enumeration value="payment_phone"/&gt;
 *                         &lt;enumeration value="returns_phone"/&gt;
 *                         &lt;enumeration value="order_fax"/&gt;
 *                         &lt;enumeration value="claim_fax"/&gt;
 *                         &lt;enumeration value="payment_fax"/&gt;
 *                         &lt;enumeration value="returns_fax"/&gt;
 *                         &lt;enumeration value="error_reporting"/&gt;
 *                         &lt;enumeration value="general"/&gt;
 *                         &lt;enumeration value="ALL"/&gt;
 *                       &lt;/restriction&gt;
 *                     &lt;/simpleType&gt;
 *                   &lt;/element&gt;
 *                 &lt;/choice&gt;
 *               &lt;/restriction&gt;
 *             &lt;/complexContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *       &lt;/all&gt;
 *       &lt;attribute name="preferred" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" /&gt;
 *       &lt;attribute name="preferredSMS" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" /&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "phone", propOrder = {

})
public class Phone implements Serializable, Equals2, HashCode2, ToString2
{

    @XmlElement(name = "phone_number", required = true)
    protected String phoneNumber;
    @XmlElement(name = "phone_types", required = true)
    protected PhoneTypes phoneTypes;
    @XmlAttribute(name = "preferred")
    protected Boolean preferred;
    @XmlAttribute(name = "preferredSMS")
    protected Boolean preferredSMS;

    /**
     * Gets the value of the phoneNumber property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPhoneNumber() {
        return phoneNumber;
    }

    /**
     * Sets the value of the phoneNumber property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPhoneNumber(String value) {
        this.phoneNumber = value;
    }

    /**
     * Gets the value of the phoneTypes property.
     * 
     * @return
     *     possible object is
     *     {@link PhoneTypes }
     *     
     */
    public PhoneTypes getPhoneTypes() {
        return phoneTypes;
    }

    /**
     * Sets the value of the phoneTypes property.
     * 
     * @param value
     *     allowed object is
     *     {@link PhoneTypes }
     *     
     */
    public void setPhoneTypes(PhoneTypes value) {
        this.phoneTypes = value;
    }

    /**
     * Gets the value of the preferred property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isPreferred() {
        if (preferred == null) {
            return false;
        } else {
            return preferred;
        }
    }

    /**
     * Sets the value of the preferred property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setPreferred(Boolean value) {
        this.preferred = value;
    }

    /**
     * Gets the value of the preferredSMS property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isPreferredSMS() {
        if (preferredSMS == null) {
            return false;
        } else {
            return preferredSMS;
        }
    }

    /**
     * Sets the value of the preferredSMS property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setPreferredSMS(Boolean value) {
        this.preferredSMS = value;
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy2 strategy) {
        int currentHashCode = 1;
        {
            String thePhoneNumber;
            thePhoneNumber = this.getPhoneNumber();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "phoneNumber", thePhoneNumber), currentHashCode, thePhoneNumber, (this.phoneNumber!= null));
        }
        {
            PhoneTypes thePhoneTypes;
            thePhoneTypes = this.getPhoneTypes();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "phoneTypes", thePhoneTypes), currentHashCode, thePhoneTypes, (this.phoneTypes!= null));
        }
        {
            boolean thePreferred;
            thePreferred = ((this.preferred!= null)?this.isPreferred():false);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "preferred", thePreferred), currentHashCode, thePreferred, (this.preferred!= null));
        }
        {
            boolean thePreferredSMS;
            thePreferredSMS = ((this.preferredSMS!= null)?this.isPreferredSMS():false);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "preferredSMS", thePreferredSMS), currentHashCode, thePreferredSMS, (this.preferredSMS!= null));
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy2 strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy2 strategy) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final Phone that = ((Phone) object);
        {
            String lhsPhoneNumber;
            lhsPhoneNumber = this.getPhoneNumber();
            String rhsPhoneNumber;
            rhsPhoneNumber = that.getPhoneNumber();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "phoneNumber", lhsPhoneNumber), LocatorUtils.property(thatLocator, "phoneNumber", rhsPhoneNumber), lhsPhoneNumber, rhsPhoneNumber, (this.phoneNumber!= null), (that.phoneNumber!= null))) {
                return false;
            }
        }
        {
            PhoneTypes lhsPhoneTypes;
            lhsPhoneTypes = this.getPhoneTypes();
            PhoneTypes rhsPhoneTypes;
            rhsPhoneTypes = that.getPhoneTypes();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "phoneTypes", lhsPhoneTypes), LocatorUtils.property(thatLocator, "phoneTypes", rhsPhoneTypes), lhsPhoneTypes, rhsPhoneTypes, (this.phoneTypes!= null), (that.phoneTypes!= null))) {
                return false;
            }
        }
        {
            boolean lhsPreferred;
            lhsPreferred = ((this.preferred!= null)?this.isPreferred():false);
            boolean rhsPreferred;
            rhsPreferred = ((that.preferred!= null)?that.isPreferred():false);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "preferred", lhsPreferred), LocatorUtils.property(thatLocator, "preferred", rhsPreferred), lhsPreferred, rhsPreferred, (this.preferred!= null), (that.preferred!= null))) {
                return false;
            }
        }
        {
            boolean lhsPreferredSMS;
            lhsPreferredSMS = ((this.preferredSMS!= null)?this.isPreferredSMS():false);
            boolean rhsPreferredSMS;
            rhsPreferredSMS = ((that.preferredSMS!= null)?that.isPreferredSMS():false);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "preferredSMS", lhsPreferredSMS), LocatorUtils.property(thatLocator, "preferredSMS", rhsPreferredSMS), lhsPreferredSMS, rhsPreferredSMS, (this.preferredSMS!= null), (that.preferredSMS!= null))) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy2 strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public String toString() {
        final ToStringStrategy2 strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        {
            String thePhoneNumber;
            thePhoneNumber = this.getPhoneNumber();
            strategy.appendField(locator, this, "phoneNumber", buffer, thePhoneNumber, (this.phoneNumber!= null));
        }
        {
            PhoneTypes thePhoneTypes;
            thePhoneTypes = this.getPhoneTypes();
            strategy.appendField(locator, this, "phoneTypes", buffer, thePhoneTypes, (this.phoneTypes!= null));
        }
        {
            boolean thePreferred;
            thePreferred = ((this.preferred!= null)?this.isPreferred():false);
            strategy.appendField(locator, this, "preferred", buffer, thePreferred, (this.preferred!= null));
        }
        {
            boolean thePreferredSMS;
            thePreferredSMS = ((this.preferredSMS!= null)?this.isPreferredSMS():false);
            strategy.appendField(locator, this, "preferredSMS", buffer, thePreferredSMS, (this.preferredSMS!= null));
        }
        return buffer;
    }


    /**
     * Phone types.
     * 
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;complexContent&gt;
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *       &lt;choice maxOccurs="unbounded"&gt;
     *         &lt;element name="phone_type"&gt;
     *           &lt;simpleType&gt;
     *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
     *               &lt;enumeration value="order_phone"/&gt;
     *               &lt;enumeration value="claim_phone"/&gt;
     *               &lt;enumeration value="payment_phone"/&gt;
     *               &lt;enumeration value="returns_phone"/&gt;
     *               &lt;enumeration value="order_fax"/&gt;
     *               &lt;enumeration value="claim_fax"/&gt;
     *               &lt;enumeration value="payment_fax"/&gt;
     *               &lt;enumeration value="returns_fax"/&gt;
     *               &lt;enumeration value="error_reporting"/&gt;
     *               &lt;enumeration value="general"/&gt;
     *               &lt;enumeration value="ALL"/&gt;
     *             &lt;/restriction&gt;
     *           &lt;/simpleType&gt;
     *         &lt;/element&gt;
     *       &lt;/choice&gt;
     *     &lt;/restriction&gt;
     *   &lt;/complexContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "phoneType"
    })
    public static class PhoneTypes implements Serializable, Equals2, HashCode2, ToString2
    {

        @XmlElement(name = "phone_type")
        protected List<String> phoneType;

        /**
         * Gets the value of the phoneType property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the phoneType property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getPhoneType().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link String }
         * 
         * 
         */
        public List<String> getPhoneType() {
            if (phoneType == null) {
                phoneType = new ArrayList<String>();
            }
            return this.phoneType;
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy2 strategy) {
            int currentHashCode = 1;
            {
                List<String> thePhoneType;
                thePhoneType = (((this.phoneType!= null)&&(!this.phoneType.isEmpty()))?this.getPhoneType():null);
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "phoneType", thePhoneType), currentHashCode, thePhoneType, ((this.phoneType!= null)&&(!this.phoneType.isEmpty())));
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy2 strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy2 strategy) {
            if ((object == null)||(this.getClass()!= object.getClass())) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final PhoneTypes that = ((PhoneTypes) object);
            {
                List<String> lhsPhoneType;
                lhsPhoneType = (((this.phoneType!= null)&&(!this.phoneType.isEmpty()))?this.getPhoneType():null);
                List<String> rhsPhoneType;
                rhsPhoneType = (((that.phoneType!= null)&&(!that.phoneType.isEmpty()))?that.getPhoneType():null);
                if (!strategy.equals(LocatorUtils.property(thisLocator, "phoneType", lhsPhoneType), LocatorUtils.property(thatLocator, "phoneType", rhsPhoneType), lhsPhoneType, rhsPhoneType, ((this.phoneType!= null)&&(!this.phoneType.isEmpty())), ((that.phoneType!= null)&&(!that.phoneType.isEmpty())))) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy2 strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public String toString() {
            final ToStringStrategy2 strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            {
                List<String> thePhoneType;
                thePhoneType = (((this.phoneType!= null)&&(!this.phoneType.isEmpty()))?this.getPhoneType():null);
                strategy.appendField(locator, this, "phoneType", buffer, thePhoneType, ((this.phoneType!= null)&&(!this.phoneType.isEmpty())));
            }
            return buffer;
        }

    }

}
