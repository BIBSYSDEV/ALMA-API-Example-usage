//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.03.12 at 09:27:54 AM CET 
//


package no.bibsys.alma.rest.holding;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAnyElement;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import org.jvnet.jaxb2_commons.lang.Equals2;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy2;
import org.jvnet.jaxb2_commons.lang.HashCode2;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy2;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString2;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy2;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;
import org.w3._2001.xmlschema.Adapter2;
import org.w3c.dom.Element;


/**
 * Holding Record
 * 
 * <p>Java class for holding complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="holding"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="holding_id" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="created_by" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="created_date" type="{http://www.w3.org/2001/XMLSchema}date" minOccurs="0"/&gt;
 *         &lt;element name="last_modified_by" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="last_modified_date" type="{http://www.w3.org/2001/XMLSchema}date" minOccurs="0"/&gt;
 *         &lt;element name="originating_system" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="originating_system_id" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="suppress_from_publishing" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;any processContents='lax' namespace='##other' maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "holding", propOrder = {
    "holdingId",
    "createdBy",
    "createdDate",
    "lastModifiedBy",
    "lastModifiedDate",
    "originatingSystem",
    "originatingSystemId",
    "suppressFromPublishing",
    "any"
})
@XmlRootElement(name = "holding")
public class Holding implements Serializable, Equals2, HashCode2, ToString2
{

    @XmlElement(name = "holding_id", required = true)
    protected String holdingId;
    @XmlElement(name = "created_by")
    protected String createdBy;
    @XmlElement(name = "created_date", type = String.class)
    @XmlJavaTypeAdapter(Adapter2 .class)
    @XmlSchemaType(name = "date")
    protected Calendar createdDate;
    @XmlElement(name = "last_modified_by")
    protected String lastModifiedBy;
    @XmlElement(name = "last_modified_date", type = String.class)
    @XmlJavaTypeAdapter(Adapter2 .class)
    @XmlSchemaType(name = "date")
    protected Calendar lastModifiedDate;
    @XmlElement(name = "originating_system")
    protected String originatingSystem;
    @XmlElement(name = "originating_system_id")
    protected String originatingSystemId;
    @XmlElement(name = "suppress_from_publishing")
    protected String suppressFromPublishing;
    @XmlAnyElement(lax = true)
    protected List<Object> any;

    /**
     * Gets the value of the holdingId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getHoldingId() {
        return holdingId;
    }

    /**
     * Sets the value of the holdingId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setHoldingId(String value) {
        this.holdingId = value;
    }

    /**
     * Gets the value of the createdBy property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCreatedBy() {
        return createdBy;
    }

    /**
     * Sets the value of the createdBy property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCreatedBy(String value) {
        this.createdBy = value;
    }

    /**
     * Gets the value of the createdDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public Calendar getCreatedDate() {
        return createdDate;
    }

    /**
     * Sets the value of the createdDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCreatedDate(Calendar value) {
        this.createdDate = value;
    }

    /**
     * Gets the value of the lastModifiedBy property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLastModifiedBy() {
        return lastModifiedBy;
    }

    /**
     * Sets the value of the lastModifiedBy property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLastModifiedBy(String value) {
        this.lastModifiedBy = value;
    }

    /**
     * Gets the value of the lastModifiedDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public Calendar getLastModifiedDate() {
        return lastModifiedDate;
    }

    /**
     * Sets the value of the lastModifiedDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLastModifiedDate(Calendar value) {
        this.lastModifiedDate = value;
    }

    /**
     * Gets the value of the originatingSystem property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getOriginatingSystem() {
        return originatingSystem;
    }

    /**
     * Sets the value of the originatingSystem property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setOriginatingSystem(String value) {
        this.originatingSystem = value;
    }

    /**
     * Gets the value of the originatingSystemId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getOriginatingSystemId() {
        return originatingSystemId;
    }

    /**
     * Sets the value of the originatingSystemId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setOriginatingSystemId(String value) {
        this.originatingSystemId = value;
    }

    /**
     * Gets the value of the suppressFromPublishing property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSuppressFromPublishing() {
        return suppressFromPublishing;
    }

    /**
     * Sets the value of the suppressFromPublishing property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSuppressFromPublishing(String value) {
        this.suppressFromPublishing = value;
    }

    /**
     * Gets the value of the any property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the any property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAny().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Object }
     * {@link Element }
     * 
     * 
     */
    public List<Object> getAny() {
        if (any == null) {
            any = new ArrayList<Object>();
        }
        return this.any;
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy2 strategy) {
        int currentHashCode = 1;
        {
            String theHoldingId;
            theHoldingId = this.getHoldingId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "holdingId", theHoldingId), currentHashCode, theHoldingId, (this.holdingId!= null));
        }
        {
            String theCreatedBy;
            theCreatedBy = this.getCreatedBy();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "createdBy", theCreatedBy), currentHashCode, theCreatedBy, (this.createdBy!= null));
        }
        {
            Calendar theCreatedDate;
            theCreatedDate = this.getCreatedDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "createdDate", theCreatedDate), currentHashCode, theCreatedDate, (this.createdDate!= null));
        }
        {
            String theLastModifiedBy;
            theLastModifiedBy = this.getLastModifiedBy();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lastModifiedBy", theLastModifiedBy), currentHashCode, theLastModifiedBy, (this.lastModifiedBy!= null));
        }
        {
            Calendar theLastModifiedDate;
            theLastModifiedDate = this.getLastModifiedDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lastModifiedDate", theLastModifiedDate), currentHashCode, theLastModifiedDate, (this.lastModifiedDate!= null));
        }
        {
            String theOriginatingSystem;
            theOriginatingSystem = this.getOriginatingSystem();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "originatingSystem", theOriginatingSystem), currentHashCode, theOriginatingSystem, (this.originatingSystem!= null));
        }
        {
            String theOriginatingSystemId;
            theOriginatingSystemId = this.getOriginatingSystemId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "originatingSystemId", theOriginatingSystemId), currentHashCode, theOriginatingSystemId, (this.originatingSystemId!= null));
        }
        {
            String theSuppressFromPublishing;
            theSuppressFromPublishing = this.getSuppressFromPublishing();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "suppressFromPublishing", theSuppressFromPublishing), currentHashCode, theSuppressFromPublishing, (this.suppressFromPublishing!= null));
        }
        {
            List<Object> theAny;
            theAny = (((this.any!= null)&&(!this.any.isEmpty()))?this.getAny():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "any", theAny), currentHashCode, theAny, ((this.any!= null)&&(!this.any.isEmpty())));
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy2 strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy2 strategy) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final Holding that = ((Holding) object);
        {
            String lhsHoldingId;
            lhsHoldingId = this.getHoldingId();
            String rhsHoldingId;
            rhsHoldingId = that.getHoldingId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "holdingId", lhsHoldingId), LocatorUtils.property(thatLocator, "holdingId", rhsHoldingId), lhsHoldingId, rhsHoldingId, (this.holdingId!= null), (that.holdingId!= null))) {
                return false;
            }
        }
        {
            String lhsCreatedBy;
            lhsCreatedBy = this.getCreatedBy();
            String rhsCreatedBy;
            rhsCreatedBy = that.getCreatedBy();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "createdBy", lhsCreatedBy), LocatorUtils.property(thatLocator, "createdBy", rhsCreatedBy), lhsCreatedBy, rhsCreatedBy, (this.createdBy!= null), (that.createdBy!= null))) {
                return false;
            }
        }
        {
            Calendar lhsCreatedDate;
            lhsCreatedDate = this.getCreatedDate();
            Calendar rhsCreatedDate;
            rhsCreatedDate = that.getCreatedDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "createdDate", lhsCreatedDate), LocatorUtils.property(thatLocator, "createdDate", rhsCreatedDate), lhsCreatedDate, rhsCreatedDate, (this.createdDate!= null), (that.createdDate!= null))) {
                return false;
            }
        }
        {
            String lhsLastModifiedBy;
            lhsLastModifiedBy = this.getLastModifiedBy();
            String rhsLastModifiedBy;
            rhsLastModifiedBy = that.getLastModifiedBy();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lastModifiedBy", lhsLastModifiedBy), LocatorUtils.property(thatLocator, "lastModifiedBy", rhsLastModifiedBy), lhsLastModifiedBy, rhsLastModifiedBy, (this.lastModifiedBy!= null), (that.lastModifiedBy!= null))) {
                return false;
            }
        }
        {
            Calendar lhsLastModifiedDate;
            lhsLastModifiedDate = this.getLastModifiedDate();
            Calendar rhsLastModifiedDate;
            rhsLastModifiedDate = that.getLastModifiedDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lastModifiedDate", lhsLastModifiedDate), LocatorUtils.property(thatLocator, "lastModifiedDate", rhsLastModifiedDate), lhsLastModifiedDate, rhsLastModifiedDate, (this.lastModifiedDate!= null), (that.lastModifiedDate!= null))) {
                return false;
            }
        }
        {
            String lhsOriginatingSystem;
            lhsOriginatingSystem = this.getOriginatingSystem();
            String rhsOriginatingSystem;
            rhsOriginatingSystem = that.getOriginatingSystem();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "originatingSystem", lhsOriginatingSystem), LocatorUtils.property(thatLocator, "originatingSystem", rhsOriginatingSystem), lhsOriginatingSystem, rhsOriginatingSystem, (this.originatingSystem!= null), (that.originatingSystem!= null))) {
                return false;
            }
        }
        {
            String lhsOriginatingSystemId;
            lhsOriginatingSystemId = this.getOriginatingSystemId();
            String rhsOriginatingSystemId;
            rhsOriginatingSystemId = that.getOriginatingSystemId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "originatingSystemId", lhsOriginatingSystemId), LocatorUtils.property(thatLocator, "originatingSystemId", rhsOriginatingSystemId), lhsOriginatingSystemId, rhsOriginatingSystemId, (this.originatingSystemId!= null), (that.originatingSystemId!= null))) {
                return false;
            }
        }
        {
            String lhsSuppressFromPublishing;
            lhsSuppressFromPublishing = this.getSuppressFromPublishing();
            String rhsSuppressFromPublishing;
            rhsSuppressFromPublishing = that.getSuppressFromPublishing();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "suppressFromPublishing", lhsSuppressFromPublishing), LocatorUtils.property(thatLocator, "suppressFromPublishing", rhsSuppressFromPublishing), lhsSuppressFromPublishing, rhsSuppressFromPublishing, (this.suppressFromPublishing!= null), (that.suppressFromPublishing!= null))) {
                return false;
            }
        }
        {
            List<Object> lhsAny;
            lhsAny = (((this.any!= null)&&(!this.any.isEmpty()))?this.getAny():null);
            List<Object> rhsAny;
            rhsAny = (((that.any!= null)&&(!that.any.isEmpty()))?that.getAny():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "any", lhsAny), LocatorUtils.property(thatLocator, "any", rhsAny), lhsAny, rhsAny, ((this.any!= null)&&(!this.any.isEmpty())), ((that.any!= null)&&(!that.any.isEmpty())))) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy2 strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public String toString() {
        final ToStringStrategy2 strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        {
            String theHoldingId;
            theHoldingId = this.getHoldingId();
            strategy.appendField(locator, this, "holdingId", buffer, theHoldingId, (this.holdingId!= null));
        }
        {
            String theCreatedBy;
            theCreatedBy = this.getCreatedBy();
            strategy.appendField(locator, this, "createdBy", buffer, theCreatedBy, (this.createdBy!= null));
        }
        {
            Calendar theCreatedDate;
            theCreatedDate = this.getCreatedDate();
            strategy.appendField(locator, this, "createdDate", buffer, theCreatedDate, (this.createdDate!= null));
        }
        {
            String theLastModifiedBy;
            theLastModifiedBy = this.getLastModifiedBy();
            strategy.appendField(locator, this, "lastModifiedBy", buffer, theLastModifiedBy, (this.lastModifiedBy!= null));
        }
        {
            Calendar theLastModifiedDate;
            theLastModifiedDate = this.getLastModifiedDate();
            strategy.appendField(locator, this, "lastModifiedDate", buffer, theLastModifiedDate, (this.lastModifiedDate!= null));
        }
        {
            String theOriginatingSystem;
            theOriginatingSystem = this.getOriginatingSystem();
            strategy.appendField(locator, this, "originatingSystem", buffer, theOriginatingSystem, (this.originatingSystem!= null));
        }
        {
            String theOriginatingSystemId;
            theOriginatingSystemId = this.getOriginatingSystemId();
            strategy.appendField(locator, this, "originatingSystemId", buffer, theOriginatingSystemId, (this.originatingSystemId!= null));
        }
        {
            String theSuppressFromPublishing;
            theSuppressFromPublishing = this.getSuppressFromPublishing();
            strategy.appendField(locator, this, "suppressFromPublishing", buffer, theSuppressFromPublishing, (this.suppressFromPublishing!= null));
        }
        {
            List<Object> theAny;
            theAny = (((this.any!= null)&&(!this.any.isEmpty()))?this.getAny():null);
            strategy.appendField(locator, this, "any", buffer, theAny, ((this.any!= null)&&(!this.any.isEmpty())));
        }
        return buffer;
    }

}
