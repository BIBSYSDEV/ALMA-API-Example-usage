//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.03.12 at 09:28:07 AM CET 
//


package no.bibsys.alma.rest.invoice;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals2;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy2;
import org.jvnet.jaxb2_commons.lang.HashCode2;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy2;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString2;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy2;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * List of exchange rates between the invoice currency and foreign currencies. 
 * 			Relevant only if the institution has ledgers in more than one currency. 
 * In the PUT action the incoming list will replace the existing list. If the incoming list is empty, the existing list will be deleted.
 * 			This field is relevant in POST /almaws/v1/acq/invoices/invoice ID?op=paid. 
 * 			
 * 
 * <p>Java class for explicit_ratios complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="explicit_ratios"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="explicit_ratio" type="{}explicit_ratio" maxOccurs="unbounded"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "explicit_ratios", propOrder = {
    "explicitRatio"
})
public class ExplicitRatios implements Serializable, Equals2, HashCode2, ToString2
{

    @XmlElement(name = "explicit_ratio", required = true)
    protected List<ExplicitRatio> explicitRatio;

    /**
     * Gets the value of the explicitRatio property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the explicitRatio property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getExplicitRatio().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ExplicitRatio }
     * 
     * 
     */
    public List<ExplicitRatio> getExplicitRatio() {
        if (explicitRatio == null) {
            explicitRatio = new ArrayList<ExplicitRatio>();
        }
        return this.explicitRatio;
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy2 strategy) {
        int currentHashCode = 1;
        {
            List<ExplicitRatio> theExplicitRatio;
            theExplicitRatio = (((this.explicitRatio!= null)&&(!this.explicitRatio.isEmpty()))?this.getExplicitRatio():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "explicitRatio", theExplicitRatio), currentHashCode, theExplicitRatio, ((this.explicitRatio!= null)&&(!this.explicitRatio.isEmpty())));
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy2 strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy2 strategy) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final ExplicitRatios that = ((ExplicitRatios) object);
        {
            List<ExplicitRatio> lhsExplicitRatio;
            lhsExplicitRatio = (((this.explicitRatio!= null)&&(!this.explicitRatio.isEmpty()))?this.getExplicitRatio():null);
            List<ExplicitRatio> rhsExplicitRatio;
            rhsExplicitRatio = (((that.explicitRatio!= null)&&(!that.explicitRatio.isEmpty()))?that.getExplicitRatio():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "explicitRatio", lhsExplicitRatio), LocatorUtils.property(thatLocator, "explicitRatio", rhsExplicitRatio), lhsExplicitRatio, rhsExplicitRatio, ((this.explicitRatio!= null)&&(!this.explicitRatio.isEmpty())), ((that.explicitRatio!= null)&&(!that.explicitRatio.isEmpty())))) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy2 strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public String toString() {
        final ToStringStrategy2 strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        {
            List<ExplicitRatio> theExplicitRatio;
            theExplicitRatio = (((this.explicitRatio!= null)&&(!this.explicitRatio.isEmpty()))?this.getExplicitRatio():null);
            strategy.appendField(locator, this, "explicitRatio", buffer, theExplicitRatio, ((this.explicitRatio!= null)&&(!this.explicitRatio.isEmpty())));
        }
        return buffer;
    }

}
