//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.03.12 at 09:28:14 AM CET 
//


package no.bibsys.alma.rest.vendor;

import java.io.Serializable;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlValue;
import org.jvnet.jaxb2_commons.lang.Equals2;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy2;
import org.jvnet.jaxb2_commons.lang.HashCode2;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy2;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString2;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy2;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * Administrative details about the interface.
 * 
 * <p>Java class for admin_info complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="admin_info"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;all&gt;
 *         &lt;element name="user_id" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="user_password" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="user_password_note" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="online_admin_module" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/&gt;
 *         &lt;element name="admin_uri" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="admin_uri_type" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;simpleContent&gt;
 *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
 *                 &lt;attribute name="desc" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *               &lt;/extension&gt;
 *             &lt;/simpleContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *         &lt;element name="open_url_compliant" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/&gt;
 *         &lt;element name="linking_note" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="hardware_req_internal" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="hardware_req_public" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="software_req_internal" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="software_req_public" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="maintenance_win_value" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="incident_log" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="admin_documentation" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *       &lt;/all&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "admin_info", propOrder = {

})
public class AdminInfo implements Serializable, Equals2, HashCode2, ToString2
{

    @XmlElement(name = "user_id")
    protected String userId;
    @XmlElement(name = "user_password")
    protected String userPassword;
    @XmlElement(name = "user_password_note")
    protected String userPasswordNote;
    @XmlElement(name = "online_admin_module")
    protected Boolean onlineAdminModule;
    @XmlElement(name = "admin_uri")
    protected String adminUri;
    @XmlElement(name = "admin_uri_type")
    protected AdminUriType adminUriType;
    @XmlElement(name = "open_url_compliant")
    protected Boolean openUrlCompliant;
    @XmlElement(name = "linking_note")
    protected String linkingNote;
    @XmlElement(name = "hardware_req_internal")
    protected String hardwareReqInternal;
    @XmlElement(name = "hardware_req_public")
    protected String hardwareReqPublic;
    @XmlElement(name = "software_req_internal")
    protected String softwareReqInternal;
    @XmlElement(name = "software_req_public")
    protected String softwareReqPublic;
    @XmlElement(name = "maintenance_win_value")
    protected String maintenanceWinValue;
    @XmlElement(name = "incident_log")
    protected String incidentLog;
    @XmlElement(name = "admin_documentation")
    protected String adminDocumentation;

    /**
     * Gets the value of the userId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getUserId() {
        return userId;
    }

    /**
     * Sets the value of the userId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setUserId(String value) {
        this.userId = value;
    }

    /**
     * Gets the value of the userPassword property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getUserPassword() {
        return userPassword;
    }

    /**
     * Sets the value of the userPassword property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setUserPassword(String value) {
        this.userPassword = value;
    }

    /**
     * Gets the value of the userPasswordNote property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getUserPasswordNote() {
        return userPasswordNote;
    }

    /**
     * Sets the value of the userPasswordNote property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setUserPasswordNote(String value) {
        this.userPasswordNote = value;
    }

    /**
     * Gets the value of the onlineAdminModule property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isOnlineAdminModule() {
        return onlineAdminModule;
    }

    /**
     * Sets the value of the onlineAdminModule property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setOnlineAdminModule(Boolean value) {
        this.onlineAdminModule = value;
    }

    /**
     * Gets the value of the adminUri property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAdminUri() {
        return adminUri;
    }

    /**
     * Sets the value of the adminUri property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAdminUri(String value) {
        this.adminUri = value;
    }

    /**
     * Gets the value of the adminUriType property.
     * 
     * @return
     *     possible object is
     *     {@link AdminUriType }
     *     
     */
    public AdminUriType getAdminUriType() {
        return adminUriType;
    }

    /**
     * Sets the value of the adminUriType property.
     * 
     * @param value
     *     allowed object is
     *     {@link AdminUriType }
     *     
     */
    public void setAdminUriType(AdminUriType value) {
        this.adminUriType = value;
    }

    /**
     * Gets the value of the openUrlCompliant property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isOpenUrlCompliant() {
        return openUrlCompliant;
    }

    /**
     * Sets the value of the openUrlCompliant property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setOpenUrlCompliant(Boolean value) {
        this.openUrlCompliant = value;
    }

    /**
     * Gets the value of the linkingNote property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLinkingNote() {
        return linkingNote;
    }

    /**
     * Sets the value of the linkingNote property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLinkingNote(String value) {
        this.linkingNote = value;
    }

    /**
     * Gets the value of the hardwareReqInternal property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getHardwareReqInternal() {
        return hardwareReqInternal;
    }

    /**
     * Sets the value of the hardwareReqInternal property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setHardwareReqInternal(String value) {
        this.hardwareReqInternal = value;
    }

    /**
     * Gets the value of the hardwareReqPublic property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getHardwareReqPublic() {
        return hardwareReqPublic;
    }

    /**
     * Sets the value of the hardwareReqPublic property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setHardwareReqPublic(String value) {
        this.hardwareReqPublic = value;
    }

    /**
     * Gets the value of the softwareReqInternal property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSoftwareReqInternal() {
        return softwareReqInternal;
    }

    /**
     * Sets the value of the softwareReqInternal property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSoftwareReqInternal(String value) {
        this.softwareReqInternal = value;
    }

    /**
     * Gets the value of the softwareReqPublic property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSoftwareReqPublic() {
        return softwareReqPublic;
    }

    /**
     * Sets the value of the softwareReqPublic property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSoftwareReqPublic(String value) {
        this.softwareReqPublic = value;
    }

    /**
     * Gets the value of the maintenanceWinValue property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getMaintenanceWinValue() {
        return maintenanceWinValue;
    }

    /**
     * Sets the value of the maintenanceWinValue property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMaintenanceWinValue(String value) {
        this.maintenanceWinValue = value;
    }

    /**
     * Gets the value of the incidentLog property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getIncidentLog() {
        return incidentLog;
    }

    /**
     * Sets the value of the incidentLog property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setIncidentLog(String value) {
        this.incidentLog = value;
    }

    /**
     * Gets the value of the adminDocumentation property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAdminDocumentation() {
        return adminDocumentation;
    }

    /**
     * Sets the value of the adminDocumentation property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAdminDocumentation(String value) {
        this.adminDocumentation = value;
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy2 strategy) {
        int currentHashCode = 1;
        {
            String theUserId;
            theUserId = this.getUserId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "userId", theUserId), currentHashCode, theUserId, (this.userId!= null));
        }
        {
            String theUserPassword;
            theUserPassword = this.getUserPassword();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "userPassword", theUserPassword), currentHashCode, theUserPassword, (this.userPassword!= null));
        }
        {
            String theUserPasswordNote;
            theUserPasswordNote = this.getUserPasswordNote();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "userPasswordNote", theUserPasswordNote), currentHashCode, theUserPasswordNote, (this.userPasswordNote!= null));
        }
        {
            Boolean theOnlineAdminModule;
            theOnlineAdminModule = this.isOnlineAdminModule();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "onlineAdminModule", theOnlineAdminModule), currentHashCode, theOnlineAdminModule, (this.onlineAdminModule!= null));
        }
        {
            String theAdminUri;
            theAdminUri = this.getAdminUri();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "adminUri", theAdminUri), currentHashCode, theAdminUri, (this.adminUri!= null));
        }
        {
            AdminUriType theAdminUriType;
            theAdminUriType = this.getAdminUriType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "adminUriType", theAdminUriType), currentHashCode, theAdminUriType, (this.adminUriType!= null));
        }
        {
            Boolean theOpenUrlCompliant;
            theOpenUrlCompliant = this.isOpenUrlCompliant();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "openUrlCompliant", theOpenUrlCompliant), currentHashCode, theOpenUrlCompliant, (this.openUrlCompliant!= null));
        }
        {
            String theLinkingNote;
            theLinkingNote = this.getLinkingNote();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "linkingNote", theLinkingNote), currentHashCode, theLinkingNote, (this.linkingNote!= null));
        }
        {
            String theHardwareReqInternal;
            theHardwareReqInternal = this.getHardwareReqInternal();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "hardwareReqInternal", theHardwareReqInternal), currentHashCode, theHardwareReqInternal, (this.hardwareReqInternal!= null));
        }
        {
            String theHardwareReqPublic;
            theHardwareReqPublic = this.getHardwareReqPublic();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "hardwareReqPublic", theHardwareReqPublic), currentHashCode, theHardwareReqPublic, (this.hardwareReqPublic!= null));
        }
        {
            String theSoftwareReqInternal;
            theSoftwareReqInternal = this.getSoftwareReqInternal();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "softwareReqInternal", theSoftwareReqInternal), currentHashCode, theSoftwareReqInternal, (this.softwareReqInternal!= null));
        }
        {
            String theSoftwareReqPublic;
            theSoftwareReqPublic = this.getSoftwareReqPublic();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "softwareReqPublic", theSoftwareReqPublic), currentHashCode, theSoftwareReqPublic, (this.softwareReqPublic!= null));
        }
        {
            String theMaintenanceWinValue;
            theMaintenanceWinValue = this.getMaintenanceWinValue();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "maintenanceWinValue", theMaintenanceWinValue), currentHashCode, theMaintenanceWinValue, (this.maintenanceWinValue!= null));
        }
        {
            String theIncidentLog;
            theIncidentLog = this.getIncidentLog();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "incidentLog", theIncidentLog), currentHashCode, theIncidentLog, (this.incidentLog!= null));
        }
        {
            String theAdminDocumentation;
            theAdminDocumentation = this.getAdminDocumentation();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "adminDocumentation", theAdminDocumentation), currentHashCode, theAdminDocumentation, (this.adminDocumentation!= null));
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy2 strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy2 strategy) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final AdminInfo that = ((AdminInfo) object);
        {
            String lhsUserId;
            lhsUserId = this.getUserId();
            String rhsUserId;
            rhsUserId = that.getUserId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "userId", lhsUserId), LocatorUtils.property(thatLocator, "userId", rhsUserId), lhsUserId, rhsUserId, (this.userId!= null), (that.userId!= null))) {
                return false;
            }
        }
        {
            String lhsUserPassword;
            lhsUserPassword = this.getUserPassword();
            String rhsUserPassword;
            rhsUserPassword = that.getUserPassword();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "userPassword", lhsUserPassword), LocatorUtils.property(thatLocator, "userPassword", rhsUserPassword), lhsUserPassword, rhsUserPassword, (this.userPassword!= null), (that.userPassword!= null))) {
                return false;
            }
        }
        {
            String lhsUserPasswordNote;
            lhsUserPasswordNote = this.getUserPasswordNote();
            String rhsUserPasswordNote;
            rhsUserPasswordNote = that.getUserPasswordNote();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "userPasswordNote", lhsUserPasswordNote), LocatorUtils.property(thatLocator, "userPasswordNote", rhsUserPasswordNote), lhsUserPasswordNote, rhsUserPasswordNote, (this.userPasswordNote!= null), (that.userPasswordNote!= null))) {
                return false;
            }
        }
        {
            Boolean lhsOnlineAdminModule;
            lhsOnlineAdminModule = this.isOnlineAdminModule();
            Boolean rhsOnlineAdminModule;
            rhsOnlineAdminModule = that.isOnlineAdminModule();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "onlineAdminModule", lhsOnlineAdminModule), LocatorUtils.property(thatLocator, "onlineAdminModule", rhsOnlineAdminModule), lhsOnlineAdminModule, rhsOnlineAdminModule, (this.onlineAdminModule!= null), (that.onlineAdminModule!= null))) {
                return false;
            }
        }
        {
            String lhsAdminUri;
            lhsAdminUri = this.getAdminUri();
            String rhsAdminUri;
            rhsAdminUri = that.getAdminUri();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "adminUri", lhsAdminUri), LocatorUtils.property(thatLocator, "adminUri", rhsAdminUri), lhsAdminUri, rhsAdminUri, (this.adminUri!= null), (that.adminUri!= null))) {
                return false;
            }
        }
        {
            AdminUriType lhsAdminUriType;
            lhsAdminUriType = this.getAdminUriType();
            AdminUriType rhsAdminUriType;
            rhsAdminUriType = that.getAdminUriType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "adminUriType", lhsAdminUriType), LocatorUtils.property(thatLocator, "adminUriType", rhsAdminUriType), lhsAdminUriType, rhsAdminUriType, (this.adminUriType!= null), (that.adminUriType!= null))) {
                return false;
            }
        }
        {
            Boolean lhsOpenUrlCompliant;
            lhsOpenUrlCompliant = this.isOpenUrlCompliant();
            Boolean rhsOpenUrlCompliant;
            rhsOpenUrlCompliant = that.isOpenUrlCompliant();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "openUrlCompliant", lhsOpenUrlCompliant), LocatorUtils.property(thatLocator, "openUrlCompliant", rhsOpenUrlCompliant), lhsOpenUrlCompliant, rhsOpenUrlCompliant, (this.openUrlCompliant!= null), (that.openUrlCompliant!= null))) {
                return false;
            }
        }
        {
            String lhsLinkingNote;
            lhsLinkingNote = this.getLinkingNote();
            String rhsLinkingNote;
            rhsLinkingNote = that.getLinkingNote();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "linkingNote", lhsLinkingNote), LocatorUtils.property(thatLocator, "linkingNote", rhsLinkingNote), lhsLinkingNote, rhsLinkingNote, (this.linkingNote!= null), (that.linkingNote!= null))) {
                return false;
            }
        }
        {
            String lhsHardwareReqInternal;
            lhsHardwareReqInternal = this.getHardwareReqInternal();
            String rhsHardwareReqInternal;
            rhsHardwareReqInternal = that.getHardwareReqInternal();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "hardwareReqInternal", lhsHardwareReqInternal), LocatorUtils.property(thatLocator, "hardwareReqInternal", rhsHardwareReqInternal), lhsHardwareReqInternal, rhsHardwareReqInternal, (this.hardwareReqInternal!= null), (that.hardwareReqInternal!= null))) {
                return false;
            }
        }
        {
            String lhsHardwareReqPublic;
            lhsHardwareReqPublic = this.getHardwareReqPublic();
            String rhsHardwareReqPublic;
            rhsHardwareReqPublic = that.getHardwareReqPublic();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "hardwareReqPublic", lhsHardwareReqPublic), LocatorUtils.property(thatLocator, "hardwareReqPublic", rhsHardwareReqPublic), lhsHardwareReqPublic, rhsHardwareReqPublic, (this.hardwareReqPublic!= null), (that.hardwareReqPublic!= null))) {
                return false;
            }
        }
        {
            String lhsSoftwareReqInternal;
            lhsSoftwareReqInternal = this.getSoftwareReqInternal();
            String rhsSoftwareReqInternal;
            rhsSoftwareReqInternal = that.getSoftwareReqInternal();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "softwareReqInternal", lhsSoftwareReqInternal), LocatorUtils.property(thatLocator, "softwareReqInternal", rhsSoftwareReqInternal), lhsSoftwareReqInternal, rhsSoftwareReqInternal, (this.softwareReqInternal!= null), (that.softwareReqInternal!= null))) {
                return false;
            }
        }
        {
            String lhsSoftwareReqPublic;
            lhsSoftwareReqPublic = this.getSoftwareReqPublic();
            String rhsSoftwareReqPublic;
            rhsSoftwareReqPublic = that.getSoftwareReqPublic();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "softwareReqPublic", lhsSoftwareReqPublic), LocatorUtils.property(thatLocator, "softwareReqPublic", rhsSoftwareReqPublic), lhsSoftwareReqPublic, rhsSoftwareReqPublic, (this.softwareReqPublic!= null), (that.softwareReqPublic!= null))) {
                return false;
            }
        }
        {
            String lhsMaintenanceWinValue;
            lhsMaintenanceWinValue = this.getMaintenanceWinValue();
            String rhsMaintenanceWinValue;
            rhsMaintenanceWinValue = that.getMaintenanceWinValue();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "maintenanceWinValue", lhsMaintenanceWinValue), LocatorUtils.property(thatLocator, "maintenanceWinValue", rhsMaintenanceWinValue), lhsMaintenanceWinValue, rhsMaintenanceWinValue, (this.maintenanceWinValue!= null), (that.maintenanceWinValue!= null))) {
                return false;
            }
        }
        {
            String lhsIncidentLog;
            lhsIncidentLog = this.getIncidentLog();
            String rhsIncidentLog;
            rhsIncidentLog = that.getIncidentLog();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "incidentLog", lhsIncidentLog), LocatorUtils.property(thatLocator, "incidentLog", rhsIncidentLog), lhsIncidentLog, rhsIncidentLog, (this.incidentLog!= null), (that.incidentLog!= null))) {
                return false;
            }
        }
        {
            String lhsAdminDocumentation;
            lhsAdminDocumentation = this.getAdminDocumentation();
            String rhsAdminDocumentation;
            rhsAdminDocumentation = that.getAdminDocumentation();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "adminDocumentation", lhsAdminDocumentation), LocatorUtils.property(thatLocator, "adminDocumentation", rhsAdminDocumentation), lhsAdminDocumentation, rhsAdminDocumentation, (this.adminDocumentation!= null), (that.adminDocumentation!= null))) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy2 strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public String toString() {
        final ToStringStrategy2 strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        {
            String theUserId;
            theUserId = this.getUserId();
            strategy.appendField(locator, this, "userId", buffer, theUserId, (this.userId!= null));
        }
        {
            String theUserPassword;
            theUserPassword = this.getUserPassword();
            strategy.appendField(locator, this, "userPassword", buffer, theUserPassword, (this.userPassword!= null));
        }
        {
            String theUserPasswordNote;
            theUserPasswordNote = this.getUserPasswordNote();
            strategy.appendField(locator, this, "userPasswordNote", buffer, theUserPasswordNote, (this.userPasswordNote!= null));
        }
        {
            Boolean theOnlineAdminModule;
            theOnlineAdminModule = this.isOnlineAdminModule();
            strategy.appendField(locator, this, "onlineAdminModule", buffer, theOnlineAdminModule, (this.onlineAdminModule!= null));
        }
        {
            String theAdminUri;
            theAdminUri = this.getAdminUri();
            strategy.appendField(locator, this, "adminUri", buffer, theAdminUri, (this.adminUri!= null));
        }
        {
            AdminUriType theAdminUriType;
            theAdminUriType = this.getAdminUriType();
            strategy.appendField(locator, this, "adminUriType", buffer, theAdminUriType, (this.adminUriType!= null));
        }
        {
            Boolean theOpenUrlCompliant;
            theOpenUrlCompliant = this.isOpenUrlCompliant();
            strategy.appendField(locator, this, "openUrlCompliant", buffer, theOpenUrlCompliant, (this.openUrlCompliant!= null));
        }
        {
            String theLinkingNote;
            theLinkingNote = this.getLinkingNote();
            strategy.appendField(locator, this, "linkingNote", buffer, theLinkingNote, (this.linkingNote!= null));
        }
        {
            String theHardwareReqInternal;
            theHardwareReqInternal = this.getHardwareReqInternal();
            strategy.appendField(locator, this, "hardwareReqInternal", buffer, theHardwareReqInternal, (this.hardwareReqInternal!= null));
        }
        {
            String theHardwareReqPublic;
            theHardwareReqPublic = this.getHardwareReqPublic();
            strategy.appendField(locator, this, "hardwareReqPublic", buffer, theHardwareReqPublic, (this.hardwareReqPublic!= null));
        }
        {
            String theSoftwareReqInternal;
            theSoftwareReqInternal = this.getSoftwareReqInternal();
            strategy.appendField(locator, this, "softwareReqInternal", buffer, theSoftwareReqInternal, (this.softwareReqInternal!= null));
        }
        {
            String theSoftwareReqPublic;
            theSoftwareReqPublic = this.getSoftwareReqPublic();
            strategy.appendField(locator, this, "softwareReqPublic", buffer, theSoftwareReqPublic, (this.softwareReqPublic!= null));
        }
        {
            String theMaintenanceWinValue;
            theMaintenanceWinValue = this.getMaintenanceWinValue();
            strategy.appendField(locator, this, "maintenanceWinValue", buffer, theMaintenanceWinValue, (this.maintenanceWinValue!= null));
        }
        {
            String theIncidentLog;
            theIncidentLog = this.getIncidentLog();
            strategy.appendField(locator, this, "incidentLog", buffer, theIncidentLog, (this.incidentLog!= null));
        }
        {
            String theAdminDocumentation;
            theAdminDocumentation = this.getAdminDocumentation();
            strategy.appendField(locator, this, "adminDocumentation", buffer, theAdminDocumentation, (this.adminDocumentation!= null));
        }
        return buffer;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;simpleContent&gt;
     *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
     *       &lt;attribute name="desc" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
     *     &lt;/extension&gt;
     *   &lt;/simpleContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "value"
    })
    public static class AdminUriType implements Serializable, Equals2, HashCode2, ToString2
    {

        @XmlValue
        protected String value;
        @XmlAttribute(name = "desc")
        protected String desc;

        /**
         * Gets the value of the value property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getValue() {
            return value;
        }

        /**
         * Sets the value of the value property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setValue(String value) {
            this.value = value;
        }

        /**
         * Gets the value of the desc property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getDesc() {
            return desc;
        }

        /**
         * Sets the value of the desc property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setDesc(String value) {
            this.desc = value;
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy2 strategy) {
            int currentHashCode = 1;
            {
                String theValue;
                theValue = this.getValue();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "value", theValue), currentHashCode, theValue, (this.value!= null));
            }
            {
                String theDesc;
                theDesc = this.getDesc();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "desc", theDesc), currentHashCode, theDesc, (this.desc!= null));
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy2 strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy2 strategy) {
            if ((object == null)||(this.getClass()!= object.getClass())) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final AdminUriType that = ((AdminUriType) object);
            {
                String lhsValue;
                lhsValue = this.getValue();
                String rhsValue;
                rhsValue = that.getValue();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "value", lhsValue), LocatorUtils.property(thatLocator, "value", rhsValue), lhsValue, rhsValue, (this.value!= null), (that.value!= null))) {
                    return false;
                }
            }
            {
                String lhsDesc;
                lhsDesc = this.getDesc();
                String rhsDesc;
                rhsDesc = that.getDesc();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "desc", lhsDesc), LocatorUtils.property(thatLocator, "desc", rhsDesc), lhsDesc, rhsDesc, (this.desc!= null), (that.desc!= null))) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy2 strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public String toString() {
            final ToStringStrategy2 strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            {
                String theValue;
                theValue = this.getValue();
                strategy.appendField(locator, this, "value", buffer, theValue, (this.value!= null));
            }
            {
                String theDesc;
                theDesc = this.getDesc();
                strategy.appendField(locator, this, "desc", buffer, theDesc, (this.desc!= null));
            }
            return buffer;
        }

    }

}
