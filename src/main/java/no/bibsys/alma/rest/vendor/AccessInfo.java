//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.03.12 at 09:28:14 AM CET 
//


package no.bibsys.alma.rest.vendor;

import java.io.Serializable;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlValue;
import org.jvnet.jaxb2_commons.lang.Equals2;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy2;
import org.jvnet.jaxb2_commons.lang.HashCode2;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy2;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString2;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy2;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for access_info complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="access_info"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;all&gt;
 *         &lt;element name="user_id" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="user_password" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="user_pass_note" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="ip_address_reg_method" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;simpleContent&gt;
 *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
 *                 &lt;attribute name="desc" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *               &lt;/extension&gt;
 *             &lt;/simpleContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *         &lt;element name="ip_address_reg_instructions" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="ip_address_note" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="access_note" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="primary_access_uri" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="interface_uri" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="implemented_auth_method" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;simpleContent&gt;
 *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
 *                 &lt;attribute name="desc" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *               &lt;/extension&gt;
 *             &lt;/simpleContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *         &lt;element name="local_persistent_uri" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *       &lt;/all&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "access_info", propOrder = {

})
public class AccessInfo implements Serializable, Equals2, HashCode2, ToString2
{

    @XmlElement(name = "user_id")
    protected String userId;
    @XmlElement(name = "user_password")
    protected String userPassword;
    @XmlElement(name = "user_pass_note")
    protected String userPassNote;
    @XmlElement(name = "ip_address_reg_method")
    protected IpAddressRegMethod ipAddressRegMethod;
    @XmlElement(name = "ip_address_reg_instructions")
    protected String ipAddressRegInstructions;
    @XmlElement(name = "ip_address_note")
    protected String ipAddressNote;
    @XmlElement(name = "access_note")
    protected String accessNote;
    @XmlElement(name = "primary_access_uri")
    protected String primaryAccessUri;
    @XmlElement(name = "interface_uri")
    protected String interfaceUri;
    @XmlElement(name = "implemented_auth_method")
    protected ImplementedAuthMethod implementedAuthMethod;
    @XmlElement(name = "local_persistent_uri")
    protected String localPersistentUri;

    /**
     * Gets the value of the userId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getUserId() {
        return userId;
    }

    /**
     * Sets the value of the userId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setUserId(String value) {
        this.userId = value;
    }

    /**
     * Gets the value of the userPassword property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getUserPassword() {
        return userPassword;
    }

    /**
     * Sets the value of the userPassword property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setUserPassword(String value) {
        this.userPassword = value;
    }

    /**
     * Gets the value of the userPassNote property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getUserPassNote() {
        return userPassNote;
    }

    /**
     * Sets the value of the userPassNote property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setUserPassNote(String value) {
        this.userPassNote = value;
    }

    /**
     * Gets the value of the ipAddressRegMethod property.
     * 
     * @return
     *     possible object is
     *     {@link IpAddressRegMethod }
     *     
     */
    public IpAddressRegMethod getIpAddressRegMethod() {
        return ipAddressRegMethod;
    }

    /**
     * Sets the value of the ipAddressRegMethod property.
     * 
     * @param value
     *     allowed object is
     *     {@link IpAddressRegMethod }
     *     
     */
    public void setIpAddressRegMethod(IpAddressRegMethod value) {
        this.ipAddressRegMethod = value;
    }

    /**
     * Gets the value of the ipAddressRegInstructions property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getIpAddressRegInstructions() {
        return ipAddressRegInstructions;
    }

    /**
     * Sets the value of the ipAddressRegInstructions property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setIpAddressRegInstructions(String value) {
        this.ipAddressRegInstructions = value;
    }

    /**
     * Gets the value of the ipAddressNote property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getIpAddressNote() {
        return ipAddressNote;
    }

    /**
     * Sets the value of the ipAddressNote property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setIpAddressNote(String value) {
        this.ipAddressNote = value;
    }

    /**
     * Gets the value of the accessNote property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAccessNote() {
        return accessNote;
    }

    /**
     * Sets the value of the accessNote property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAccessNote(String value) {
        this.accessNote = value;
    }

    /**
     * Gets the value of the primaryAccessUri property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPrimaryAccessUri() {
        return primaryAccessUri;
    }

    /**
     * Sets the value of the primaryAccessUri property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPrimaryAccessUri(String value) {
        this.primaryAccessUri = value;
    }

    /**
     * Gets the value of the interfaceUri property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getInterfaceUri() {
        return interfaceUri;
    }

    /**
     * Sets the value of the interfaceUri property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setInterfaceUri(String value) {
        this.interfaceUri = value;
    }

    /**
     * Gets the value of the implementedAuthMethod property.
     * 
     * @return
     *     possible object is
     *     {@link ImplementedAuthMethod }
     *     
     */
    public ImplementedAuthMethod getImplementedAuthMethod() {
        return implementedAuthMethod;
    }

    /**
     * Sets the value of the implementedAuthMethod property.
     * 
     * @param value
     *     allowed object is
     *     {@link ImplementedAuthMethod }
     *     
     */
    public void setImplementedAuthMethod(ImplementedAuthMethod value) {
        this.implementedAuthMethod = value;
    }

    /**
     * Gets the value of the localPersistentUri property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLocalPersistentUri() {
        return localPersistentUri;
    }

    /**
     * Sets the value of the localPersistentUri property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLocalPersistentUri(String value) {
        this.localPersistentUri = value;
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy2 strategy) {
        int currentHashCode = 1;
        {
            String theUserId;
            theUserId = this.getUserId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "userId", theUserId), currentHashCode, theUserId, (this.userId!= null));
        }
        {
            String theUserPassword;
            theUserPassword = this.getUserPassword();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "userPassword", theUserPassword), currentHashCode, theUserPassword, (this.userPassword!= null));
        }
        {
            String theUserPassNote;
            theUserPassNote = this.getUserPassNote();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "userPassNote", theUserPassNote), currentHashCode, theUserPassNote, (this.userPassNote!= null));
        }
        {
            IpAddressRegMethod theIpAddressRegMethod;
            theIpAddressRegMethod = this.getIpAddressRegMethod();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ipAddressRegMethod", theIpAddressRegMethod), currentHashCode, theIpAddressRegMethod, (this.ipAddressRegMethod!= null));
        }
        {
            String theIpAddressRegInstructions;
            theIpAddressRegInstructions = this.getIpAddressRegInstructions();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ipAddressRegInstructions", theIpAddressRegInstructions), currentHashCode, theIpAddressRegInstructions, (this.ipAddressRegInstructions!= null));
        }
        {
            String theIpAddressNote;
            theIpAddressNote = this.getIpAddressNote();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ipAddressNote", theIpAddressNote), currentHashCode, theIpAddressNote, (this.ipAddressNote!= null));
        }
        {
            String theAccessNote;
            theAccessNote = this.getAccessNote();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "accessNote", theAccessNote), currentHashCode, theAccessNote, (this.accessNote!= null));
        }
        {
            String thePrimaryAccessUri;
            thePrimaryAccessUri = this.getPrimaryAccessUri();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "primaryAccessUri", thePrimaryAccessUri), currentHashCode, thePrimaryAccessUri, (this.primaryAccessUri!= null));
        }
        {
            String theInterfaceUri;
            theInterfaceUri = this.getInterfaceUri();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "interfaceUri", theInterfaceUri), currentHashCode, theInterfaceUri, (this.interfaceUri!= null));
        }
        {
            ImplementedAuthMethod theImplementedAuthMethod;
            theImplementedAuthMethod = this.getImplementedAuthMethod();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "implementedAuthMethod", theImplementedAuthMethod), currentHashCode, theImplementedAuthMethod, (this.implementedAuthMethod!= null));
        }
        {
            String theLocalPersistentUri;
            theLocalPersistentUri = this.getLocalPersistentUri();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "localPersistentUri", theLocalPersistentUri), currentHashCode, theLocalPersistentUri, (this.localPersistentUri!= null));
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy2 strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy2 strategy) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final AccessInfo that = ((AccessInfo) object);
        {
            String lhsUserId;
            lhsUserId = this.getUserId();
            String rhsUserId;
            rhsUserId = that.getUserId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "userId", lhsUserId), LocatorUtils.property(thatLocator, "userId", rhsUserId), lhsUserId, rhsUserId, (this.userId!= null), (that.userId!= null))) {
                return false;
            }
        }
        {
            String lhsUserPassword;
            lhsUserPassword = this.getUserPassword();
            String rhsUserPassword;
            rhsUserPassword = that.getUserPassword();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "userPassword", lhsUserPassword), LocatorUtils.property(thatLocator, "userPassword", rhsUserPassword), lhsUserPassword, rhsUserPassword, (this.userPassword!= null), (that.userPassword!= null))) {
                return false;
            }
        }
        {
            String lhsUserPassNote;
            lhsUserPassNote = this.getUserPassNote();
            String rhsUserPassNote;
            rhsUserPassNote = that.getUserPassNote();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "userPassNote", lhsUserPassNote), LocatorUtils.property(thatLocator, "userPassNote", rhsUserPassNote), lhsUserPassNote, rhsUserPassNote, (this.userPassNote!= null), (that.userPassNote!= null))) {
                return false;
            }
        }
        {
            IpAddressRegMethod lhsIpAddressRegMethod;
            lhsIpAddressRegMethod = this.getIpAddressRegMethod();
            IpAddressRegMethod rhsIpAddressRegMethod;
            rhsIpAddressRegMethod = that.getIpAddressRegMethod();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ipAddressRegMethod", lhsIpAddressRegMethod), LocatorUtils.property(thatLocator, "ipAddressRegMethod", rhsIpAddressRegMethod), lhsIpAddressRegMethod, rhsIpAddressRegMethod, (this.ipAddressRegMethod!= null), (that.ipAddressRegMethod!= null))) {
                return false;
            }
        }
        {
            String lhsIpAddressRegInstructions;
            lhsIpAddressRegInstructions = this.getIpAddressRegInstructions();
            String rhsIpAddressRegInstructions;
            rhsIpAddressRegInstructions = that.getIpAddressRegInstructions();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ipAddressRegInstructions", lhsIpAddressRegInstructions), LocatorUtils.property(thatLocator, "ipAddressRegInstructions", rhsIpAddressRegInstructions), lhsIpAddressRegInstructions, rhsIpAddressRegInstructions, (this.ipAddressRegInstructions!= null), (that.ipAddressRegInstructions!= null))) {
                return false;
            }
        }
        {
            String lhsIpAddressNote;
            lhsIpAddressNote = this.getIpAddressNote();
            String rhsIpAddressNote;
            rhsIpAddressNote = that.getIpAddressNote();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ipAddressNote", lhsIpAddressNote), LocatorUtils.property(thatLocator, "ipAddressNote", rhsIpAddressNote), lhsIpAddressNote, rhsIpAddressNote, (this.ipAddressNote!= null), (that.ipAddressNote!= null))) {
                return false;
            }
        }
        {
            String lhsAccessNote;
            lhsAccessNote = this.getAccessNote();
            String rhsAccessNote;
            rhsAccessNote = that.getAccessNote();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "accessNote", lhsAccessNote), LocatorUtils.property(thatLocator, "accessNote", rhsAccessNote), lhsAccessNote, rhsAccessNote, (this.accessNote!= null), (that.accessNote!= null))) {
                return false;
            }
        }
        {
            String lhsPrimaryAccessUri;
            lhsPrimaryAccessUri = this.getPrimaryAccessUri();
            String rhsPrimaryAccessUri;
            rhsPrimaryAccessUri = that.getPrimaryAccessUri();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "primaryAccessUri", lhsPrimaryAccessUri), LocatorUtils.property(thatLocator, "primaryAccessUri", rhsPrimaryAccessUri), lhsPrimaryAccessUri, rhsPrimaryAccessUri, (this.primaryAccessUri!= null), (that.primaryAccessUri!= null))) {
                return false;
            }
        }
        {
            String lhsInterfaceUri;
            lhsInterfaceUri = this.getInterfaceUri();
            String rhsInterfaceUri;
            rhsInterfaceUri = that.getInterfaceUri();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "interfaceUri", lhsInterfaceUri), LocatorUtils.property(thatLocator, "interfaceUri", rhsInterfaceUri), lhsInterfaceUri, rhsInterfaceUri, (this.interfaceUri!= null), (that.interfaceUri!= null))) {
                return false;
            }
        }
        {
            ImplementedAuthMethod lhsImplementedAuthMethod;
            lhsImplementedAuthMethod = this.getImplementedAuthMethod();
            ImplementedAuthMethod rhsImplementedAuthMethod;
            rhsImplementedAuthMethod = that.getImplementedAuthMethod();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "implementedAuthMethod", lhsImplementedAuthMethod), LocatorUtils.property(thatLocator, "implementedAuthMethod", rhsImplementedAuthMethod), lhsImplementedAuthMethod, rhsImplementedAuthMethod, (this.implementedAuthMethod!= null), (that.implementedAuthMethod!= null))) {
                return false;
            }
        }
        {
            String lhsLocalPersistentUri;
            lhsLocalPersistentUri = this.getLocalPersistentUri();
            String rhsLocalPersistentUri;
            rhsLocalPersistentUri = that.getLocalPersistentUri();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "localPersistentUri", lhsLocalPersistentUri), LocatorUtils.property(thatLocator, "localPersistentUri", rhsLocalPersistentUri), lhsLocalPersistentUri, rhsLocalPersistentUri, (this.localPersistentUri!= null), (that.localPersistentUri!= null))) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy2 strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public String toString() {
        final ToStringStrategy2 strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        {
            String theUserId;
            theUserId = this.getUserId();
            strategy.appendField(locator, this, "userId", buffer, theUserId, (this.userId!= null));
        }
        {
            String theUserPassword;
            theUserPassword = this.getUserPassword();
            strategy.appendField(locator, this, "userPassword", buffer, theUserPassword, (this.userPassword!= null));
        }
        {
            String theUserPassNote;
            theUserPassNote = this.getUserPassNote();
            strategy.appendField(locator, this, "userPassNote", buffer, theUserPassNote, (this.userPassNote!= null));
        }
        {
            IpAddressRegMethod theIpAddressRegMethod;
            theIpAddressRegMethod = this.getIpAddressRegMethod();
            strategy.appendField(locator, this, "ipAddressRegMethod", buffer, theIpAddressRegMethod, (this.ipAddressRegMethod!= null));
        }
        {
            String theIpAddressRegInstructions;
            theIpAddressRegInstructions = this.getIpAddressRegInstructions();
            strategy.appendField(locator, this, "ipAddressRegInstructions", buffer, theIpAddressRegInstructions, (this.ipAddressRegInstructions!= null));
        }
        {
            String theIpAddressNote;
            theIpAddressNote = this.getIpAddressNote();
            strategy.appendField(locator, this, "ipAddressNote", buffer, theIpAddressNote, (this.ipAddressNote!= null));
        }
        {
            String theAccessNote;
            theAccessNote = this.getAccessNote();
            strategy.appendField(locator, this, "accessNote", buffer, theAccessNote, (this.accessNote!= null));
        }
        {
            String thePrimaryAccessUri;
            thePrimaryAccessUri = this.getPrimaryAccessUri();
            strategy.appendField(locator, this, "primaryAccessUri", buffer, thePrimaryAccessUri, (this.primaryAccessUri!= null));
        }
        {
            String theInterfaceUri;
            theInterfaceUri = this.getInterfaceUri();
            strategy.appendField(locator, this, "interfaceUri", buffer, theInterfaceUri, (this.interfaceUri!= null));
        }
        {
            ImplementedAuthMethod theImplementedAuthMethod;
            theImplementedAuthMethod = this.getImplementedAuthMethod();
            strategy.appendField(locator, this, "implementedAuthMethod", buffer, theImplementedAuthMethod, (this.implementedAuthMethod!= null));
        }
        {
            String theLocalPersistentUri;
            theLocalPersistentUri = this.getLocalPersistentUri();
            strategy.appendField(locator, this, "localPersistentUri", buffer, theLocalPersistentUri, (this.localPersistentUri!= null));
        }
        return buffer;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;simpleContent&gt;
     *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
     *       &lt;attribute name="desc" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
     *     &lt;/extension&gt;
     *   &lt;/simpleContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "value"
    })
    public static class ImplementedAuthMethod implements Serializable, Equals2, HashCode2, ToString2
    {

        @XmlValue
        protected String value;
        @XmlAttribute(name = "desc")
        protected String desc;

        /**
         * Gets the value of the value property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getValue() {
            return value;
        }

        /**
         * Sets the value of the value property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setValue(String value) {
            this.value = value;
        }

        /**
         * Gets the value of the desc property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getDesc() {
            return desc;
        }

        /**
         * Sets the value of the desc property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setDesc(String value) {
            this.desc = value;
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy2 strategy) {
            int currentHashCode = 1;
            {
                String theValue;
                theValue = this.getValue();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "value", theValue), currentHashCode, theValue, (this.value!= null));
            }
            {
                String theDesc;
                theDesc = this.getDesc();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "desc", theDesc), currentHashCode, theDesc, (this.desc!= null));
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy2 strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy2 strategy) {
            if ((object == null)||(this.getClass()!= object.getClass())) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final ImplementedAuthMethod that = ((ImplementedAuthMethod) object);
            {
                String lhsValue;
                lhsValue = this.getValue();
                String rhsValue;
                rhsValue = that.getValue();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "value", lhsValue), LocatorUtils.property(thatLocator, "value", rhsValue), lhsValue, rhsValue, (this.value!= null), (that.value!= null))) {
                    return false;
                }
            }
            {
                String lhsDesc;
                lhsDesc = this.getDesc();
                String rhsDesc;
                rhsDesc = that.getDesc();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "desc", lhsDesc), LocatorUtils.property(thatLocator, "desc", rhsDesc), lhsDesc, rhsDesc, (this.desc!= null), (that.desc!= null))) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy2 strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public String toString() {
            final ToStringStrategy2 strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            {
                String theValue;
                theValue = this.getValue();
                strategy.appendField(locator, this, "value", buffer, theValue, (this.value!= null));
            }
            {
                String theDesc;
                theDesc = this.getDesc();
                strategy.appendField(locator, this, "desc", buffer, theDesc, (this.desc!= null));
            }
            return buffer;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;simpleContent&gt;
     *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
     *       &lt;attribute name="desc" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
     *     &lt;/extension&gt;
     *   &lt;/simpleContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "value"
    })
    public static class IpAddressRegMethod implements Serializable, Equals2, HashCode2, ToString2
    {

        @XmlValue
        protected String value;
        @XmlAttribute(name = "desc")
        protected String desc;

        /**
         * Gets the value of the value property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getValue() {
            return value;
        }

        /**
         * Sets the value of the value property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setValue(String value) {
            this.value = value;
        }

        /**
         * Gets the value of the desc property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getDesc() {
            return desc;
        }

        /**
         * Sets the value of the desc property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setDesc(String value) {
            this.desc = value;
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy2 strategy) {
            int currentHashCode = 1;
            {
                String theValue;
                theValue = this.getValue();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "value", theValue), currentHashCode, theValue, (this.value!= null));
            }
            {
                String theDesc;
                theDesc = this.getDesc();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "desc", theDesc), currentHashCode, theDesc, (this.desc!= null));
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy2 strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy2 strategy) {
            if ((object == null)||(this.getClass()!= object.getClass())) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final IpAddressRegMethod that = ((IpAddressRegMethod) object);
            {
                String lhsValue;
                lhsValue = this.getValue();
                String rhsValue;
                rhsValue = that.getValue();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "value", lhsValue), LocatorUtils.property(thatLocator, "value", rhsValue), lhsValue, rhsValue, (this.value!= null), (that.value!= null))) {
                    return false;
                }
            }
            {
                String lhsDesc;
                lhsDesc = this.getDesc();
                String rhsDesc;
                rhsDesc = that.getDesc();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "desc", lhsDesc), LocatorUtils.property(thatLocator, "desc", rhsDesc), lhsDesc, rhsDesc, (this.desc!= null), (that.desc!= null))) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy2 strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public String toString() {
            final ToStringStrategy2 strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            {
                String theValue;
                theValue = this.getValue();
                strategy.appendField(locator, this, "value", buffer, theValue, (this.value!= null));
            }
            {
                String theDesc;
                theDesc = this.getDesc();
                strategy.appendField(locator, this, "desc", buffer, theDesc, (this.desc!= null));
            }
            return buffer;
        }

    }

}
