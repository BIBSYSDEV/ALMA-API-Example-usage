//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.03.12 at 09:28:14 AM CET 
//


package no.bibsys.alma.rest.vendor;

import java.io.Serializable;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlValue;
import org.jvnet.jaxb2_commons.lang.Equals2;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy2;
import org.jvnet.jaxb2_commons.lang.HashCode2;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy2;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString2;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy2;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * Vendor Object.
 * 
 * <p>Java class for vendor complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="vendor"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;all&gt;
 *         &lt;element name="code" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="name" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="additional_code" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="financial_sys_code" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="national_tax_id" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="status" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;simpleContent&gt;
 *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
 *                 &lt;attribute name="desc" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *               &lt;/extension&gt;
 *             &lt;/simpleContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *         &lt;element name="liable_for_vat" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/&gt;
 *         &lt;element name="language" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;simpleContent&gt;
 *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
 *                 &lt;attribute name="desc" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *               &lt;/extension&gt;
 *             &lt;/simpleContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *         &lt;element name="material_supplier" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/&gt;
 *         &lt;element name="access_provider" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/&gt;
 *         &lt;element name="licensor" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/&gt;
 *         &lt;element name="governmental" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/&gt;
 *         &lt;element name="tax_percentage" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="vendor_libraries" type="{}libraries" minOccurs="0"/&gt;
 *         &lt;element name="vendor_currencies" type="{}currencies" minOccurs="0"/&gt;
 *         &lt;element name="accounts" type="{}accounts" minOccurs="0"/&gt;
 *         &lt;element name="contact_persons" type="{}contact_persons" minOccurs="0"/&gt;
 *         &lt;element name="interfaces" type="{}interfaces" minOccurs="0"/&gt;
 *         &lt;element name="contact_info" type="{}contact_info" minOccurs="0"/&gt;
 *         &lt;element name="edi_info" type="{}edi_info" minOccurs="0"/&gt;
 *         &lt;element name="notes" type="{}notes" minOccurs="0"/&gt;
 *       &lt;/all&gt;
 *       &lt;attribute name="link" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "vendor", propOrder = {

})
@XmlRootElement(name = "vendor")
public class Vendor implements Serializable, Equals2, HashCode2, ToString2
{

    @XmlElement(required = true)
    protected String code;
    @XmlElement(required = true)
    protected String name;
    @XmlElement(name = "additional_code")
    protected String additionalCode;
    @XmlElement(name = "financial_sys_code")
    protected String financialSysCode;
    @XmlElement(name = "national_tax_id")
    protected String nationalTaxId;
    protected Status status;
    @XmlElement(name = "liable_for_vat")
    protected Boolean liableForVat;
    protected Language language;
    @XmlElement(name = "material_supplier")
    protected Boolean materialSupplier;
    @XmlElement(name = "access_provider")
    protected Boolean accessProvider;
    protected Boolean licensor;
    protected Boolean governmental;
    @XmlElement(name = "tax_percentage")
    protected String taxPercentage;
    @XmlElement(name = "vendor_libraries")
    protected Libraries vendorLibraries;
    @XmlElement(name = "vendor_currencies")
    protected Currencies vendorCurrencies;
    protected Accounts accounts;
    @XmlElement(name = "contact_persons")
    protected ContactPersons contactPersons;
    protected Interfaces interfaces;
    @XmlElement(name = "contact_info")
    protected ContactInfo contactInfo;
    @XmlElement(name = "edi_info")
    protected EdiInfo ediInfo;
    protected Notes notes;
    @XmlAttribute(name = "link")
    protected String link;

    /**
     * Gets the value of the code property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCode() {
        return code;
    }

    /**
     * Sets the value of the code property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCode(String value) {
        this.code = value;
    }

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     * Gets the value of the additionalCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAdditionalCode() {
        return additionalCode;
    }

    /**
     * Sets the value of the additionalCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAdditionalCode(String value) {
        this.additionalCode = value;
    }

    /**
     * Gets the value of the financialSysCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFinancialSysCode() {
        return financialSysCode;
    }

    /**
     * Sets the value of the financialSysCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFinancialSysCode(String value) {
        this.financialSysCode = value;
    }

    /**
     * Gets the value of the nationalTaxId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getNationalTaxId() {
        return nationalTaxId;
    }

    /**
     * Sets the value of the nationalTaxId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNationalTaxId(String value) {
        this.nationalTaxId = value;
    }

    /**
     * Gets the value of the status property.
     * 
     * @return
     *     possible object is
     *     {@link Status }
     *     
     */
    public Status getStatus() {
        return status;
    }

    /**
     * Sets the value of the status property.
     * 
     * @param value
     *     allowed object is
     *     {@link Status }
     *     
     */
    public void setStatus(Status value) {
        this.status = value;
    }

    /**
     * Gets the value of the liableForVat property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isLiableForVat() {
        return liableForVat;
    }

    /**
     * Sets the value of the liableForVat property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setLiableForVat(Boolean value) {
        this.liableForVat = value;
    }

    /**
     * Gets the value of the language property.
     * 
     * @return
     *     possible object is
     *     {@link Language }
     *     
     */
    public Language getLanguage() {
        return language;
    }

    /**
     * Sets the value of the language property.
     * 
     * @param value
     *     allowed object is
     *     {@link Language }
     *     
     */
    public void setLanguage(Language value) {
        this.language = value;
    }

    /**
     * Gets the value of the materialSupplier property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isMaterialSupplier() {
        return materialSupplier;
    }

    /**
     * Sets the value of the materialSupplier property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setMaterialSupplier(Boolean value) {
        this.materialSupplier = value;
    }

    /**
     * Gets the value of the accessProvider property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isAccessProvider() {
        return accessProvider;
    }

    /**
     * Sets the value of the accessProvider property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setAccessProvider(Boolean value) {
        this.accessProvider = value;
    }

    /**
     * Gets the value of the licensor property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isLicensor() {
        return licensor;
    }

    /**
     * Sets the value of the licensor property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setLicensor(Boolean value) {
        this.licensor = value;
    }

    /**
     * Gets the value of the governmental property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isGovernmental() {
        return governmental;
    }

    /**
     * Sets the value of the governmental property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setGovernmental(Boolean value) {
        this.governmental = value;
    }

    /**
     * Gets the value of the taxPercentage property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTaxPercentage() {
        return taxPercentage;
    }

    /**
     * Sets the value of the taxPercentage property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTaxPercentage(String value) {
        this.taxPercentage = value;
    }

    /**
     * Gets the value of the vendorLibraries property.
     * 
     * @return
     *     possible object is
     *     {@link Libraries }
     *     
     */
    public Libraries getVendorLibraries() {
        return vendorLibraries;
    }

    /**
     * Sets the value of the vendorLibraries property.
     * 
     * @param value
     *     allowed object is
     *     {@link Libraries }
     *     
     */
    public void setVendorLibraries(Libraries value) {
        this.vendorLibraries = value;
    }

    /**
     * Gets the value of the vendorCurrencies property.
     * 
     * @return
     *     possible object is
     *     {@link Currencies }
     *     
     */
    public Currencies getVendorCurrencies() {
        return vendorCurrencies;
    }

    /**
     * Sets the value of the vendorCurrencies property.
     * 
     * @param value
     *     allowed object is
     *     {@link Currencies }
     *     
     */
    public void setVendorCurrencies(Currencies value) {
        this.vendorCurrencies = value;
    }

    /**
     * Gets the value of the accounts property.
     * 
     * @return
     *     possible object is
     *     {@link Accounts }
     *     
     */
    public Accounts getAccounts() {
        return accounts;
    }

    /**
     * Sets the value of the accounts property.
     * 
     * @param value
     *     allowed object is
     *     {@link Accounts }
     *     
     */
    public void setAccounts(Accounts value) {
        this.accounts = value;
    }

    /**
     * Gets the value of the contactPersons property.
     * 
     * @return
     *     possible object is
     *     {@link ContactPersons }
     *     
     */
    public ContactPersons getContactPersons() {
        return contactPersons;
    }

    /**
     * Sets the value of the contactPersons property.
     * 
     * @param value
     *     allowed object is
     *     {@link ContactPersons }
     *     
     */
    public void setContactPersons(ContactPersons value) {
        this.contactPersons = value;
    }

    /**
     * Gets the value of the interfaces property.
     * 
     * @return
     *     possible object is
     *     {@link Interfaces }
     *     
     */
    public Interfaces getInterfaces() {
        return interfaces;
    }

    /**
     * Sets the value of the interfaces property.
     * 
     * @param value
     *     allowed object is
     *     {@link Interfaces }
     *     
     */
    public void setInterfaces(Interfaces value) {
        this.interfaces = value;
    }

    /**
     * Gets the value of the contactInfo property.
     * 
     * @return
     *     possible object is
     *     {@link ContactInfo }
     *     
     */
    public ContactInfo getContactInfo() {
        return contactInfo;
    }

    /**
     * Sets the value of the contactInfo property.
     * 
     * @param value
     *     allowed object is
     *     {@link ContactInfo }
     *     
     */
    public void setContactInfo(ContactInfo value) {
        this.contactInfo = value;
    }

    /**
     * Gets the value of the ediInfo property.
     * 
     * @return
     *     possible object is
     *     {@link EdiInfo }
     *     
     */
    public EdiInfo getEdiInfo() {
        return ediInfo;
    }

    /**
     * Sets the value of the ediInfo property.
     * 
     * @param value
     *     allowed object is
     *     {@link EdiInfo }
     *     
     */
    public void setEdiInfo(EdiInfo value) {
        this.ediInfo = value;
    }

    /**
     * Gets the value of the notes property.
     * 
     * @return
     *     possible object is
     *     {@link Notes }
     *     
     */
    public Notes getNotes() {
        return notes;
    }

    /**
     * Sets the value of the notes property.
     * 
     * @param value
     *     allowed object is
     *     {@link Notes }
     *     
     */
    public void setNotes(Notes value) {
        this.notes = value;
    }

    /**
     * Gets the value of the link property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLink() {
        return link;
    }

    /**
     * Sets the value of the link property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLink(String value) {
        this.link = value;
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy2 strategy) {
        int currentHashCode = 1;
        {
            String theCode;
            theCode = this.getCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "code", theCode), currentHashCode, theCode, (this.code!= null));
        }
        {
            String theName;
            theName = this.getName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "name", theName), currentHashCode, theName, (this.name!= null));
        }
        {
            String theAdditionalCode;
            theAdditionalCode = this.getAdditionalCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "additionalCode", theAdditionalCode), currentHashCode, theAdditionalCode, (this.additionalCode!= null));
        }
        {
            String theFinancialSysCode;
            theFinancialSysCode = this.getFinancialSysCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "financialSysCode", theFinancialSysCode), currentHashCode, theFinancialSysCode, (this.financialSysCode!= null));
        }
        {
            String theNationalTaxId;
            theNationalTaxId = this.getNationalTaxId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "nationalTaxId", theNationalTaxId), currentHashCode, theNationalTaxId, (this.nationalTaxId!= null));
        }
        {
            Status theStatus;
            theStatus = this.getStatus();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "status", theStatus), currentHashCode, theStatus, (this.status!= null));
        }
        {
            Boolean theLiableForVat;
            theLiableForVat = this.isLiableForVat();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "liableForVat", theLiableForVat), currentHashCode, theLiableForVat, (this.liableForVat!= null));
        }
        {
            Language theLanguage;
            theLanguage = this.getLanguage();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "language", theLanguage), currentHashCode, theLanguage, (this.language!= null));
        }
        {
            Boolean theMaterialSupplier;
            theMaterialSupplier = this.isMaterialSupplier();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "materialSupplier", theMaterialSupplier), currentHashCode, theMaterialSupplier, (this.materialSupplier!= null));
        }
        {
            Boolean theAccessProvider;
            theAccessProvider = this.isAccessProvider();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "accessProvider", theAccessProvider), currentHashCode, theAccessProvider, (this.accessProvider!= null));
        }
        {
            Boolean theLicensor;
            theLicensor = this.isLicensor();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "licensor", theLicensor), currentHashCode, theLicensor, (this.licensor!= null));
        }
        {
            Boolean theGovernmental;
            theGovernmental = this.isGovernmental();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "governmental", theGovernmental), currentHashCode, theGovernmental, (this.governmental!= null));
        }
        {
            String theTaxPercentage;
            theTaxPercentage = this.getTaxPercentage();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "taxPercentage", theTaxPercentage), currentHashCode, theTaxPercentage, (this.taxPercentage!= null));
        }
        {
            Libraries theVendorLibraries;
            theVendorLibraries = this.getVendorLibraries();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "vendorLibraries", theVendorLibraries), currentHashCode, theVendorLibraries, (this.vendorLibraries!= null));
        }
        {
            Currencies theVendorCurrencies;
            theVendorCurrencies = this.getVendorCurrencies();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "vendorCurrencies", theVendorCurrencies), currentHashCode, theVendorCurrencies, (this.vendorCurrencies!= null));
        }
        {
            Accounts theAccounts;
            theAccounts = this.getAccounts();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "accounts", theAccounts), currentHashCode, theAccounts, (this.accounts!= null));
        }
        {
            ContactPersons theContactPersons;
            theContactPersons = this.getContactPersons();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "contactPersons", theContactPersons), currentHashCode, theContactPersons, (this.contactPersons!= null));
        }
        {
            Interfaces theInterfaces;
            theInterfaces = this.getInterfaces();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "interfaces", theInterfaces), currentHashCode, theInterfaces, (this.interfaces!= null));
        }
        {
            ContactInfo theContactInfo;
            theContactInfo = this.getContactInfo();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "contactInfo", theContactInfo), currentHashCode, theContactInfo, (this.contactInfo!= null));
        }
        {
            EdiInfo theEdiInfo;
            theEdiInfo = this.getEdiInfo();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ediInfo", theEdiInfo), currentHashCode, theEdiInfo, (this.ediInfo!= null));
        }
        {
            Notes theNotes;
            theNotes = this.getNotes();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "notes", theNotes), currentHashCode, theNotes, (this.notes!= null));
        }
        {
            String theLink;
            theLink = this.getLink();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "link", theLink), currentHashCode, theLink, (this.link!= null));
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy2 strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy2 strategy) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final Vendor that = ((Vendor) object);
        {
            String lhsCode;
            lhsCode = this.getCode();
            String rhsCode;
            rhsCode = that.getCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "code", lhsCode), LocatorUtils.property(thatLocator, "code", rhsCode), lhsCode, rhsCode, (this.code!= null), (that.code!= null))) {
                return false;
            }
        }
        {
            String lhsName;
            lhsName = this.getName();
            String rhsName;
            rhsName = that.getName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "name", lhsName), LocatorUtils.property(thatLocator, "name", rhsName), lhsName, rhsName, (this.name!= null), (that.name!= null))) {
                return false;
            }
        }
        {
            String lhsAdditionalCode;
            lhsAdditionalCode = this.getAdditionalCode();
            String rhsAdditionalCode;
            rhsAdditionalCode = that.getAdditionalCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "additionalCode", lhsAdditionalCode), LocatorUtils.property(thatLocator, "additionalCode", rhsAdditionalCode), lhsAdditionalCode, rhsAdditionalCode, (this.additionalCode!= null), (that.additionalCode!= null))) {
                return false;
            }
        }
        {
            String lhsFinancialSysCode;
            lhsFinancialSysCode = this.getFinancialSysCode();
            String rhsFinancialSysCode;
            rhsFinancialSysCode = that.getFinancialSysCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "financialSysCode", lhsFinancialSysCode), LocatorUtils.property(thatLocator, "financialSysCode", rhsFinancialSysCode), lhsFinancialSysCode, rhsFinancialSysCode, (this.financialSysCode!= null), (that.financialSysCode!= null))) {
                return false;
            }
        }
        {
            String lhsNationalTaxId;
            lhsNationalTaxId = this.getNationalTaxId();
            String rhsNationalTaxId;
            rhsNationalTaxId = that.getNationalTaxId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "nationalTaxId", lhsNationalTaxId), LocatorUtils.property(thatLocator, "nationalTaxId", rhsNationalTaxId), lhsNationalTaxId, rhsNationalTaxId, (this.nationalTaxId!= null), (that.nationalTaxId!= null))) {
                return false;
            }
        }
        {
            Status lhsStatus;
            lhsStatus = this.getStatus();
            Status rhsStatus;
            rhsStatus = that.getStatus();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "status", lhsStatus), LocatorUtils.property(thatLocator, "status", rhsStatus), lhsStatus, rhsStatus, (this.status!= null), (that.status!= null))) {
                return false;
            }
        }
        {
            Boolean lhsLiableForVat;
            lhsLiableForVat = this.isLiableForVat();
            Boolean rhsLiableForVat;
            rhsLiableForVat = that.isLiableForVat();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "liableForVat", lhsLiableForVat), LocatorUtils.property(thatLocator, "liableForVat", rhsLiableForVat), lhsLiableForVat, rhsLiableForVat, (this.liableForVat!= null), (that.liableForVat!= null))) {
                return false;
            }
        }
        {
            Language lhsLanguage;
            lhsLanguage = this.getLanguage();
            Language rhsLanguage;
            rhsLanguage = that.getLanguage();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "language", lhsLanguage), LocatorUtils.property(thatLocator, "language", rhsLanguage), lhsLanguage, rhsLanguage, (this.language!= null), (that.language!= null))) {
                return false;
            }
        }
        {
            Boolean lhsMaterialSupplier;
            lhsMaterialSupplier = this.isMaterialSupplier();
            Boolean rhsMaterialSupplier;
            rhsMaterialSupplier = that.isMaterialSupplier();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "materialSupplier", lhsMaterialSupplier), LocatorUtils.property(thatLocator, "materialSupplier", rhsMaterialSupplier), lhsMaterialSupplier, rhsMaterialSupplier, (this.materialSupplier!= null), (that.materialSupplier!= null))) {
                return false;
            }
        }
        {
            Boolean lhsAccessProvider;
            lhsAccessProvider = this.isAccessProvider();
            Boolean rhsAccessProvider;
            rhsAccessProvider = that.isAccessProvider();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "accessProvider", lhsAccessProvider), LocatorUtils.property(thatLocator, "accessProvider", rhsAccessProvider), lhsAccessProvider, rhsAccessProvider, (this.accessProvider!= null), (that.accessProvider!= null))) {
                return false;
            }
        }
        {
            Boolean lhsLicensor;
            lhsLicensor = this.isLicensor();
            Boolean rhsLicensor;
            rhsLicensor = that.isLicensor();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "licensor", lhsLicensor), LocatorUtils.property(thatLocator, "licensor", rhsLicensor), lhsLicensor, rhsLicensor, (this.licensor!= null), (that.licensor!= null))) {
                return false;
            }
        }
        {
            Boolean lhsGovernmental;
            lhsGovernmental = this.isGovernmental();
            Boolean rhsGovernmental;
            rhsGovernmental = that.isGovernmental();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "governmental", lhsGovernmental), LocatorUtils.property(thatLocator, "governmental", rhsGovernmental), lhsGovernmental, rhsGovernmental, (this.governmental!= null), (that.governmental!= null))) {
                return false;
            }
        }
        {
            String lhsTaxPercentage;
            lhsTaxPercentage = this.getTaxPercentage();
            String rhsTaxPercentage;
            rhsTaxPercentage = that.getTaxPercentage();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "taxPercentage", lhsTaxPercentage), LocatorUtils.property(thatLocator, "taxPercentage", rhsTaxPercentage), lhsTaxPercentage, rhsTaxPercentage, (this.taxPercentage!= null), (that.taxPercentage!= null))) {
                return false;
            }
        }
        {
            Libraries lhsVendorLibraries;
            lhsVendorLibraries = this.getVendorLibraries();
            Libraries rhsVendorLibraries;
            rhsVendorLibraries = that.getVendorLibraries();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "vendorLibraries", lhsVendorLibraries), LocatorUtils.property(thatLocator, "vendorLibraries", rhsVendorLibraries), lhsVendorLibraries, rhsVendorLibraries, (this.vendorLibraries!= null), (that.vendorLibraries!= null))) {
                return false;
            }
        }
        {
            Currencies lhsVendorCurrencies;
            lhsVendorCurrencies = this.getVendorCurrencies();
            Currencies rhsVendorCurrencies;
            rhsVendorCurrencies = that.getVendorCurrencies();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "vendorCurrencies", lhsVendorCurrencies), LocatorUtils.property(thatLocator, "vendorCurrencies", rhsVendorCurrencies), lhsVendorCurrencies, rhsVendorCurrencies, (this.vendorCurrencies!= null), (that.vendorCurrencies!= null))) {
                return false;
            }
        }
        {
            Accounts lhsAccounts;
            lhsAccounts = this.getAccounts();
            Accounts rhsAccounts;
            rhsAccounts = that.getAccounts();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "accounts", lhsAccounts), LocatorUtils.property(thatLocator, "accounts", rhsAccounts), lhsAccounts, rhsAccounts, (this.accounts!= null), (that.accounts!= null))) {
                return false;
            }
        }
        {
            ContactPersons lhsContactPersons;
            lhsContactPersons = this.getContactPersons();
            ContactPersons rhsContactPersons;
            rhsContactPersons = that.getContactPersons();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "contactPersons", lhsContactPersons), LocatorUtils.property(thatLocator, "contactPersons", rhsContactPersons), lhsContactPersons, rhsContactPersons, (this.contactPersons!= null), (that.contactPersons!= null))) {
                return false;
            }
        }
        {
            Interfaces lhsInterfaces;
            lhsInterfaces = this.getInterfaces();
            Interfaces rhsInterfaces;
            rhsInterfaces = that.getInterfaces();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "interfaces", lhsInterfaces), LocatorUtils.property(thatLocator, "interfaces", rhsInterfaces), lhsInterfaces, rhsInterfaces, (this.interfaces!= null), (that.interfaces!= null))) {
                return false;
            }
        }
        {
            ContactInfo lhsContactInfo;
            lhsContactInfo = this.getContactInfo();
            ContactInfo rhsContactInfo;
            rhsContactInfo = that.getContactInfo();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "contactInfo", lhsContactInfo), LocatorUtils.property(thatLocator, "contactInfo", rhsContactInfo), lhsContactInfo, rhsContactInfo, (this.contactInfo!= null), (that.contactInfo!= null))) {
                return false;
            }
        }
        {
            EdiInfo lhsEdiInfo;
            lhsEdiInfo = this.getEdiInfo();
            EdiInfo rhsEdiInfo;
            rhsEdiInfo = that.getEdiInfo();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ediInfo", lhsEdiInfo), LocatorUtils.property(thatLocator, "ediInfo", rhsEdiInfo), lhsEdiInfo, rhsEdiInfo, (this.ediInfo!= null), (that.ediInfo!= null))) {
                return false;
            }
        }
        {
            Notes lhsNotes;
            lhsNotes = this.getNotes();
            Notes rhsNotes;
            rhsNotes = that.getNotes();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "notes", lhsNotes), LocatorUtils.property(thatLocator, "notes", rhsNotes), lhsNotes, rhsNotes, (this.notes!= null), (that.notes!= null))) {
                return false;
            }
        }
        {
            String lhsLink;
            lhsLink = this.getLink();
            String rhsLink;
            rhsLink = that.getLink();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "link", lhsLink), LocatorUtils.property(thatLocator, "link", rhsLink), lhsLink, rhsLink, (this.link!= null), (that.link!= null))) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy2 strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public String toString() {
        final ToStringStrategy2 strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        {
            String theCode;
            theCode = this.getCode();
            strategy.appendField(locator, this, "code", buffer, theCode, (this.code!= null));
        }
        {
            String theName;
            theName = this.getName();
            strategy.appendField(locator, this, "name", buffer, theName, (this.name!= null));
        }
        {
            String theAdditionalCode;
            theAdditionalCode = this.getAdditionalCode();
            strategy.appendField(locator, this, "additionalCode", buffer, theAdditionalCode, (this.additionalCode!= null));
        }
        {
            String theFinancialSysCode;
            theFinancialSysCode = this.getFinancialSysCode();
            strategy.appendField(locator, this, "financialSysCode", buffer, theFinancialSysCode, (this.financialSysCode!= null));
        }
        {
            String theNationalTaxId;
            theNationalTaxId = this.getNationalTaxId();
            strategy.appendField(locator, this, "nationalTaxId", buffer, theNationalTaxId, (this.nationalTaxId!= null));
        }
        {
            Status theStatus;
            theStatus = this.getStatus();
            strategy.appendField(locator, this, "status", buffer, theStatus, (this.status!= null));
        }
        {
            Boolean theLiableForVat;
            theLiableForVat = this.isLiableForVat();
            strategy.appendField(locator, this, "liableForVat", buffer, theLiableForVat, (this.liableForVat!= null));
        }
        {
            Language theLanguage;
            theLanguage = this.getLanguage();
            strategy.appendField(locator, this, "language", buffer, theLanguage, (this.language!= null));
        }
        {
            Boolean theMaterialSupplier;
            theMaterialSupplier = this.isMaterialSupplier();
            strategy.appendField(locator, this, "materialSupplier", buffer, theMaterialSupplier, (this.materialSupplier!= null));
        }
        {
            Boolean theAccessProvider;
            theAccessProvider = this.isAccessProvider();
            strategy.appendField(locator, this, "accessProvider", buffer, theAccessProvider, (this.accessProvider!= null));
        }
        {
            Boolean theLicensor;
            theLicensor = this.isLicensor();
            strategy.appendField(locator, this, "licensor", buffer, theLicensor, (this.licensor!= null));
        }
        {
            Boolean theGovernmental;
            theGovernmental = this.isGovernmental();
            strategy.appendField(locator, this, "governmental", buffer, theGovernmental, (this.governmental!= null));
        }
        {
            String theTaxPercentage;
            theTaxPercentage = this.getTaxPercentage();
            strategy.appendField(locator, this, "taxPercentage", buffer, theTaxPercentage, (this.taxPercentage!= null));
        }
        {
            Libraries theVendorLibraries;
            theVendorLibraries = this.getVendorLibraries();
            strategy.appendField(locator, this, "vendorLibraries", buffer, theVendorLibraries, (this.vendorLibraries!= null));
        }
        {
            Currencies theVendorCurrencies;
            theVendorCurrencies = this.getVendorCurrencies();
            strategy.appendField(locator, this, "vendorCurrencies", buffer, theVendorCurrencies, (this.vendorCurrencies!= null));
        }
        {
            Accounts theAccounts;
            theAccounts = this.getAccounts();
            strategy.appendField(locator, this, "accounts", buffer, theAccounts, (this.accounts!= null));
        }
        {
            ContactPersons theContactPersons;
            theContactPersons = this.getContactPersons();
            strategy.appendField(locator, this, "contactPersons", buffer, theContactPersons, (this.contactPersons!= null));
        }
        {
            Interfaces theInterfaces;
            theInterfaces = this.getInterfaces();
            strategy.appendField(locator, this, "interfaces", buffer, theInterfaces, (this.interfaces!= null));
        }
        {
            ContactInfo theContactInfo;
            theContactInfo = this.getContactInfo();
            strategy.appendField(locator, this, "contactInfo", buffer, theContactInfo, (this.contactInfo!= null));
        }
        {
            EdiInfo theEdiInfo;
            theEdiInfo = this.getEdiInfo();
            strategy.appendField(locator, this, "ediInfo", buffer, theEdiInfo, (this.ediInfo!= null));
        }
        {
            Notes theNotes;
            theNotes = this.getNotes();
            strategy.appendField(locator, this, "notes", buffer, theNotes, (this.notes!= null));
        }
        {
            String theLink;
            theLink = this.getLink();
            strategy.appendField(locator, this, "link", buffer, theLink, (this.link!= null));
        }
        return buffer;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;simpleContent&gt;
     *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
     *       &lt;attribute name="desc" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
     *     &lt;/extension&gt;
     *   &lt;/simpleContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "value"
    })
    public static class Language implements Serializable, Equals2, HashCode2, ToString2
    {

        @XmlValue
        protected String value;
        @XmlAttribute(name = "desc")
        protected String desc;

        /**
         * Gets the value of the value property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getValue() {
            return value;
        }

        /**
         * Sets the value of the value property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setValue(String value) {
            this.value = value;
        }

        /**
         * Gets the value of the desc property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getDesc() {
            return desc;
        }

        /**
         * Sets the value of the desc property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setDesc(String value) {
            this.desc = value;
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy2 strategy) {
            int currentHashCode = 1;
            {
                String theValue;
                theValue = this.getValue();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "value", theValue), currentHashCode, theValue, (this.value!= null));
            }
            {
                String theDesc;
                theDesc = this.getDesc();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "desc", theDesc), currentHashCode, theDesc, (this.desc!= null));
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy2 strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy2 strategy) {
            if ((object == null)||(this.getClass()!= object.getClass())) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final Language that = ((Language) object);
            {
                String lhsValue;
                lhsValue = this.getValue();
                String rhsValue;
                rhsValue = that.getValue();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "value", lhsValue), LocatorUtils.property(thatLocator, "value", rhsValue), lhsValue, rhsValue, (this.value!= null), (that.value!= null))) {
                    return false;
                }
            }
            {
                String lhsDesc;
                lhsDesc = this.getDesc();
                String rhsDesc;
                rhsDesc = that.getDesc();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "desc", lhsDesc), LocatorUtils.property(thatLocator, "desc", rhsDesc), lhsDesc, rhsDesc, (this.desc!= null), (that.desc!= null))) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy2 strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public String toString() {
            final ToStringStrategy2 strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            {
                String theValue;
                theValue = this.getValue();
                strategy.appendField(locator, this, "value", buffer, theValue, (this.value!= null));
            }
            {
                String theDesc;
                theDesc = this.getDesc();
                strategy.appendField(locator, this, "desc", buffer, theDesc, (this.desc!= null));
            }
            return buffer;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;simpleContent&gt;
     *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema&gt;string"&gt;
     *       &lt;attribute name="desc" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
     *     &lt;/extension&gt;
     *   &lt;/simpleContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "value"
    })
    public static class Status implements Serializable, Equals2, HashCode2, ToString2
    {

        @XmlValue
        protected String value;
        @XmlAttribute(name = "desc")
        protected String desc;

        /**
         * Gets the value of the value property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getValue() {
            return value;
        }

        /**
         * Sets the value of the value property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setValue(String value) {
            this.value = value;
        }

        /**
         * Gets the value of the desc property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getDesc() {
            return desc;
        }

        /**
         * Sets the value of the desc property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setDesc(String value) {
            this.desc = value;
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy2 strategy) {
            int currentHashCode = 1;
            {
                String theValue;
                theValue = this.getValue();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "value", theValue), currentHashCode, theValue, (this.value!= null));
            }
            {
                String theDesc;
                theDesc = this.getDesc();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "desc", theDesc), currentHashCode, theDesc, (this.desc!= null));
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy2 strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy2 strategy) {
            if ((object == null)||(this.getClass()!= object.getClass())) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final Status that = ((Status) object);
            {
                String lhsValue;
                lhsValue = this.getValue();
                String rhsValue;
                rhsValue = that.getValue();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "value", lhsValue), LocatorUtils.property(thatLocator, "value", rhsValue), lhsValue, rhsValue, (this.value!= null), (that.value!= null))) {
                    return false;
                }
            }
            {
                String lhsDesc;
                lhsDesc = this.getDesc();
                String rhsDesc;
                rhsDesc = that.getDesc();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "desc", lhsDesc), LocatorUtils.property(thatLocator, "desc", rhsDesc), lhsDesc, rhsDesc, (this.desc!= null), (that.desc!= null))) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy2 strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public String toString() {
            final ToStringStrategy2 strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            {
                String theValue;
                theValue = this.getValue();
                strategy.appendField(locator, this, "value", buffer, theValue, (this.value!= null));
            }
            {
                String theDesc;
                theDesc = this.getDesc();
                strategy.appendField(locator, this, "desc", buffer, theDesc, (this.desc!= null));
            }
            return buffer;
        }

    }

}
