//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.03.12 at 09:28:05 AM CET 
//


package no.bibsys.alma.rest.general;

import java.io.Serializable;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals2;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy2;
import org.jvnet.jaxb2_commons.lang.HashCode2;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy2;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString2;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy2;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for digital complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="digital"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="bucket" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="region" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="ingest_url" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="delivery_url" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "digital", propOrder = {
    "bucket",
    "region",
    "ingestUrl",
    "deliveryUrl"
})
public class Digital implements Serializable, Equals2, HashCode2, ToString2
{

    @XmlElement(required = true)
    protected String bucket;
    @XmlElement(required = true)
    protected String region;
    @XmlElement(name = "ingest_url", required = true)
    protected String ingestUrl;
    @XmlElement(name = "delivery_url", required = true)
    protected String deliveryUrl;

    /**
     * Gets the value of the bucket property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getBucket() {
        return bucket;
    }

    /**
     * Sets the value of the bucket property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setBucket(String value) {
        this.bucket = value;
    }

    /**
     * Gets the value of the region property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRegion() {
        return region;
    }

    /**
     * Sets the value of the region property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRegion(String value) {
        this.region = value;
    }

    /**
     * Gets the value of the ingestUrl property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getIngestUrl() {
        return ingestUrl;
    }

    /**
     * Sets the value of the ingestUrl property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setIngestUrl(String value) {
        this.ingestUrl = value;
    }

    /**
     * Gets the value of the deliveryUrl property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDeliveryUrl() {
        return deliveryUrl;
    }

    /**
     * Sets the value of the deliveryUrl property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDeliveryUrl(String value) {
        this.deliveryUrl = value;
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy2 strategy) {
        int currentHashCode = 1;
        {
            String theBucket;
            theBucket = this.getBucket();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "bucket", theBucket), currentHashCode, theBucket, (this.bucket!= null));
        }
        {
            String theRegion;
            theRegion = this.getRegion();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "region", theRegion), currentHashCode, theRegion, (this.region!= null));
        }
        {
            String theIngestUrl;
            theIngestUrl = this.getIngestUrl();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ingestUrl", theIngestUrl), currentHashCode, theIngestUrl, (this.ingestUrl!= null));
        }
        {
            String theDeliveryUrl;
            theDeliveryUrl = this.getDeliveryUrl();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "deliveryUrl", theDeliveryUrl), currentHashCode, theDeliveryUrl, (this.deliveryUrl!= null));
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy2 strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy2 strategy) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final Digital that = ((Digital) object);
        {
            String lhsBucket;
            lhsBucket = this.getBucket();
            String rhsBucket;
            rhsBucket = that.getBucket();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "bucket", lhsBucket), LocatorUtils.property(thatLocator, "bucket", rhsBucket), lhsBucket, rhsBucket, (this.bucket!= null), (that.bucket!= null))) {
                return false;
            }
        }
        {
            String lhsRegion;
            lhsRegion = this.getRegion();
            String rhsRegion;
            rhsRegion = that.getRegion();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "region", lhsRegion), LocatorUtils.property(thatLocator, "region", rhsRegion), lhsRegion, rhsRegion, (this.region!= null), (that.region!= null))) {
                return false;
            }
        }
        {
            String lhsIngestUrl;
            lhsIngestUrl = this.getIngestUrl();
            String rhsIngestUrl;
            rhsIngestUrl = that.getIngestUrl();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ingestUrl", lhsIngestUrl), LocatorUtils.property(thatLocator, "ingestUrl", rhsIngestUrl), lhsIngestUrl, rhsIngestUrl, (this.ingestUrl!= null), (that.ingestUrl!= null))) {
                return false;
            }
        }
        {
            String lhsDeliveryUrl;
            lhsDeliveryUrl = this.getDeliveryUrl();
            String rhsDeliveryUrl;
            rhsDeliveryUrl = that.getDeliveryUrl();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "deliveryUrl", lhsDeliveryUrl), LocatorUtils.property(thatLocator, "deliveryUrl", rhsDeliveryUrl), lhsDeliveryUrl, rhsDeliveryUrl, (this.deliveryUrl!= null), (that.deliveryUrl!= null))) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy2 strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public String toString() {
        final ToStringStrategy2 strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        {
            String theBucket;
            theBucket = this.getBucket();
            strategy.appendField(locator, this, "bucket", buffer, theBucket, (this.bucket!= null));
        }
        {
            String theRegion;
            theRegion = this.getRegion();
            strategy.appendField(locator, this, "region", buffer, theRegion, (this.region!= null));
        }
        {
            String theIngestUrl;
            theIngestUrl = this.getIngestUrl();
            strategy.appendField(locator, this, "ingestUrl", buffer, theIngestUrl, (this.ingestUrl!= null));
        }
        {
            String theDeliveryUrl;
            theDeliveryUrl = this.getDeliveryUrl();
            strategy.appendField(locator, this, "deliveryUrl", buffer, theDeliveryUrl, (this.deliveryUrl!= null));
        }
        return buffer;
    }

}
